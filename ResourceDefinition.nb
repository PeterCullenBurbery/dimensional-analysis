Notebook[{

Cell[CellGroupData[{
Cell["PeterBurbery/DimensionalAnalysis", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->32035726,ExpressionUUID->"766da3cc-66e6-4c7c-8e5b-719ab109bfce"],

Cell["\<\
A paclet for applications of dimensional analysis in physics and the \
engineering sciences.\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellChangeTimes->{{3.877815477456703*^9, 3.877815499311162*^9}},
 CellTags->{"Description", "TemplateCell"},
 CellID->12597566,ExpressionUUID->"3379330d-7da0-48fe-aece-2a1057aecd1a"],

Cell[CellGroupData[{

Cell["Paclet Manifest", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletManifest"},
 CellTags->{"Paclet Manifest", "PacletManifest", "TemplateCellGroup"},
 CellID->196832285,ExpressionUUID->"521e1673-97dc-4ae1-8cd4-c2bc5d185bb0"],

Cell[BoxData[
 TemplateBox[{},
  "PacletDirectoryChooserTemplate"]], "PacletDirectoryChooser",
 TaggingRules->{
  "PacletDirectoryType" -> "Notebook", "PacletDirectory" -> 
   "C:\\Users\\Hannah\\Documents\\GitHub\\dimensional-analysis", "Refreshing" -> 
   False},
 CellTags->"PacletManifestPanel",
 CellID->115408480,ExpressionUUID->"f6ea679e-2670-474f-97ba-e8e49c8baa80"],

Cell[CellGroupData[{

Cell["", "FileManagerTopSpacer",
 CellGroupingRules->{"SectionGrouping", 99},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->290626070,ExpressionUUID->"6faa18ed-dd03-4d8e-a8f9-29017bf97224"],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Documentation"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"b8c2617e-1dd1-4b29-b45c-788abd35a136"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->106464210,ExpressionUUID->"3526eb66-b5d6-4852-9138-1400a0f50069"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel"}],
  BoxID -> "FileTreePath",
  BaseStyle->{
   "Text"}]],ExpressionUUID->"00a0054d-c22e-4b7c-be69-42face586ad8"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->457544415,ExpressionUUID->"299500b7-c56f-4b3c-8d93-3674f948fb10"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"DimensionalAnalysis.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "Kernel", "DimensionalAnalysis.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  FileNameJoin[{
    NotebookDirectory[], "Kernel", "DimensionalAnalysis.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->647439651,ExpressionUUID->"e1e6626e-4a60-4cde-a5a9-f52a797eb8d7"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"LICENSE\"", 
     FileNameJoin[{
       NotebookDirectory[], "LICENSE"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "LICENSE"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->522226745,ExpressionUUID->"0462ffff-737f-415f-83ab-5da0a091bdcf"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     FileNameJoin[{
       NotebookDirectory[], "PacletInfo.wl"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "PacletInfo.wl"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->430946652,ExpressionUUID->"643da818-19d4-411f-8f3d-c06cdc62b6d9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"README.md\"", 
     FileNameJoin[{
       NotebookDirectory[], "README.md"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "README.md"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerTXTIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->633899574,ExpressionUUID->"16c38065-4ad3-44f2-9333-7f67e2938043"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"ResourceDefinition.nb\"", 
     FileNameJoin[{
       NotebookDirectory[], "ResourceDefinition.nb"}]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  FileNameJoin[{
    NotebookDirectory[], "ResourceDefinition.nb"}],
  BoxID -> "FileTreePath",
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->203612688,ExpressionUUID->"c35cccd9-ff00-4de9-a92b-9bdc9ddaebd7"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->31839535,ExpressionUUID->"6d5829c7-1316-4df6-b164-8cf8aace736a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide content that you want to display on the main landing page \
for your paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b213fa07-86fd-45c0-9738-12684c50523b"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->184208365,ExpressionUUID->"6db01921-478e-4b6b-b3ac-969df3329699"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Provide an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. The image can be given directly (i.e. pasted from the \
clipboard) or as code that generates the desired image. \n\nIf importing the \
image from a local file, use notebook-relative paths when possible (e.g. ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{
                TagBox[
                 ButtonBox[
                  StyleBox[
                  "Import", "SymbolsRefLink", ShowStringCharacters -> True, 
                   FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Import", 
                  ContentPadding -> False], 
                 MouseAppearanceTag["LinkHand"]], "[", 
                RowBox[{
                  TagBox[
                   ButtonBox[
                    StyleBox[
                    "FileNameJoin", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/FileNameJoin", 
                    ContentPadding -> False], 
                   MouseAppearanceTag["LinkHand"]], "[", 
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "NotebookDirectory", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/NotebookDirectory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], "[", "]"}], ",", 
                    StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}], "]"}], 
              ShowStringCharacters -> True, FontFamily -> 
              "Source Sans Pro"]]], ") rather than absolute file names."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "65168488-9da3-4e34-ba57-350a6ad08fe2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->509724307,ExpressionUUID->"7a48d53b-8254-4b87-b698-579b36d498f3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
x4TBBc25p5YmhqcnHJZ+l8vt6nP2D+nUoBl0iUGViCvubue30XhcKh13zOgc
sYzb3dYtF0jN7pHpRzCahOPp0IcIki02CvcbvnSpvkztRx6XPyZ8ciU/9RJu
ZqrrHhGxQLFYzqPRkP/Foxm3GZQCKkgmFklkoG3swej8fP8Dk1llNzgUACAS
q4jkofNRn8Nhnh1aeuAYt8/MPFtcn9hZeP9izfXwwbjp6bDr9ePHyysPl1aH
JgenLW7roKFf7qZbFYMu3B2XQb1SiA9QIa4GEoASjkAEWFz97n6Dpt86PWYx
ul1W+6OJNwOvnI+n3VOLfVOzTyafPZyaHrWbLIODQ4MO2+Ck22nvsz/sHzI/
1HJN/Nt8rlhIpwkhhVZCJLJprRwGgysQQEbp6Mu3733pQiKdJ0x4mSBOowKG
EKFK8con+g3RnDFrepQXy8vqRdXVWqVAlDJWc0g86Hk0N2zVyOWQSu8YcjmN
Gqn9wdK7zYWNzZdry2vzM/0OvQZ3cIwm6/xA3/jYk2XHoH3xwca7k5cbS2vP
7rt7N5cfvHoTeLo0MzI5/3hmdmF0bvSh0603OV64rZRBDSiT2Mb7+5wyQKIS
KgQKUGFQySCVcWRAuzjyzP1w0D5gMQ66B0aGRtyTQ8P9gw8WntsnBqeto+Nu
m8Vh10+MjowM2vsnXI5px8yD6ZGFgZlpgwl3hrgcvoArkFnVEqlSyWkj82Ui
odLaN7M4Y9ZPvN5OYOXzLWpq9R1siIWZpWYbiCv887icG7ncB40QoVKZ+HvE
hahaiJz5vdtzQxqxTD80sTj/YG7uwcP5Aff8wycvnu6+WHoz/3bmAR6z2fsG
h0Ym3fOz40+ePd1bWV3ZeLbgHtx6/HLI+yi6/Wzs1eNXo6OLj98snDzbXXox
Mzs+MzH/8PHAxIJ5bmB80GTudw2OTbudQ0NDJi2ksDsMlsnpocEV64xmxLm0
sPDsoavfrNJMzS0uzU+4nI5Bg0KgUSl6bVat0TXiGB9wDjj1OrPFstS/ODsz
6H5yf+DZouGho1dr0PBpDApHKpNIBMxOvlwsUVvMI31KqWP51dJZLEdU3tX9
aaJoAUsj8WS2UrtKNf6GqH6BykVz81KhUu+XkC8Wq9jJztH+6zGzRGyaWVp4
tjg1Mnb/6cuVuZUnc0+e7yw/fb68+uTJ0uLDh0tPnr3ZWpxfmVl5Prg1/2B1
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
8ls7RRAfIJbegzqdjKodUKxJWJD0BtftHBjkc0RSmbJXJZZ+L5nn9WkH9NRu
iUbJ/AHi8CAQBLkqNdB9U2DVGFls2yDIkVPaOrhKTa95NFgt52uVYDaXyleL
hVo9W19fj9aQpB9vxP4A0SxmvCBRpT7TWm6SiJiKbaxlLOEjX0yFwpEkVixg
xF54aRQ3Z2gmk8VjN9z7LuZSqRyCnFXKZ6lUMhwLeQ7REpZNwqlycjeTKhYy
uC2M4oSq4EE/jCsZHIrh3jQWrCHRHFLM5HC/PBb2InAhdPLu6MP7pfDRi9WV
lVGXTW2EbDpqh4B2iyxwUzUkWXePjMRm/fD/dfPlnPa7IoWMo1MKxFKtEqIB
dsWKhgMoVST27LTBDckFLC7R5pjKGFDNSO4resgCOci5KWIKlJBSp5TSKK3f
3OZJrQrAYDOoFGrO3R8oKpt57Gke3kaKZ/lC6DBdqxZKdSUiuspeedS/guqn
jRfOV54Taz6r5QtzRvjWxK5CRB+6GgYfR9EYUi4haWJNTSoRI3YRSqVTeFRP
bGd2fIbrTCYFo8iJB8Vy4bivHA+jmVgEjR/DcV80uX8Ao6HIiS8G40FaOhwP
+nyIt5KOlVHEhxTTiAcN51N5xPPx417l4xv3/WeDIybn0MCoxWnlkoQ9t0j8
BbGRzu/sprRzaW1fdQtAFuUmWwzSepUsCUcuBCGFzTBhZHLHOWQ6WTdtdVtB
DovD5bRJOtSO+/wpkItrE1EUS5FZjL0GNaONzLx3vZ0EDA7KAfewQi+gUmlU
kWnIEs7h4lhM5JDtQOl82dn58uor/AqqjZnXxrLPS4X6DRIRNVnEWr56y70K
6g9iZdwVTkeIKf08RuxBVbdsyRyWzaVj0cRpNHPmyyP+WiBwjODciEWSmcgx
XEPQZBTNJOBAOutLn8XK6XwokQxlk95U+Qzxb4fXw1gt408mi2g26k2coqmR
14/W13ctC4t9TrtO3WPHYycRo5VOewypGVQS9WYbq511h8yRsAW3uqkQE5JR
pRRej1QnVJnVNg5La2F+c5cu1NvMJpNZr5AwTW0Skwu0qqRCsbTXIOCw1QN2
vVrYRRIIO++13WxVW4Vs06BOiVNM0NrOdxlXD2JbB7lgOhUO+tHKRZf9qwnY
X4fz6dZKY4Ppyvnjpjkj6hqz9Y0vSoVSMXnmS5WLmQyG61ChSJTM4kEZrkO4
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
KdiczLS0lORMzJ0rV299+mc/vfzdk8yHv7kdf//+veQiEgoLMsmvErMIBc9T
i0gYXAkpDU0TCEE2m4mmAWWDionw2ObZyev/URP9/4fdk9Odo9mjzZ39g7Mt
YAc7e0v7a+/WN1f2JyfeDS1Ee5Z2a45qpmeH1kamBodPF6Zeb9VNOd9ONu+N
1x2uLa9FZsbnIyOTUzWrltmNwcjo3tRQ5+hAYNIz1hFZX+qrrW9b63o9XhWZ
WZlcaexaH6+KDi0uBMNjYblP6lOqLVoJGQeAuHw8R5h9M7MkB5+PYQtYoIrf
UCVFQrUuBBbwuFweV2Q0VclhCpVCpBRzRAq9TiqQwjJurJ6jEfFEMoVBINIL
4m49+e7yjadJySg2VQxxmTyxiJ2bmFWQ8cO1+AuXvv0+5QEq6VEGnaeQ5lA5
DDinJJlFxvG5TZUTA1Mrh2ev8I9+K4zOD4zei3+5EXu4uxd5t7OytroYWV1f
PTzYOtg9OTxaW9yYHR6Otkc2ekamV9eXT94O725OjDfHpM3m6PDY5PD6wsz0
zHx0dHZryxNLaotD828np9qb29vaxqeXG+cWh4bW+4cPJqOdtT2rS8sjZSGk
b3E5PHwYrmvsi3lVTU2Hr9lcDrkRSkoBi5SXh6cVJqYW4QvyMDQ2E5TXc70t
GqXJ6faUq4V8DoXGFArlCqPVoIaFHCoBl4tnC7lcqIxOLszLLySSCThMXnri
owe5dDbm5cu0JAAEWWRsEQWQyCUAtfBVyuV7DxIzHqSlPHuakkOmofJINDUF
zqEwC2mETkeH6230tx0OZ1cXT86d6P04+sdNO6cn0b31jYO9o+OD7e2Do3cn
ezvLawuRucjc+sHA/ur4fF/Thn9kAJlo6Vtor1/Y2VgdGC91eN+8m5ncG91d
mVncHFofj7YM74aWakL9k2Pr0amtqfWOpfKF4fDUcLhntPFNb09HtLdtOjw1
sl43ujTa1TQ63dprexNy2zSVXL2Nn/6KSsPnogopxMwcdqyUZ7BAoVQSLPPa
WUqRs7691mk3lIJkRiYpm0oGeFJYKRcLhVyAzwdYgFrGIRW8Skt6+iLh0bNX
eekpBcT8hIdPk3MTnqYk3v8hJRdUQ0Ihh6hAxV+/ev9eSk7ydzeyOUJhDoEq
Jqtzc4qIzHwXv6Zpev3k5ODg+LdOdN5R9H4cHr77xzdFc7tLu/v7R8fvdnbO
Jjau7q0ebx5uzy31rfQtlI13Ts7OrgxPvolE5rcmxrfqR4diwaV/bHK1Z3Bu
YHOmpzc6FlmNBPfnZ7Ymo23rdXUNtd3h8aG1wbHBhZbR6beLPfvtvbPDvqbW
4bny1berlom2Lo9fM2RucdpiZbaAbrKK6MRCfGZmYjY5IwFHLmHRaByBEGVu
FRnqOUKJ2hlqDAV9Mi6PSMfg0UXEEpDHoVHEbCoglvBAEARAgI7LeRr/4mUW
lsF9ePHi/Ru//DLz1ucfffb5J59+cysurSgWsxgCNigQ8thckHj/DllMJ+Zg
cbhXInReEo3FMopqZiYXdg62dv+x2epcXr8f/+xER2ObK7sHh7F6LCant9d3
Nk82j5fXF6KzkenN2eZ103yrLOL3zFf2Noz29J7Wz48MbS/tzA+9iRxOzc3N
z64ubQx3zr0dqxpraVmy9lqGhhfn18cXxuZaK6N13XVLzZ0zLbOR0ak5f9fJ
6x7vaO9U92TA2dtU6fEGLfWwnK6wlptKsvNTU+8/wqBfpGFIFDyOCgg4fGEA
gRskAI4oMxms1fX1bp/ZodVq1Bq1XMzlkJl8Pg1fLCQWs0QyPjnn4t9fuH75
g1/H5d/47Oo3P/3p11evXPzlhW+++eTTDz5PxBKYChoAcKkoDDbh5YNnTBG5
KOFlbloyh0RJouQrdTZv/9jw28j82uH+P3XInPMv/M7H8U/p7GRvNLq7fXhw
8GOP4+HZddfN9amJ4bnanYaZhpWO2ejE2UyrudnD2ehw7fra0Hx3pHWs4239
eqQ9MjjW01/35vXK6drq0EJr03TP8MLi5OKbocoO63C0a2Z0r25teKdjctpe
3VM2t9w7fLiw2hyu84wj3eq6Mnu5NsDXCAG2pkpHLyYTsrIBCCDgSGQingTI
NQUisRSRuKycwmI2q9TW1OquMwed1c1N9aGgv6pKo9XA7MK8Qk4sv8n5hMzH
X3zzPO5XF+Ljn9//5vKdy3/30aWvP/oq/sXtj3524f6je1mQSkFIv/Ob+4+/
epJZyGCzgPiE7Jfp1EJcNuYFWACYWrw2V3VN6+DAUnT/xxdB/yeN9N+c3/2b
+ue8v7u4eRI93N45ONzf29/dmFuN7m8exB7k0v7bicbp6jqdJ2oZWHH2t3TO
HS33LVaOLUS3FyePZ06Hpo+Wt0fmFraWxzqMM/OTHXOvh9wtTXVNDV3Nkfbp
pq56de9IuGlAMzo3tzq8NhaeXLVXLrsH26tWWuqDTrNSJdbINBCIY5isSrmS
x5FoLKZYxmGWkDBUGcNOJym4PKXTLOeyuSIJEwSEAmWZuzpQWWHWq5QWvcpg
gEEWk04HZUpIkHbz8vcPPr9w5eLdmx//JuHZFz/71cefXX307OmNy1fu3rzy
MJ8kBJQqUFLC5PCZ6Jzc5Iy4F88yi17l4pIzKLkoW+B1c+dA79B8ZGhyaffc
g/41J7//GP9kZ2vjZOXdxvFZcDqNhaLD1e3p5beR4W3P3shE/eJsZHy9e2J+
ZHV4Z3B02LK1MDJsPOwcHKoZLRts8w20LL2ZHIBnp1eX+pCIqzc8NDU/tTIa
7jX22Nu6FoLmfuProTFVb7N1tTNUNxyOWNraAy3Kdrdf6NA4TEqrTKMHiVxY
qVaXcLUwpABVQgDAp+VxYK4e4fNLQRBxyAWQkEAh83DULHwhl8cTS+QKFVJe
5TGIBLBRxqTGVBLIzIu78+DmJz+7d/fyRx9dunXj6ueff3fz4me3cl4+iUtI
TnjwLCuRIBRoQJhckPcyH/M47crVK8mY3MKS22iRE26WmRFXsNIVau0fHJs/
C0bnvC9nDfwnW3v74ZXo3upB9Gh5b/d0Zyq6uLd1uje3vGBrUYyVDkxaZ3v9
0dWag9W5zYntJndj/07H6szU3nw00jNunWqLjkaGRnzhrf7ZWJ5rQGZMjS3q
WJrrb/R09iz5RmrG12bejvcE6obL3iB9le0d4b6+Vg+iNrhhDU8prZJKFVQU
OpNSlJaWn51N5pAJFGzKkwSWUqvW6yEZmcbX2sxSGqcEl5acXQxSScUsNgGD
oXFhvRYuFRsVkIjHFak5bPSdS7cu/+yX9x59+JdfPrifceNXH1744Nd3nz5J
yX3y6ZfPnz2KT37x9MnzB2gCGpP1+Nb92zdu/xCfX1LEl6kQxBFoaOwcmhgd
7Jvo6xsfnt/5/c/unH9JdPv70ZOdqcjO7uZx7HO4E4kluI3TSMtw40jn2tvZ
sY7xsaa5wfHdiG9xonqmd6Bvtta+6g0vDKxZh6xjs5M7bb3aoHV+cnrMXr9R
WxtuGRyeGB1yBxwVQ/IG/pB7sKFbHa7V9zT2hl8P9/VVeZGAvtXiO9sgK4VE
Ur4dMev4DHwGhZSfh8lKRWMLCwlUUuptlFgpEsrVZhHAEuocFVahiEfBERms
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
CZSC7DxK7B+FLJZIqkc4FCUfkBvseoFAQEOqK6xaPkmiRad9denD729kZad9
f/Gjb25T2OS4X/zkl19fufDx1W8+/NXlJyk5aHRuStyVW49TC1mlSiGXSaPg
8jMNGBjivR7zRDsnlk5P90/Oneg9OHOi483FjXf7ewdHRwe763NDq+MTb6bD
i+1DzVOB6qqmwcVmX9iobKX3Vpq8mrHlplGlzxEY65Gby5CgKoA0hjuavMPu
qga4vbpWVTuIcNp1fa42qLOhidnitPmFHf62Bie+xWRxNAmcUjPgEpvUNpvN
pOCDXAGbSgH0LrumtgqhZMUkNFaqrK5gsPFYOguQGvUiBoYokwMyr4PHkHAy
knEyUTGKANIy2cUsuQJkADyNnwFKITYPKjex+GoeP2ApU0opiJXx5P5nl776
4pu0opS7d7740wKOMP+LP/vJ3//6yrVPf/ntzWu376ezRAAg5TEIODw66XtC
3suUHBITIKpBjqp2tmOq+23HwrvzdPZ+HJ2cHkXX9zc3VtbXtja3dpYj0wPR
wYmB4dG5qbBq8XWtzq3pcc83dQy8rutsR8Kino3pLlV1haGlxwGNVzeOyGoa
fI1INVJpUuvL+lSCSq4PMTL9UhvcIDRprZ1eVKvSMOxy6xvkTVVOqNxiKTNb
xXyKCFRQhFJqMgckKxCfWu8KmlklUAmFqa6wwCCOADE5CKSlk/GYnLwSpVxV
yo8lNyyLTkQXkCiEAhpaCSlkAq7RYZDLeFQAlCggAcijmX1uloIK8nHPnqCy
vvqrF2lx2ALK5f/7do6e8fTJxz/94Ce/vPLi5s/j76fQpDwSTSbkASBYUpSV
8ALFZqIwJQSRUK6VjfeMuQ63N6aX3/3+B3hOTAnFYtHmxuHcavR47yAytx9Z
GF/ZXZttOBge7Zifro8FmplQna5FZaiTdJc3Oltru3y6ptrerppKaWe7q51b
Ve1y+2yyBpaPG+xQafWeLhYbCtYgvlrAFX4jtuYhYwFPh8YZgst9ntJWxKkQ
gEKtiEcV8jWxsh0girh5BSUSt65UW1mlZQkoNI3LLAVZIrFIIFLIGHhUVvKL
bBJJopaL6SSAQCZjC/AkUjYxVy6BpGIGbDVBAh5XKII0WoVMCkJ6OVdFJ8qB
rCfpqbe++uJRBoXOIeZlpMGU3KRH9z/55cW///jaTSyODrIZLICr02q1KimH
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
Hs8zCsiFRfkcEFbANo+l0lTrdnPEMQnGtZi9VCwRYiUlPvoEc/MvvrzzeWZe
ciEhNeHah19dvpuSJ0AkQLHCIeWJOUitELDWGRUAEceArXVTjXPrZzeGzs8b
fzeHv52jf7hxvDPWWNs9umTrGoo664enBocDXe094b5yPxLodroDYVsPVGPu
sAY0rlBlpampAelCKhGB2y2qcHc1yO1Wn0IqMsvLoYCeE5MhZcVGmb1YRlHK
y2QGmdHEkWrL9BqpUCKViksKUPgSdg6amI+jEBj03PhHKXRmZmZKcREJpRJZ
NSGF2RRor22z2HzVtRUmncaADFWqu7o8AonGrOWy+crqcjEDTyshYAmGoU4P
zLMhZSYQR5PCrCJ0QREo1Zlgvdvi0gdqKyUSPsDlGpEAC0+AwQxU/t382xdv
PL1zp4CVUiB69uzyd5cv30tkWb0Oic1v9ikFOnorW4a4bOIiLCAGOibaRjdP
T/aPj8+96Heyf/TjSJndo52Vla31wZrGmdfto55t91jba4+ros3UMtbU6lM0
hAIBwC9p0FRIg3BzRcDldellLm6rt8niqvVJXIjHafcpoVILjCAw2q6lCWEs
DJmoKolAKAfEFAFg0ck5gECDyGGolIMrIIBCHImWV1AE6XkUEpooYWGwadg8
tlAgMzo0EKRpbHQ1IBW1gTq7Ta/RlL0OKNuHWiQCqwXhi0ptTR4+i8pk0Tml
tdNtdhhy21UsIpnDJRQW5GbgQK3BJIddBovaFbJpVWxALlQo3PQCtBTIzCA8
fnb9aWLqzevZMhSqDHh599H1Tz+/R4c8DlBXrq4UmTFGXU0BRWmQ4tEsmdTV
tb14dHp4fHR8flb0Ozl7e392+f50bbilqXtoYrplsHNiodc/3vAmMt7cH/S7
dIGmZo/eUNnYVmVz1iurtY2I31ipRPytikaNrw2RqkJBalWlpMwXFEggLdoI
gko/SHYYSWajwsQvlcvM0goEgi1GmxLmayA+m4RCE1jSYiIpG4VmygtS8pJe
vMTRE/KuYgtlPKXRw4MVZpe7vBUpb6r3G72aMo2rxatv7OyEAasD4UCy8oCZ
QyczAL7C3NpfZ1Sbym0SHJnJoSalZ2YmEwGjSgVDLoVWafWarCYWTyuSSys5
BCzMy76V/eDO9Zy07M/SE6n8VxxL2v0n13/1wTWaq8EjKm8td7lhnZyntHFQ
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
fhD3Tc79zCcYJYBNi3uSmv6Mm5qf+EwCi4UKLSQWwyqdRwNbKgFOmZ3DKzNo
3HVN/pj7IIYyh6NMr1bqtRBAjBV5mYUJ8eTsJ2RQTZOwdVBtQKkQmzQW1//L
3ntHt3Vf6aKe99abmTcvczPr5WYmTlxiy7K6WESKJEgCYEMjQYAoBDtAdJIA
iA4QHSA6cA46iF5YAbFJJG0VS5bcZMd27MSx48R2EmcSx7HjosJOiX6gJDvJ
vf/feevKe2lhnSVpgdLvfGd/37d/+7fP8kJuKncqN/nKEgDGE+nAwnRCA+0u
amsjNnJdjEAe9Af9BYAHPVyrxuBimUQWi9+VBQ1cOleh1njyKXDltS8/u31j
Z/fW+vqtOy9j+lZf/49RWJD13z53ZuHp+dnZi7nppUzumfnlxNPRxcv55fEZ
z6lEOBXNzsdD/sxM4pmZ8ZmV2dyz0eXMU6mV2GuvvP3+T5965vU3ZmYvj78Q
vzjvjcwU3FUy7R9P5gfdsbGJ2YQ7ZDFr9Xab3wdYk578ZDYbBj3A6IhSaTEH
zP0Magu8kcvoZtgDGgEVhWMxuB0DZIJLO+YDMnG/S+PNTi5NRXOzZms2A4zl
p5MXL1+++PRCbiYxnstNpFPpSAg0a1R6S1SkD6hVTk3cpomk4hOvng5M+ucn
5gqpaCI3P790cTLp94eTcytnTrt7Ow7TGih9WK5rIDJtNqjkwgEWW27h2UGl
R6NWSrxWm8alZjOlUoFxfC565tnf/2n39vbuzs2bd6aDfAui/zl2d67/+uLc
7EQumckmwWAsnYin5n56JZKZXhxPhdJuSwjwZ72+pCu/MJV9Kjo+NXUpdDY2
vXL+1T+dSb+YeP7NC1cuvj55bmzxjPvpfPDMWDpumEgYcpkMCIS8Ht94wg56
XZGxTDw67o0EgfExt8OuV8jlajno4tJI5EoKWkEwuEc4Q0PkDkZbVy+JxJen
RpOTifGIzpmYyOSnw7lTgD1gNiXmcrFLZ59+5lw+nQ3GMunYWCTmK8DT6QR8
0ZDZEXMaEhF9GFzIXDmf8aRC2cXc8jPL84XHY+XK9PTc0sWrV18Kh0bIjBoR
htSDZvhUmaRbzR9ktmNbB5g6icqjNprVwzaNTmKyyfjDQ1wFsHjm/Nl3P/tq
d+3W7fX123vvYfrW6f9Psbv55R9+upRNR05Pzecv5nLhfPps9vS0e2566cx4
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
hCy3cLRpkJvXtZNx5Y8cKj7y+OMl9RgMtLhMFLJ2tuDQ1bgy+DHbtGlERm+B
w5qtBh+ogVKxTDKBclDB5XEJIg3PpPZqpCyeAjQLFWqlVANEEk6DyTs9Zde5
QsvTKYfTH5p763JoZfPG2uYdd/91o/79a+6/jjsWf2+Uw+3bBQgVLNr6zZs3
tje/uPGH8zq9ktbaqU9nZmZP5bJ+i1LCwqObmyCw4tqS0upHDzQ1Vh46UFp+
pOTRB0s6R8xW/UBrPaqN1NbWSiA0VtagYNVN3Ww2Ty5SGORDDkdCNz0nc3oX
lLkFwDi7DOQmzz3zVDQeTYwFw7HseG4+G3a7fd5R2QCrl4Wv72poxiGq4Nj6
Q8VQDIFMJrVxXEYyRdB+5L8dOQRH1LRU19QTuomItn6SHZXo+QeGi0c4sa+o
to19ouxENa6bjIbjCEbrCLEHXl9+tPTkUevUILWPjCqqlCvFGlYblNoEJbX8
i6BKJ2Z1y8wq+aBc3aMluoxuIY8zIHXMXPCGM0H5sNHpiMauvvjWbAL0JuZm
vD/ZuL66uXPrDojujru6j0tE9+KesN5LR3tstkdnGwWDtnrjwxctXo+MLfNl
pmYX5nIpj1Eu51GQsOqTxAZ06ZNH/mMfAtsCLa9BIKg1//7dg/gBiUpSIJjm
ZnRbGwkPL6+qLz1YXPgrlEGOVK5jARqf1Z/QhbRpMxACQTe4cGFeF5iKnnrG
PhGdsibNHl3GZvJ5lYOigYEOJgUziD1aVFIGgdfX1VacRPZSsZUkVKtYT++U
HkMebYTtR1QiEajmnoH2anGzHt+LIZsOU/APPlCKhlbXVKMYQkZrB482qpI2
Ig6WlP4TtArudBPbifDa43gH30D9cRm7DlWM/T62TNI/1MdXmB0CVnNHp7zP
bLJaOESGMRCNXIpZTAqhcIih9c+c/cmVM4uL/mz6mc92rq8WzH3B3u89dHc7
se53WvsriArOrODOttZurO+s3ry19dnvTy9nVcPA6YsXnnl6fjoVcEpHxD0N
paVljeWQJx8rK26CYvDI6sKHZaj6u//nj0qqGQK5oA/XCMUTiYU/qILiG5ta
4EUQAo5GVXc7uSM+uSYwOehIpqzgykTi6eH0RD6xGE/np56KLgALHk9GrxkL
Clmafjae1oOXkpoaEQjI0ZJ6SDMJW3G4qoWks8hkfOxxROv3jhc/TMI24bp7
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
EX9oHFDyOGQ4is4eVkp5fLnOm5556fVX/nT93V//+ue//HRjb3Tz2voepd1Z
0vsFRPdI7Kvb90D09fjYOyDaXr/2m199tLa99tnN/3zl3PnzM778VOhUYjI6
DUYXz84sJ2YvXvz56V+dv3o+l/TtjWIAYpGgz+vfm0se9DjMBp3WZDaPWpwA
aDHZDaORGAgWaM8HOscmXYmwPeKe4bncccHIaWDB5PRZwtQ8YOtTmwNen8dt
Nuq18sBc8pQ7KHONT8fkHQUXheuqHZFSbfgWArahrqWTVi136VSAsvSBKjJL
yWun8AYodeUYrsIiNWkDIxatTRGwW4zoJjKeLHV2qNk08ZgjiKsrLyWUliMr
IcewTXBIWSWKgIVBO9W2EY5WQEZgCC01qN6ikWEfrQKPqy8prW8qY0u90+MB
X8wGuJRdSDRpWKIyjDp8EZcn9sxP33j/w1fffO31t353Y6/xYevOmz72WmXv
m9L1Nzse9yrVe8ZsT1zv3i5oos3Vj978+UfXb375+1++9/alJBCcSsaDmcRE
enJp4dzZzEu5Vy688M4zb198+fmzuTDoC3gcoYI4cjmdLqOtIHyseo3ObHc6
3SCoNDnHk944GIkEPd4AYHZ7VE693mDUm8MWr94PDGVkfm9g2jfs0cUdHsuI
3Wq3Wmwup3vm1OKpKW/MEM0522E4Dp1LMTvUdmoztR+PIXdTqip7lVKheLCv
G40XyujtLBaVDGugqRQqPmAM2EGvDbDoZDQ2u6Glx9xn9WFEah2gaCO2caqP
VRyHQaEQeGNNRSOpoQLS2ttNIirsgJ5LwaFrT8ChDpEGBmlC1x6vYZqd8YWl
ySAIWpyqLhSJI6L3c4blWrPbD0Sf+skbb7z1+pWFZ9/+/eraaoHMtgtP41eb
W/eJL7vDZbv3stGdwx639jpAtvc8fkEPbe9s3PjNS2/86YsvPnnvvZcXp2Zy
cU8wEAmmstOZfD43lcnnlqeuLF9dvnr60sWliWgBQG4AKPj8grI2WV3uvZmN
ZpsT8IBOS246GHdrg66ZqbjPGwRHEz5bwBKxjskiDqNVH+GZM5kA4NT6dBFT
QG4Coz7QbdXKxGJXdnH6zNTEFOBLpnTtREEfe9Dgc6rl7TQuu5eAp5D++XBn
4da7jbI2FIPT2a0U9aMhDb0SpUFkVgSBoNOmNI+KC/q+pblboFYnCJQmw4C9
v69ThK6sKkJiS4sq6mGHfvzkkYrWLjwMimmgGzygRSWE9kCYLJtLQ0PXd8sL
2TS9cnkpEwIt2uG2mka2EQiAQMGqSdUeq2986fyFl6+cSV/54MO1zRs3V++M
d9hdXd25L0pE90547H5dpL7jy3Y2N7bu7MDubG5tr1//4Pk3P/ni8z//6uVL
i7nx7PhMbnohOpWaDgYm82dezr24OHvxued/+sYrr66cyacCgMul0RlMRp1G
IxJwqDSe1mF1guFEMurTucHZ3Fg+OpUd8wYT8WBk1ORQx1Rhb5DhArk2oZHr
5afmVeGg1SEPAT456HKY1BKR1Jc9nZhP5qaXAo7J+VEqUyAcGfHYqGJqB0PO
b27sYkEQnS09UqFc0YfBk6lilxK3r4qtkpi1ZqZK7Xd7x0yJqHyEiiU108nu
Xqe5mMIXUpVIHJ/UjCpHofoRBx56+Lv/7ZGSEhihlyk2CQQ8mdUHGGjkkhK6
0snp6NenEhajZ/LC5VzQYxuRUJsJg3qD2mi0uawGqz/ui08unr/8y8ls6tXf
vvPF9t3ZDoVFvXlt475x+LvfVInu5t47W/hbmxu7a1u7m9vbH7/wzu9+/8lH
v/zZ67OZfCYYCALe0Fg8kZmcm1uc8EZnZ+dnZ5+6cPH8hdefmUlEClraY1Jb
LHKxUsATG92gJ5CRZ7SxmDN+aiwzYwOChqlAKpTQu31xvzxSIKsxxpg+2RLR
mKKu8cGQakDmAl1GAxDy6yIDYf0o05Qen8kGMhPx1PKpZC5pMfEVHXI5YPAZ
AJOMYuhsGoA+/n83dKBFOk4tit2KLyS+3poyDBPZxVQ6QLcLjJkDZsAcUPTL
DMohnkKvYKC6JAwCiwBvJzft/8eT5TVVJceLDj98tAqJQODoIpdOrlLIHUk3
5URdG4mtd7ktulF/MpkIOF1+v1lCZLJIhCFHyAuYtXqL1WixAKnzLzydmjl9
4fmf/fHm9t0eiJ2dwpP4zfi9e8eI/jc9G7v719jjsnttIHtrsPNVAUE3166/
f/rlX37w0Ue//f2LZ/LTyVQ6PD+Tj6W9AdAOZheXL11ePDu3PHtp+fKlZ5Zn
xxORYKAgZWwucK8jxOQKBELxhHXcn0wHJw2Z3MSFyUA2Pns6GB4/FdZndKN6
e1wZ9drlo06HNNAbUJv1PpnfptH7Ur4R8fiwkqZhC6Pp3NhM8tSEJzebX5l2
muxOARDNOSzdI04vd6itv/oApJ49hMDpJK3obhLT5wT5FFQdvoTSxVVo9WZX
gTm1QqVcsDeoxjI07DHqWWRKB32ET8Q2I0sfqXqsuLICAoMcr6iorIC3MYX2
EemoXaezOlWsLjKx4OX7+/qFZtBttHn8gG6gC97aJzT7QaNQqbMAY+PTC/ML
8yvLU/7Z5YtXf/np1lfb2ztf16y/+nsQ/e9aNdq9e8jsmy6iWzvb9y5ufXV7
d+vm5vVfvf7bj377q9efe/HcmfnsWHY6DARMMfd0dPyZxXw2nJhMvHzlmUvP
vfiTNy4WVNH4WDDiioQKj3/UFQ34wpFwNBOJp/Op8cikL5s1TfnHLwX84Bjo
BUM+82AgzjSaeSL3gIlqCrrVXkHQbNQ5TAab26bXDGTksh4pR5xa+v+4e++o
ts81XXTOPXfmnDtz15kz+0zJ3jtxduKeuNA7SFQVmgCJbiSKCgKBugTqAiHU
O6hLNCGKsQ3udmLHLYnTHMc9Nu42HdFEhythJ9mzZtZd655119o7+f5gSfIf
1u+n5/d+z/N+7/u8bnunuVlp7Ops7++12y1GlljXYTBaNSI9uywVmRGXGI6q
Q1UQqYWJCRk1GqWSgobuigkAJacVogn1zcwmQh1Z3aCiUaisJoWsiSqmZkQn
5NeK8RAQJCLg4HuBsbEJYGBoFihq30chien5dF0Lu6ySR5XJqeUVhfHhsaAC
SpNEwBGrZfQiEABWRmPikTh6Pb9RUE9jCfmGTqtG33384pXrN4cn5ha8W2ZF
638e33+j4Pl5va37+Ak5/kbgrZ7y9XX/qO6F1dkfv3v4+P6d659eGuzpduqN
dkNPp8nZ1u92c8WOvq6+06f6jtnPdX4ycP7CpUsnOwxao9Zk1OjMJo3DarFZ
jWZnS0/LSXNXq6VTfsLZLulX9Tn1R62tUrtCqeYquHKO2SlTaXR1XKFSjtXW
kwRSH4iEFBIHq+PIqIRqtfuCua9Vn4lts7fora7Dx9vcZoUv0lnsErpcwWIL
i2Fxv0unV1FQFAIsJp0s1spJZbF/HxQdFhQByjlE4LW4lY0cAaEOVVODIUma
aiuZ1XAwMBGhqoelgQPDdgb5xFlsfGRgMTwlaPsHewPwFTieVkYtw4t1jfWs
mhxASlYZrUEilop9Ea0chZZX5WL5Yh5TwOOyGTS+TwE6TFrbyS+++PbO8OjM
nMcHomX/LXx7T3/z/UM/d43/OYj8ZWj+gLy4ujQz7x25880PN289+P7KtVPt
zm6TSm+yioxkO9ckPuIeONJmtRl6Dh+5cO7CmU9PnTp5pNNqsmrkKpPdbOu2
O9q72q2W9tZe1SnzUbP5uOFUe59hUKnuMup4RnGdvsHJaJRwGoV6eiNBgS+t
Qwv4ZIKW0yqk8aXcqjJ8q6iJWsPt7hm0WDslqTkWrUKtNrV19J0+1+vW86ko
tkijYMi4gZGJu3Kr06EFDBEhLZ9EVSjramHvRkQGHgxPzkSUkqhiBdsgkahJ
yAqBlM1SsAmIwqrcJAS/Hp4D2hMfAEwCBAZFR4VDMrOhUUHhMSFwhpBJFarr
+WKFQsyqLSktyc/KxTGrC9NzDpVXUTC1vGZWZS2fji/DVFObzRarvfPYp5+e
+uzrH0fm/VRoees53FprfxaJfpM4+sXhc2PjTTXjVkns8pJv+R+llY3FGe/0
gxsPHty6ff+rM6fPOuy9Pi5kUWulZuPh3iOfOlRqQ+dAj0l9zPKpZdD9ydlT
g31dDptFY2hrazW6fYS412W3d1m69MfM5x2dri4j021y9jtdDkerTau0kZol
MjpGQ28wCkksk4LB5gg4NLVULBQ2cvAFOZQeBbaCbekbaOtvOoovz3Mp+GwS
32AZOn7MebxTiq8UUNkqlgrzcXBiSGZJdEpubRMdlo8r5KiaxFQIaE9kZEJG
NgxRKtG2N+koFByBwpWo1DqjBh8Hri5JPVRGAOdAdmbFhoQF7NoPAIHDAND0
hLCDH4E/+hDEUElYbDJDppcKG+qpFZADe5PKsuPCknMLi1BsPJLAYSDBBGRu
cXkVV2s6/OnFU8eHBr+6PzLjXV6aX3qLobW3HjM/g+i3GI/W3567rr/lQ+tv
bECWVrYepZWVtfX5maVX335z6/bNW3e/OHV2yGHtsJrMBoWd5+b2KOxmldHl
6uo093eecJ3pPHny3CefnD7ispudznantbXF2t7ldrdb7K72tq4ewzlTb7PN
qh9yynX2ZolPnXGkFB2fR64T1VjQPBy5ohnOcdCoGgFLylNoeShYbpmgR4Kp
bzl67GR7j8FQVEnvbSJXI+tsPYd72mRuu6KaUJ1SatX1M5KjAQeBsDgcqoJB
hMIrYKhGkVxEqoiCQjJysqCpcDRNpW5ukAoKOU0kms7AUhATIhB5GUUwdAgU
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
JcpNJmUZtklRQOOKBQ1N1fxiUgEaW0mqKkULGxXOzpZGjt7Z32dpJGL5SqF8
sF8hJZdX51cZVDoOGV2RDyzWuOSYfDSdWtVYlZGQDIZmpSMystDYCnINAV+B
LICl5JTmw5AFWQgGkYDEVNRxFTK53Pd/yS0tagkZnpIQGRoaHQ8Mem/vgTgw
BIxAkxMCUyuYdDionF6ZDgDGhybv3B2EScAdwCg1QjqTI6SJk8IBCcEf7g0B
wNCMhtoiGJLbVJPGJVYwDz98/eOF8z0ne85+Pub13TyvL577IrvfCcPPrN92
fPjokl/C/MpPPX6piXqTq34jEt5gaHmLV29Rae+i/8XiimduYX7Wx4gevpic
nXzx7dWzgwP9vb1tDovJoFMqlCpfHJLLZHK1Xilkc/gcsdagVmjNTnmPveeI
xRex3F2udodJqVNqmxpbRXqVQsXgYegkE9vfCQSniVRJ2VIVtJhC4BVpGMoa
ModdSxGrRSqTRSPVtanEXAoaRZHRpWZ7S1MdrZScC23WEFUkcikiv7TxsKUW
XMhkc8T8sqT4jCxocm5JUUlZTi6dgCeQyJVFsMLqUiSFTyPT6bgaHJ3KVBiM
KrGosdEqZjeSEuPRESGB4UBg+N7AwBgfAtNyqrF5wKhqejkTm5Odlw0BJhWH
ph2gJRHiWHYdm84RCESytKTYuNT9gaFhETHAxDw8GVOCodJLq2ooshMPxmZe
fnv76oWvlme9W2ZOS5trfg7knfPdzmX/5Jj1tyWNaz9NkPmVrp/A83MR4y/l
HyvL61sn91vdUovLy76YtDTrmZl99d3tRy9ej3vGHt+9cfVkj9Ns8gt8nW87
a5bKVHqj1W612QzNQr6whsqTKNSmjp7mbl13p/VIi65X1qWyNZl8m59Uopbx
Ghv0EovWSaMTakVsB8+SXllNP5RXxxIzGlF1ZbX1lURqJbtF625T1mZlE5vV
HCIBgySIGpRuF59AQOWhYSUmNVlWTUIe4uis3XI8rBBPFJrKoaFRafCszBJ0
aUV5WgapuY5USyj1bW18Rn2TVa22OuVWuVOt1llNYn6zUu6QcoQ1CUk1gQcP
RsQDw/YG7A1ISk+OjkjBc3J/F4SuUhKgyaBEaE4sDludQAOC8Jo2OZMlZNU1
UuNTAPHIrDRIEiApHbYDkFuKL4/7J0gFq66KfXp25tWte9+dujg/Pe+7g6t+
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
Ru4LTMzNyqugcyg1VAqNWpmXlgpKK+UoJByKVquUyTQOd5d5wG6Tu10tOI0v
piiVqvp6eY1ZWlrZLNcfqkTXMBMJgbwSkZBLEwiF5GyijIhHVzGyICUFpXSF
Ts6toJktti51s8DQ2yUXmQ9Lc0GIiKDUtCpZCQQKrYBWZoUG2KFN4CxqWWFW
YlUeWd6Aq9NbW0RqQ6vz8NEet/OC87jtdHd/27FOH8u22FUkZllO9UfFKQmw
rGhAfqzfSQYQHhBxYPvu4MjwgIBoSE5GbHRc9K5/+G/v7nznvx7Y8XFc9PZ3
P971b//jnR0HAdkAYCQgLRmQRq2EJyRkFiF5HJFGLZa19nUMfH/t6djYdyP3
X04/Gp0envjh2at7SxOvVh975jcnph+sjVyZuzk982TBszq3ueBvFl3z51Y2
Nt5UXa+t/xUrtY2333Lt7dytDV+wWZn3fTi3tuwZH9ucX9mcGfZM3p556FmZ
mZmeWvIuLs7PeDfnVj3zK97lhbnN6amHr27ZbVI6mYhBV2ErSksxWGReSuDO
jz74+7/93R/++d/2QQ+hDhGrqypLUgExmWmFdUqlgM6RWVwum0HN4djM5kaV
oEGka20ymIUNNK6spo7NOEwB1LF8sJQTpTXNdApVUEtjCcjZZAWDWJCHLcKQ
WM2KZkphUlzMIaKyx2LqarO1udr1YlIqAJKEqCzkiLMTs+FoRFlqeLAeJzmU
UFFSjUOUp5b4sFwnaRZ0dZkd9r4u5/HuftfQ8TNdAz6ePdTqVhLoOBw8j5kZ
npkRlVhQBM6BAoIPBIRG7/to9+69e3Z9CADGx0XEZZckBW/7/Z79u/+4/6OD
4WEf797/x3fe2R4cE7ovYldcRmgkAh6eha+tKC6pIJUdwpHrJJaBwU+/P3nt
y8/vvZ6auHnp5r1bDy4+nJ1aHR6ZeeWZmZ3wfD3z4vvpF+PLMxs+lrC5sunj
octbzHPJPy92/a8eRL7Aufp2oO3a2vLM1OuJ8TmPd2J+dmJ0ZH3VM+V5fXtk
dHNmdnPWs/LoxZNX3rWFuSXvyvTs8qKPFE3dmhl9+sOdT+U+9ZNfTCYTKvH4
QymhH/zr7w8Gf/juzsCdf9gRk1VUiMzLzc9KCA8phuXRlDp5o0qlVCq1lvbD
DpdRr+6w2WyKdqWxsdlEx9cp+WwKTsvhlVSJ0JUYUh2eUVQppPEbeTi4SEBl
IqDwYnolT6vllmVlZAcDUitoRUVUgVxv0ChVJZD4xGxifRkBHRCYnYerQqbG
hggbhNjI9EwKA19bBkJV1ChMOnNfp6rdeqTT3XH09GlL58CpHv1hX2yi88to
pDJABqMyOCUlGoREJgOB0Qc+2LYrYG9geERocGgIIDMvOy7wYBQ46qOd+w8e
+HhvYPD+g2GhB9/d/sGHISlRH+xIjQtOT4ytpRKJNCaNgCPiaQqzQalQ2bqH
nJfvv/Q8fPHw6wdPH156fPfF3RtTs96xWc/Yg8fDN2emRxfXRjYnFmZH/VVa
i6tri3M+EjqzsLJVEvJXDqI3bd9bhsL+7KF3y6dicfjJ6NPR1Zmx0eEfx+Zu
zW+MekbGr5ybejT/6Iens97F9bklnwL1eibGnn45PfPq/srLI1wSOju/hk2r
roBHbPtfH+3cF5+aEBUde3DbH7YHRscBI2PB0ISYmLzMArpcq1b4BJpSpVKp
ZWKNVtEsppjNYq2siSqiS/Ti5mKWmslEaxor2PjaGjq3VlqnZPEMWmZ+loGI
5yNzMwpJKp2KhYRCsotgNdXIwmyG0tFj5VMEOgoOXV7DZNSUZOwIRMCRJCQc
HEpQMPEpkcEoCoPH11rNFofD0mHWizosh7uOn3a1tLnOHjWbXDKdsoJfTGMQ
iiPB1eziqD2AjCRw8Ucfbvtgz573fveve2MSExJSIICcosyDf/jHfwOGfbxr
9669+/ZHhe3YGwcM3Bf28TsfAMCxkB1gZAiQgCQfyi5lKTRqZYNQ3mJpcx+/
9OnlE3efjT2+fN594sHd4S/ufvn0yejs9JOrI+OzL+Znx72b05ubT+fuv5wc
nh7x6ZeVNX+fvtenaraw89cNIv+ft9ZV/hPlJyOTC17v5Ni9J1Mjns2pp589
efnIM7Hxcn76h1cP7639MPPq5eySZ2R0zheFFmeeP3+88OrFq8XX4zN3h4yC
6opyGqE0J/L9P+yCJgKSQMCQjz987w//8s72fSEf7w1KACfGJ0EyStkKrcHI
5TVKFCq1Wqszt1td7arGrh6eytyuFUiZRD1HjBZyWTJadj2ntpSOwpMoLCJT
JaUW52qJ+GZMZT6WYWimViAxZHoaGJ0bFRpH6bRI2XSWWGVUqZUyEpqJQ8Hh
BaB4TBESFoVSMujF4R+llBGILI5a6zenVarVKrfT1TZo6zrpNmpcbpfcyq5p
zKdRyhB58FyUmJAeFBEZEIEAB7z3YRgw+IP/sT0iLjoKmATLA7//N7+PSgkL
Ddq3e8dHgR9FhH8UBEo8EA1N3PN+ECQrGB4TVpaXTE6CFlWTaXyF09nZe+TU
5W+/vPXNvZuPr1+8eHf03uuJa9/cenZ3+vHzu7ceXxybXPVurG961m8vjDx8
cef14sjC6ML6wurG6qp/ANjK2l/fdvafdVa+cYRd2yoxW1xf3VzyvnoxPr6+
5p15Pnp9dGZycerl3acPzz+YGPF8Nurx/evt7+8szHvHRkcejY7Oz06+9r4Y
ff3y1tkuPQ9HxBTlgsKBeQVZYAgMBgbs3L1/7869+4L3BcRAwLFRwLg0XKO2
1erQykWNzaoWi8OqUtRrjWqOqIXGZyiE5TqtlFmm4Ojq6SVsdUM8p1qDV/Cb
+WS6sJ7JqFbxKJoKop+bs4iMZmtXR3tzE7WGgq0rTw+NKW2ydLbbbVZ1RRoe
mY8uKMgMPpRVAQEgeTw+BhgZAkYAQH/MwuHpFDxDJDG3u9u6B45ZjS3d7g6B
wYaj45BCMgWJxDCqYKTSSviufwoGBhBzowOjwZDkcGBKMiA6Kio7LzPs/QOx
0aHRwOjgA8ERgeGREfHgmL3RUAQ4+ONISOYuYAkoh5BXi6ui0UmUulqO2mq3
O51D5we/uDH81TcPn986/fndq5/dG3v88sxnF+4tDi/PLq5Mzm2OTl4evftq
9Pnchnd11rvhXd/qJFr3H1Eu+5H0M4j+CpD0H0Hk38X88mx1ya+7VjeXl549
vfNwcXZp8vXos7HJqSnv9INrIz/MvvZM/Tg2u+R9/e2FL5/OzY9PPBh+/aPH
++TV3MvxhzOPH317/mi3sZFdVYrF5MGROWlJIHhxXnpQWHToR7v3HjwQlZoD
CQ+Oi0ojqNp8LFiuNNgcJkWj0mrrllkU7OMtjr5WkcYgVVQr6mh6giBN0iCq
QInwRZxCLo1ZTW+UU/DMulYh04wml4itaqXK5Gh32p0KKUugoNekQNJy8QJj
t7HNolNWQYtyMtHZBahoVEJ5aHABmMssByb8cUfqrj0l9VRkNYNQTq9rEXcZ
3TaDo71HZVA2NNOJBGRTaR2TxsyvpYOyIIdKkw5EH3wHXZiRkgyGQLIzIGAI
KD4qFlGUDoIc+JvAuFRwbEh4ZGhgZCoCErQzPDItHxIUmQlFIrIqcpLLeDgk
USiR+wfhyNT2gVOfXDv1xVe3f/DcvvN8ZsLzQH3n28HrlyYej4+/mH35YvXZ
2qvXr36cfuJdmF1bXVlcmlv2rm2s+itH57wrb/q0fgLRX0Nv9X8AkX8X8xsK
rPrikL9WfGNu7tHI2NLc9MsvvpkYeTjjnRj++tbl2cXZz66Nj76cHhl7dvfH
8blpz9OnN59MPZxcGZkY/X76yYtHN84NuF3tVjEZTaSi0sEJsSGh8WBgMCgT
ng2F5BTuiszMh4aGJMSlE3S9A13WfrtS1KTQmXQWTSvXhyqdTGLAyWSEJkGZ
sbxIxhJBeSCMjN8sojdWMFlUAl5prYYWES1MirOani+ykYQaq72t3dXt6mnR
qNDguKRsDLNZq5O1m+XaRiQSW1YNL60G5oWVbd8G/j9J6OJIwN/8H1mxkEoa
PDCLSieQahXVxiYL32CVuJucHHwltayZK6NVEriU7RAGFBqXmIPL+/C/7A1M
ROSCYyJjM5Kio+MT48JD4hPCotIhO3ZHwzLigkIiwj8OyT6U/NH20F0hsMxo
UHkVlkgqSs3IIhLoXDKG1CRTtXYNfXrxE+epE9evXLnqGb/18En/1YW+b4Yf
Ltz13B8bmZy8/fnrKxOfv3y9uTmz5l3ZnF+e35hfnffx0vlZn6pZWNs6iv0r
AtF/YhTgTy+uLS+vzs8sra8sLW2uzs7enl5aHv/i5csjP46NTr7qv/Xg1ezI
6NidS0/WPC/vX3x0fXbh/qMvvhp5uOR5PeJ5Pf7C89296f4hV/+xE1cv2Jsq
y/BVKFgCNB0QFBCPgCUCIZmpGYjI6KjIgB0fR6fWWDXujuNup9XYarGZWzh6
l7pHItVR+Bod1SmhM7uNuCaZDaXkWEk8OoFMUwtwdXxCDZRfT06vqpbncQVN
uBK1UmwwS8jVJLKso9+lVEQeQmWWKysFYjo8O62sUSyUJB+iY4L2ACJRRYjU
hERoJqz4veRSKLJYQEg5uPt9sECEQ5TicSS+VtPCERBqkWRuA4fBpNZgmZV5
IEg2uAS4N6EcWwgBBEGRGQmp0OyEiJDAg+Hg2ITwODgUAHs3NSUUkR+yf3/c
9gI8HAUMBKamJiYmp9RklNVLBCgchUBgSvQ6VYvC3N2vO2m2fWV98uKHz178
cM59f+Lu9eGFLy+f/WHh9cPH+ntXr7+8NzH2YmLFh6Apz+ajH+aXJsaXHo16
FxcmferFf/60vPhyZOavAkH/zof6bV+0v77D74q/tOGdXVpbmp99+ODh5DMf
Y74/fOXR07HJpa+HL98ffrE8du3SV8NjnudD337tHfe8vHrn/I3RsdfPr3x+
5as7tzxPvx68cv3sqeNHz58YsvLIRFT4PwQEBh8MCEvMTEuB5uRAoLB0UCIg
NCA2o0TcdeTw8YHung6LTt7Eq9NI5P1VOpPS2qPWmPWlWhmrqlaBra0RkDnF
FGajuKauEkWuLsLkEHi4IoxQUS5qFDPoRpFQKaOWolB5PKvKYODCoMh8sYFD
4xeHAYE5PrnvaOCRkBmZZcTomERYcQkcHI0prqGhKSQoMCgKHBGLKkaVoGoF
chmNUYfHl5bll1ZTyGQ6g0Iny7GxB/+v9IwMGDwDlFWSEZOWnxwWvAMUeTDg
wEdBgPDEqOhUcDo+BAJJzAAH709IfBeYlVJeGJwGCc8k1eaUwtFlGGIJmsaR
Gtu7e3v1hvbu/rarA2eGb998YD76mfv5p5+aHlw+8+jetyNzyzdNd7tejo89
urM5+9XkzMjm06XxqadPphZmX2+OedeWV/2pFH9l4Pqmd27+Tf7xL+sVsvHv
1uZb44lNH4h84JlfWvDpgZX5mdevpzYmR+98/sPkI5/OfHT/7Dc3hidvDV95
cf/Z2vDnNx2zz0fvX7h6YfTp8KOpezdP3Pv+5euvb341qDC57O3t7cePtenY
5HoeJu6D997fsTW/GQDJBEVFJ4Biw0P2HUxEVMhtp3suHB3sdXe1tzl8ettm
VphbbE6pok5g0lY6MOpuGh7P1QtFAqqQwqzgMtFYSimsBFvEKoRncAjFQpWS
xTKIK6tKM0Fp2ZmkNpXKWF6RXoq1KrglVWHvh0UllpAVAzpeHhAKy6eWZSfE
Z+TnZUFwuMryAmRyZHxSIQkFydudkpEAQlbA4SWlGDyDzWbyhBwmg0GvqEql
k0IOQcM/2BYChiGKQHsOxEVGAwKiA/YGBOw9GLE7MnD3vn2JNTlJ0BxQTGTg
vpAdCekJ+flYUDYl92/+rhBRWFtSJlLamlvdRwcOD55x9n966bNT335y7cnp
z46f/vr+/RODl+ce3Lp3+f6Fr898Pvrj9I07t4a/+nLE88WPYw8mv5pYe/Ri
c3lqfmlzbnPd6z/LX1v3nzwtbC7Pr2xsri79RUG0sfEfQPRmk/Wx6pV5z8zc
4sqqd3p87NXI9Oz9Lz7//qvbS4vfTDz74fHDV48nzv3wjdczPPHl4Mjw2A/f
3Lt0+8uXzzzPr158efvWwxc/fnHt036rzGJo1UiN2g4jv4bEIcL27P74QFBI
eNjugJiYoL0B0UEff3TgQFg6qk5rH3CfPnnuSL/L3qKSiARSBam3WSRvUzqs
cqeWZ6bUUxs45SpYFZaj4Ot5Ig6BQK0uLyNlVx5KSacVg6p1LVSsSM8ilFWU
ZBdRS+09CllqARLPtTagUvMP7o4DAmEldU61hl5cWlFOZeCyEhMhGVmoyhJI
JDjj96EpSdBcaGh8GgqD8PFlIBzpi0HNCiWRziSWF5WUyYsZWELdH2L2//e/
2QbIyMqC/umPewJTEGBgWHB0VEBARGBcwAd/+mNgMR6QXAgCQiN27dsfFReX
VUhAwRBUVnlCObIyKxVDVTh6TpweGjxz6dLl699cOXX5c/e35x5cvnf93K3b
X928dOXodbPN9cWTZ56bn09Ojiw+v/H11esnXj99Pjk/u7g5P+1jR1MTazMj
PrW8tLq+Mjc1Pbu54tM8vkj0F4LPf4qhn0drrfhI9fKsZ3Z+cWH8ycNnI/M+
4Hx+4ebkyOijx0c/+XH42f1Hg5f7X3heTV377vtPno9898nFp3ennr66c+na
xUf3Pr/++Prpr26d0SgdR3t7HDqr1qKqr8TXHAIERQCig/YHR767O2Dfjp0h
gLCQiPiUNCTR2j7kHuo5MXTlwumj3fZWnVWhOinv71CpOToRWy7EWYUCGkuM
bqL7flZMPhlLZxCxOCYLXQMvoEKqBfS0bIGhDl1vUZCxZFRoTHWR7LhIUATG
UrStcngBJDICAgbBYEhBg1FLQeOJRGgeClXgU1boSmZpRGZZOgiZn5mRGA0u
LUJW5ELgWP9YTSKTQxc0K2VcOkdSpiRza+OJsbGJaZD926IKEFFx4LSigujk
qMi4qP17A5MgYQeDPw5FUADROdD0vHhY+I7/++8/zqImE+pwxUSBgF/NoFFY
ws7+ofOfXbzw2dVbF0+cHewZ+O741btHznR//9XdZ08uH7929psnX09f/6Tz
y1H76/HHN4fcZ6+/+HpqemJ5yjs7N700cmtj+Mnc6JOZ2ZnZxa2e6q0tzS/6
/4ri0Nu2Vt/nvo1sbXluzjs1Pfr4wVPP8ub0nU++vvF8/tVm/71nZ26NfXLy
U9OXd1ZeX/3x6u2Zpz+c++LSD6N3H/743a0jn1wZ+/bid4+vn7lz47DM2X9m
oL/T1GFs4jJoVEJxalBUQlzowYj4XQFhB/eFJkISEkCw3CJ8vcly0n3eNdQ3
eLSvy2HU6+RCVoNAKRMYTVpWj0ngyjc66IUiiT6HUs2qojY0cTicqmJyfVFN
aREvs4rEroJUixu5PL2UVkNDhsVgMY3uRmkTHEuSSySIQ8EhPuUNzgDBapoU
Bu4hDJsGO4TKiY9MzIBhTfzAg6n54BpiOaoInp8dnwTPTERQKYQ6TCNbzmKx
OTxGdS29EilAFTUUV8PSoZDogBhwCgCBxpGwCXHBweHBe3bsjwAEB8eEROdV
Q6ISUxH5qVmhkTu2RcaXy2tgSCK1EovPrRFKFapjJ85d+eLK+RODnx3tOXPm
ZOe1zpPXL/5w4cL5U6IjvSMXz9/42n3361ePHz3/+uWt+zdOnxofmV6dXlp6
OfL43r07YzdPbbx4uTw3seofEb/sQ8/q4uKSD0hef03ymx6uvzyCfqLWaytL
c/PLvk13buHV6xfPR2fnp3+4ff30g8ej05/cO3p/ZeS74VOHv/h8ZmTsYdu5
Gw8nvC/OXv7KM//gytX2M/eeDH7y4uGXX9z4/O6V88dvX7zS19Yib5Ga1AoZ
Ax4TCQQC4oCAhMTg2PioGFBaSlycj+BiWQqtuXfgxLGTJ768dvFkj8NsUrUo
K3qlMp3GbCCYRLWK+upkppBL5NYKpUqyEEtorONRC8pJJdgyTHVuEqyalUei
stTNcqVG2cikUMnlWqNKrcZUcMQcQj44GABIA8XFRKYSLTSllVava6ojFUTt
2AXIRsBbJAd/90FoUCEyPbcIBs1DwOE5+Ri6gKLAWXhmvorPbJAK6EQuJze/
PAcTjYFGJOXCU6KA0Rl5hdWEnKjAgPDwwODYPVFhIeFBSbi8wqSQxIzU7OiP
YRngjD2xUJGRhWYqlC2q7r6evu5z5y5cvnTu+ODQ6ZNHTl240fvJt18dPv/F
V67z9lO3v/pi/NqNq98N3/30ypffnTg5dPf58Ofj93+cerL27PGro/cmTlxc
HHkxN7W5ueRvqPbOzi8vzYx5fRub73ea/wuB6P8FQ8sLsysr6xtLnsmpl69e
Tfi02ZVb4zM/eh7evfPt+fHvLnk77af77r16YO15OHjh1a1Ttx4Ojj4c+ebs
0P1PLnz2xYOrl4ZefPfs5s0L10+ePH22zeboPHvcqRIJq0HRkMIMIBCaCgJG
JqYAkzPT46IiALBSqqrDfbT7tPvcyUvu3v6eDmdHt0khcTSYDBISy82TtPU1
Kp2EJl4zo4xJrqeXKYnymkI8ubCYTIHB8IiKfWlkCq6pEq2QS5VtZnpNEzs1
o01tldFxJS0yenZ5JASRlA0O2r0XzNAnYEx0mpTGJJVmJSdBoTiAiJOcDARm
4nxCv6asOCojPToRVYNXMFpRlioJmlaUgRM1Uf8f4t47qO093xLsN1tbta9m
p+a9mp2Z192v+3b3vd03dPc14EAySGQFUBZBAomgQM5I5GQyEhkMKCFQRAFl
oUQWGWxjnHHExsaRZAPGRitw97x5u1X7z97uUQlEKBDF7+hzzvl8PyGeFEHA
w0MwtPTkpARsIABMhAWe+Q6Eh3i5uXj5egeEeSDDgJ5nw+gAUti37kBvFPoC
Itgf/jUwOKKExSAl1Vxq1yoGzaYJq81qMlhmbywtqjiiVf2URDppeKOTTI5r
ZmunNm6aRm5LTJyVZ3fWntx/dP3R0uaDl6u39/om9fND9x7d3Xnn+PDKiZ+D
ra3jvTdbh5/3t44/HHw6KVH7e3HZ/1DNf20YOF1ud/zF0n90SrOTtu+Tg3tn
hNnef+X8u3YO39x7sL/7YfXOncWtzVsvBpVrc8pnm9eXrwtX7R+Xp+Zn7Qv3
liYs9idPJq4N3JeLjdOzFr1tcWVp/sGNYfvi2JJdMDAglOu0cnZLXXl6BCTM
FwnwhHv/IQjmB4DCnAyDiEL4R9bwOBJJP5snHRTo9AaDStzHbb1U13SprL2f
15jZ2ZNKKyhtqqiIy6BklaWRMwvp9NJY/5gcHJRIisNGhl3Cw/G1pegcDIxU
c4nR2dtMhcSncS71UZOwOS0leF8gNiYqFObuEnQWWp8bnlbUXBrZkl+M+cEZ
mjAh5Fwq2AsUi0R6e6LxEUQMFkkpQuRQ4qmsSlYOi9fW3lRfkRiXA4eEopFB
Z/7l10AYwAPo/ftI3+8BGIyvy+++/er/+A//6o/3CgT5nvOCoiNDgrx+ex4S
jAP8CRzudi4+g4zC0rqFbFl/u10yKjf3TAzL55YmbgmEi1arXClVisduPrxh
1PNtV+6PcSUCo/j69KMbT2f0T+cuv3q0/ebW66tGk+S5/fGrzXXHzsH7w+13
28tzT55+XHWcDno4XRt/Opjl4JTS/leB6MuwqsPDk0/2HQfvP7zf2d5zhqLt
J3s7D3a2Pz5/PHv91sb2vdmnV9eevV968HBOszz+YO6KzDYy82L5uWLp8pXZ
27cWpcbb808mrSP2+RmbXmcc1drMEhlPqDQYtfK+TmFbaTYFhw4HArzAsdiL
XhFhYRFRSHBwCDQMQ63sFghEA33CIbVcLpdJhX0cdn9LRw/zUj0jrTyT2dzM
7W0vTaovohOSa2nUFFpxSWkmMSUZHZ8eER0ODs6IwxKycuFJ4GB0YrGTNUmh
nuCc7sbLhISM6rLEgD9egEdgQL5/OhcCiS3Lg2LyepmJPbX0cJ9gcEQmNTWN
ggAAQcFhgAAimZRFiadRa7H51KKkgszW4hpadkFWWvmlbHJG0NkwPAyb5e1/
0eWMJ9AnLBQdHwNx/fUZT4CXuy8I4eEbcNHN1RMQDosDg7xCv/4qJe4rF3KM
V1YrpyEr/VKn02RKu2wGie3qpNaiV4xOaXVirV6htkimBlTSsXH9+JBmycgz
T769YZuvuD7Debf98N69RW3puOzN+qZjc+/jq63XW7c3769+fH1lY2b+6N3e
rtOV7Zxc04/vP5y0HR/9HZX1/xNEXyZ8nPQSHBwcf/q882rrpIls++PbN6s7
b9fXX+5tvHj8duv5xjWdZvj2/KtlrWZEv35zhWdeHrfcWTLMWB89eTnff3VO
q1yzrRg0aq3RZLbZp1cXJrXCwQG+0mhQDnQxWspS4wm4SLzH955w5y0ADUfH
komY0BAQJrmwsk3E4XJ6OQMDPKlUNHAypbilsqG7q62jpby7srf0Unk1kiUo
gdILkrPTE1OLG5lO7qKgAYkZPhExvkERaQRiVAaKEgQCQzD0LJDbWY/gMkZT
c0paQwEB5unmAw51AgDs5wJOK2gmhObwGolVrYyOy9WpOFBpYgQ+EuTjfS4k
CBxLpuT7BWeQiioamutrGhobKqtry4SDjLLCTGohARYR7ucNSYyCY6MwGBwc
hgx1+8U3gS4eAVBogPuZ775zcffy8QvJJsad9QJRgnBoKCYmxDvcN6Otp4cv
FYm7ewV9Usu0Ra9UmW3DOq1RqxlScW297GmL0WqTzFiNg3N39VbNQ57pxcz6
2uKCZW5mYsomfazfufPo4b29t3dfzT5V31u//XTRsvd0e9tx7Hh/z/F5d//j
4d7u/tHpCvm/X+n+vwPR/5iMfHDw2Ulnx4d7LzfeHR7tv3/99OHbRy9e7b56
/WzlytVr8xu3r84aJjeWn67L+5dXNhUz0zLVrEJuN5mmLPcmlqWWm8s3FwYN
85M6uX56ZXXVMjup4vVyWVKZpJ/L7myqLqMlxSCh0OBzoRFe/gkkCBgZm5qe
GIvEJdLKa9r6enu7OzvaW5vYXC63XyIRcptaOhqrqsvKL2WK6xtL+hqaK5uy
C0nxxHR6fjmzqSozLZeCoZUh4NRguH96LA6WFUmFhKOCgqikwPOeQZjWqmZm
TVF7OCgkBAIBIWKikIQIv+TeAS4NQ2OXItJbyxtYzgjHKogEhuJgfv6/BgQG
YsJxmfEpFXmx9RQaNS+/gVZe1ZtHT0pissvjYGQyHEEhwyK8XcERgW4/upz1
+O3PfvYN9NwFABgWfP77r3/+m/MgdFR8ZhIW6JpIo/zhh994ktJSaPHRMHRO
l4Anah8an5OZxrmycatArBsSDGuteiN73m7VzHKWh/rtko1l1eO5vslF24J2
uUZnnn5+fa1Huzh17/rNO5uPN+/Pzd63PVE9vf16Y/+V49PW3u6RY9/+6nj7
w+Hh6a7hk5qLk9qQvyuITgfl/dt0bYeTwI4d++uvN1/tHuy//7Bxb+Pl68dv
3r7evHv97rvdd3dM+rWHGzur5iWZav32rVbVZclEv3pFP3/7ikXEm7klmVuy
62S2xVG9xjo9oRVLNeYhqULUpx7kdnWzuxitbQ25OFAgmAqPScQS83MjsFGU
nKKCLHx2cU5eTVtHT8/JknImo7apvYsrEfMGOtubyktrawQ9lbIGZnJVWTqx
tqKxuD7rUn1RJq2sPBWXmh0dk4i4GIuOPBuLh0My0GR4QgKKmpmAggYiU3vr
utua81qj4DB4aFBYam0jLSslrrC9sraAUNydH5ndVt/BKs8vSqZA3QNQ0CDw
bwPAAdAQEMEviEbIb2nq6G4vaMqvTs9isHnt1Wkp5dTSfAyERMvGuH/vAz73
r//8s3/xgISc+dolFBwCgqEQoZ7ffusBgmHJEUmobFhtRhQE+LULjkpOrmtr
b+8VDkok0hGhSmFXW4Zk7HbjVcvEuHTINCuemdb12XjXzGP3pQ+trRNjk7bO
UTNrhX178sZ45ZWF6RHLyPrC1KZSf9t8ff3OznWnr9/9vL219X7r+ubrT5tP
T89fD/c/fj48bUj+uxHavwPRvzVJOzl1792r+29PehB3d/dfbjk2Xz/fvX/r
3o37t+/P2qaGdc+eLNmnuXL1wubEuHjszpxRqWpjTU8taOzSqzMTNnv30NgD
45BCrdcqpNJBLreluafJKQV6WAIJt5nRWEJCwPFUOgGfVliWF5+TnpZbXncp
n1RUmpZR28ZobWnvbG2obahsbGnnDopZ7JYWRkXt5W56aWH9JRmD0SJhMWPT
COEVtRWpMZSy1iynp4sCgny9wiKw5xBYgH9CYCyClIRPJMOAEHhseVNdT1cD
mVFKwkKg0JgaAa80JZtOQ//vTo1V1ZyKo7pFVDRVVWZAkMG+fmBwCNAdhYGh
wYERmYiWQEZMRTq9lNZex+4WM4qS8xiXcuj0zMxsvIcXPo8IgWKwKDjA2w+G
hvoBw6DBQD8oBof09QrwO+8Fy0wBZ4SVkaJKU9DYxHhcWkI1VyjXamQjMnWf
iG82iETGqYW1Ze7ImFk7PCoy9nGttpWFyekxwezMymS9dVW0MD47srBaNLOg
vX5LeeXp/B17y62m/s2FjXfbR1tH248c23tvJu9cvbK79uF473R+78kVPd38
/fHvatK+NCIe/089J4dHjqNnD15tnbTT777beu+Mlu/Wn7+9Z1q4tbO5ef3G
3KNrbx7oBmavz928vTY8Mjqn0Elrp6/dNvJFrQuKK5qHwzb50OJjs3pIY7JN
zF5Z0SrYXClb2NXNE0ol3ZfSk2NgyIRselpibEpFSUpKRVlpJaOtlpZGo2UX
MTs76+sZLQ2lRaXVjOamHrHgsozT01pVVVvcymypLG5No9SQUQ0t7UU15fTU
BGJSZW9dQmpFGiEeEeaFCgtGxvp6Yc/HIPBxUaiYgD9DEmmV9OzCts6MmhZ6
XCQlM5/JKc+KT81LCnJDN1bU1BDRsKSaIlggIszPPSgECMbCzvliwsNjIxGx
0AsRIAa1qay1u70tJ5GS1yaRtFdmZVfjwZjcLAggOgbr7+GPxEAiAv/s6hMI
xl4EAi64XAhEgoFByOAfzwTWRQYHwfDxePeCvKCohtYacX9nK984MaFnye12
iVg2v7A8Jui3XpVq57UG07BtamZFvGTVme5p+QyZqvOhwLC4usg2r95enTDd
fWy6/UxjXZQ8u7+19/jZztsPuy+3bz7V3li/+3HhrePp50PH58P9Dx+dYuik
s/rTSenO/1IQOSX1wcbTD5+O3799+/ZkLtfbjZ3b9+4/W3fysZO4V+Zf2tc2
ZhW3r1vtcq11eXneYJZ0zkin2GblndF5s22yo3OpRaMdlfSLh6enhxVW/qBE
oenhi6VyaV97CZlKwqHj8nKplCJaZn5qCrO8srq+tbM2i5aZXc5o7RYwGpjN
1XkZ2TWN9VVMNovZzWA2M1uYRR35Dcw2Zk4Nua21Po1ZkVmZRU1JS8uvLYqK
SMTFEnziXJFQXFQmyAvxIwGJxUU43XlIfEVxJiUcxZAzaxhlWRk1Hc2NNd0c
5qUsl5+hzjFqLtXERYFCSlJdvLAI8K99gy/CyJEuF5GYcHJcJAlH+mN+XkFl
SVNFQU17B7M2sZ6RX8Zg1DOLUklxxOgoj0A/7yAswvvbX/3C1eOCi9uPXoGA
sy4egS4u/niMlxe82Bt9LtMrDhgRHZ+XHkroLGCy+kQKhXhCL+E4Q7V5VCKx
r9r1ujGFuVu39PiGdsHcP3dPpx/iqPvY2gGpfZEzPT3L0CjUG7aHN5dHF9tt
j+5PPpl9//bezvrOu7VbTx+P7r/9tPXesbX3effz7uHe9u773bcvTqX10d9W
Ev2/w9xfU4unLQMfne9X737++Pnj9tqdN3df7R+9317demZeXnz28sWEaGVu
bfSaTGDevDK8Nq9eWHwwNzU0zBp5MD7e1zKrF+unbwzp5qf5s0NTzDn7tFlj
syqGJm1SwQBfwDGYhwTN+VnxFAwmnlaIKMrOLSmmlTLbqkubuptrGCWMklga
v6+4pJpRnU7IaGZUMMovVzfXNTBa2ppqSvMLubWVZZ0l1S3tzNLwzNg8PzKJ
HEvKT8elxgBDIyD+aBSBiECEnfOJ9iN7nfdDkENBRHohGQEI9CL3dpVX1+aG
YiobGyV6AzcfG+DmB63PbaKHg2LJYE+gv8f5QBffn3+P9P6P54AILI6cEu3v
GQ0CZcYTmuuZjEZaR1kTi93EablckkdPpMU1Youp4DAcOS4MAPwXVwCKTAL/
OtDj+29/dD3zLeTnQBLgF66+GBQKGxGFCsOj0TgiJaesOr9nWGIWWdVqpWnG
ppBPjN7QmY366f6h4cnrllV92+wNrVVepuRXi/u7ZxcE87OC1WFzv2Tqyo35
G+pbrTOPR+Yndm/Pvdt/s8pfWH85+eb45fb7g5eHnz44Pu7uP/30aHPx5pvj
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
NA70vRsS7O7n6eLiHRgUAkvPiqbX9feIOU3Mjurk5NLaxtbqVoHAqJfytMPz
+kWDZHB2YpIrMVoNmvHlEaFock6r6dUNW6elEuWUQm++3C4ycqyjGrFakSZh
9klUZj5Hp9aYqyy6WtZKy9T1+fum57PCV3efL9/Vvn3R+fyO5L5B69i56Xjt
+PzGcbRzZevo7uujrd3joxOjdnSw8/nV8fFHx/7nE/H902Qh/1o97STMg0+O
Tx9Op8CenNntvXvvcHx4+eTRs5fPn7zYuzo78ejJzuYr1fWJ+9N3F8e7Vp7c
0U+IGSPWFYl+TCKQKAS8UpFijjVmFAtEtmnlklUnURr7+R1d3f0sgZzVNzQ5
re9ra+GIBb3dIgNPPjKu7GK2p1OwJbQCVKgnBOCLxgYAsfjixtJM/7Di6jJY
ZRwqBIwj0cpKYpsK6jIzMpLSghLoxanUvKLsVDS9Mr+iMAcflxsOxSBw1MSE
hLRsUqg/MAaDgAdGJKF9vHwDkdFgd0h8Wmk1Pbuisb6+pas7r6gkm0rGgwmJ
qZFYkNc3XsDf+vzn856xMM/8oLzI3Ky8/MRIqI8H2M0rPh3hBca6gaBuv/3R
w8UzIj2CXBCfWJyR29BcTCtpL+IyBi4zm2h0Xg2nptUJMBQeB8ZhAr2/94gI
8wF5u7peDAyGYuhMOr2AO6Dt7O4T8nsus5g9UuGQUaKS67WDmlm91jplk3Vq
JCqN9dpYJ9e+PKjrU1rMOsnYrE1uVA/wOAbTqNpo7ZM0W0StslZVr6pHajaN
tkkmm2YMjPFlne7WEnty7+7yM/7NDcnymvHV4XXOm83to+l1x6eND2vv3r/Z
cDx9sLV79NlxdOy02x9O5l9/PvxytPbTspoTOocfDj9/Otl85Pxo/9BxtP/R
cfji5rNnTov/9smda1fvf1h/dOua5t7dXbtBrpXdF68sG6+0rd0z3+zSD0y0
2MbniyRW7cxYyyWO4erKjEEzMd7rfC31dhu1A1yDTDZkW1wy9w8KuWxe/4BA
prXqefWX6goSMMUl6RAoMAbuBYkI8UlAVdQXBXumFlRlIWNRgSg4qaKkNjWy
Oq0gNTPXGX+yyiuzU+lFubFhmUW0ktzc1My2uFRyWgYxGoMhJpGjQKi8ZBTE
n5IY9KNPkE8gGgmIoNEzqOHRyTlp1LSi2jpmfWlRcWJYZHo6v6EB5OYKPI+5
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
kI+PmOz1IoveZB+r1i/J+SoZhyMVt4+aVm+tbSxdV7dz5Ow+J99LFBJWx4BB
JnC6M15PRztPNzWhk8taKwvLiigYBC2zDBaUDgX/6uwPOD+EizfiIoweD4nx
cPH7pQs0JLmiA5yMTKWG5TXh4/HEeGhOaA4pKYmQDUUTSqhZ6Ixsd4Cfb0gk
DgYOBqGiY8JhETgsPAwF8vAiVgLJ8WFEnE9eWqRfFjSrghPzux9yE0lZeWk4
cHCQq5e361lwfGp4MBYHAQYDsLH5ddVZ5FiA18XgMBjQ1csfGRuHQcDp6Hxa
dikallR2KTk2ryQvh9nGqCopbc/taK5gNDX11TNLsjIio5tIOBg8+MIfz1Bi
UZAQfEEHr5cllCl0ZpNYwhNq9Hat3CocEFilTnWoVV91AkpuGR3TTHRqReq1
acnEkEk+11urk7F1IqOFK7ZpzHxJpVg3vGpRKyR6tfSq1qYTNWlEUitPYtLw
+/RartDed3laMjptGzfcXlxdXL4tnG6/dXtt+0ndtObmzsYnJ2PtHh1vf3a8
Pn78wrH7+SQ59OnLrCCH4ydZHvuX047TJXenj07bd3iwu/X21e7O53dPJ68u
3ry39fLa2rNro0/FdotG/VJnWrhymT07L38wl5fHX7pp1kp1Qkvf7Cxfvaxo
WVI0NhlNbP32w5u3bt5/sXZ3TS8Uc/kSHpvNFQh625pNOpVKox2SW3WKQfGA
cLCTWVNVkh6Lx+dkJlOJqHOgMDe4JxoShwmJjkaE+Pl4QH7ww0AS8+uh2bh0
Kq42D46DI/Ch6dE0UjzWH/aVPzw3NTcEHRkCDvACwNFQz4t+/kCfiz4gMAQC
QhJTgQWNlQVNIGJGZk0KKDCbUtbQjDwfVJqfmh0HgRLjYd4+fhBcchoZeB6C
BroDLyKSExEJxRkX/+k37iCQv4crxNPVCxSKxhNwuWlxaQREIT2dnJhLp1Er
nJ4sr7y5pbG+o7M4o6y6qrTY6fKpoMi4WAQEFpUeHRaZetJl3yPRamRSSR9b
pTebFVqVSmtU6q0jCqV1Um5R6uZHRlUD3Ta9blbEMUmE0+pWjVxsVaitPTr1
pH68c4AnVYzYx5lGc73EKjD01ctqDJempBabST2oMUrYJmln//Cs1tglvjE3
rZhabWvXzrx98uzWZesi8+bdw13H0aONgw8f3sxsf7y5fXDah/pFWJ9Up30p
+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
iTgsFg5GxaNjg76+GOLjEQAKDfJ29wL8t5gE7NnIGAyRGBkZi4/KZFbl4Dy/
uwCjZFEu/NPvXX8DPe8JcPMGnfcAA89edPmd+1n3P/zDz/7bd27/8PV5L38E
nkhAJlSUxficTy3NIBOppLyS8iJ6TU9vU7u4iZFXnpxLT8nMLalIJqWn0soS
aHQKNTkJn9XO6u1hN4udXrXBohrgCWWDYp1couTJTaPOiCQx9MrZvDGbpGdA
Oa3o4/dLNVaLbk5i1yhMClZVjXJhTNyjUWquLQr0o60quUypNc82CydlIl4z
j8Ecktm1fSzNxKCEIRWLRnQrstaFuVWWZU7LqtHYJx/OX119fPWKQjNhtb+9
+sTh2P94dHD88aOT4D49/Xz01sk9PwV+/icQnZahnRydvXfsfzg6eP3i1afX
js0bD1efOVbXbcvLV+f0M2Juq35+SDXUoR/sXRzuNYj4E0KbkitTCU0KEUs4
NWbqFncxOXIxq0Wm1TcPqljN3QKpSDkxa9ZqlRrL8sjwpM1uGx2zmeSdFa21
ZWWVFWXlta1tXU7bxmqoK01NSsN7YH3g3jG/c/3NH8NAPkAvH0wUBY5Eowhg
WjImGBqB8CF6eaUzy6hxEERAFDoBHkYKBqGDvfyAhNiUOBw5O4aeSgyH+IEw
CJT3H86fcQuOicaGAEMiyGEeZ/LTUtD5uXF4TEh4bnV5diTAxTUoOi4+6Ff/
8Zz7V94uwIAf/uxz9nzg+e8unPkW8KszLr/8xR/dff3OnwWCQhFhaVRSHA6f
lA+lkD3iC2sLE/JO5tvUt+Oq69lN3UWVrRVZNY15eRlpidnk5DwaOo9WS01t
be5tFIglrHb1KE8oFg6qlQNaudk01K81/t+kfWdYVGmatr3zze7M9OzOzE7o
MKa2VaBnm1RIhioyhZKjoAQlKihBcoYiVc5UnVDnVD6nciSDKMEcurXb0MZu
c8QsovIV2jM7++f7pmfruqC8LuCHp+73fu77eZ9wfEwJaeQjdhyzW8bGzHQF
02yxqAfFmkGhDZMhVA2qtOpAxDI1YUAO4IOj+43yIYkO0EkhCVvmUAFarrQf
s42NdfL2WSzH5XapZFzP47JFPah8TAZYTp7+bnzAcuTgN5dnz99ZfHrhzfPr
LxZfLdw49mrh5quFH16/fvxutOx/N2n8b0H0Dkfvtoc6QPTqzeLC3O37Tx9/
/d23X/1w6duHuM0yOzV6fGb8K75t7zcYPMyznaXJTsKjI8bTGvuEzLQPgIYt
Vu3wMAbCkICKqyXtqFSuhQE+W2WTc/sts6N6HBsYmrabxwb3Do1PHzm6TwfC
3K7mhvqGxh4EYMNAX29XN6WhIjcxbGtkXEy2uw/hQ7/kWP+PVxCScrKytuZs
S9+Wl5WRnRvrkZCanuzwVukRJGJKamr0puRg8uaUlJzsnNL8HbF1NQVJMRHk
TUnbqxI3+br7ORG2pCXH+H3pFhz3YXJyXgFCL6MUbM+NK+xuq8iMjExM3ZwT
6fJnryD3DTHeLgHB610I6z4P8HQJ8HWPDI2M8HH5MpCcRXQPTYh0OPaS2rrq
mvra6roaYn0bu53fsLsTUYl6YSmyp3VHU/eepuLaYlJ6Yn15ZfzuBkpOVWFj
YmpHRSMgk2Mahx5iIRpcN2CR2bCJoQFAg9ms1sFxs1o0Ag8PaHlmjRVSgLBy
/6RUxzNhuIytXFqdbrUbZCMjoGXESjXTwQGpSSYbQUHmlOMY7jdO2xGpVCSl
mZRGXbd5YFz21TEGxhSL+o9+PT19jC7TmWQThx+c/37x7JuXD68tnnvw4Kbj
o1188+jNm4dLLY1/LYp+3+Xzz8LnfyDp/fvrBYfwenB77uH1F9e/vXrp6pNz
57WaAzOn9n07Ap0UWAcwNmdmnHPcofB0CjV/wshVygTDQ2otMmNRSkQorMIV
/G4VgkMO3wYaVZgeVrP4erNuYP+AwaLEhwf22sx6La412VUygEPr7ergGXER
3N9DFdQ3cDo3Re7MSY/cGkTyivchxQf/8V//i7jeNyE9r6w4Pzo1OycnJznM
JzFnk6dfRnlydGzK5o1kMpmYvD1ne1lRTnnerrDaykJyaEiUwyDt3poWGhi8
1jUzODTEe/1qJ0J6fA67bVcxqyc3OWtLPbMhlRiSU1WRTd7kRQgP/twjPtwt
gOTu47fq1x4bPCNDfWOiQr1dPvnU2cdvvVtsatKWgtK6hrq62rKs1tLcoNqa
trryBiqb0kxDSlvBPrClo7Wa3dHXWU6t7m5pzOrqY9V0VVQmZPdW7gDBpTy9
SKTU61BEb8GHlUY53q/Dh206BarVWYf5ZouKP6gFbMMHZsYRVb8asmJ6TIHr
NQrMPjqADh8Z7jNYBWPAoFnWDzcj0inseL9JL+PKJSzj8PAgJIZVYj4+ON2n
NEAHLEfGrGODNJGUqz7y7ejhAzfunL504+6x8Qt3D995cuddzc+7YpDF9+nl
hR8zPP/sTMe3/xNES0lHhyKafzV//8rtF7cO7f/29O0rRy7MDowaD9i+2m89
YDlxZOSYVK3t32/RYypo38h+vXUc3q8SmwdQk3rvpIrPh0EIRZQAl40pxRAX
G5Tw1HajGB2bmT72zbHJCYvNwUMzk0N6VCxZKo0waVUwH7XYcLVCgmIqhNdd
W7Y9c1tY6grSX6J8SelbQ4PJYcGR23OKqjJTgpOyM9M2b82O8iOlxfpE7irO
LkzeGhVLJEdkbk/NyEl1MFFZcH5+TlFuZio5mBS1cRMx0PG7BSFRsZsiwqIT
Upq7dlW2tm+vTfgyMK+TVuPnGVVSX7FppV9izJ8++JwYRnLx9HFyI3z0b64b
vGMi/KKDCStXrFi53odMjk3dnLJ5+67Czel5u/aUl8cHkusrK5p256bn1fV1
1farqJQdTdW0qpbdO6ubGtJaOporuKzOOmb3ztxqNmtPYzvI6WXDgyqdHtNY
zLgWUclVCr1UYd43ZR2EETVHhhlHR7tmz1g1UrVgWKxW2tUm3DCAa2wGKb7v
qNE61q42G5UinRIHD6Jy7bRquFaCQ5B+UD9M3w3KAKveaOdZtapB/YjqdD+X
i5jRyYMnx499PX7u5J1rizeujNyYnTw+c3NpssOzHz/41++K0968K1L7X7QQ
/femhXei6NXrN68eP3joMGb3rt2+f3F6+src/LMfzp2bunDy4qmTZ3HboHZW
hkPSvb3oSU4X+6DEatB3Q/DkQS2P2W4dG1VCDCGkU6I8jkJn5FJ7BiEmX6Ix
KGHt9FeHZmfHJofGbBarErfbBgbNWsPgvoNHZvdPjlhw3GJ3CC2Vwqqm06Wc
vN3VeQlBqTHBnq45dbt3lm4s3rpnW3H1pvANCdtys3O350f7eUcnkDdlFxbs
CkkmJngRAxPTwjdlxOfkF+8kRSWkxMYmZ2XEJ6R7BBJcI8ixhd5+AX7+YQlZ
jQl5uX3by/JjSX8mVNIacjYQUwqLEtd/sDLQ55fLnEKjfJ0JHn/89MtVy30I
7iF+biTfVb929vPyCovLyExJS48P9iWllLc0VhR31G9rZTMaOioojM4mCpOd
09bMpYIUupjW3dDSU1HUQKlu6u0qa6rozMipaBA350Rvr0Uc+keq1JoH7AY1
qsLNaqsOsFmNMppSiDtOk4alHHBYDr0jfmlGzTbLqHGvdVzD4Q6cnNFKJsWq
4YExGTi6V2XDWBPA9KgCGxDrbDpcxOEMSnG7mqttA/QcQCybUo427R0bhfTm
sWH1LIRZdRfOPPnu8uzXR6+fPT937/pTR5h5s7D45unT1/OPHB/3m8XXL96+
N+f/rCT6K4jevKez+TeLr+buPnx+99Hzxzcvnv321vU7p767Mntl8tj0Nxc1
B3nHLk4cH4eODFqPCNSN44bDxkOSca599uBoX+P42BBAhTFQ0m+C6VqpuElq
sHFAXIeIUQXKHTw5qXJ4UlRms9ttaq0FQxFEqh+Z3D9m0ugNWgOqGzSajQBc
VcjTQTQmg0bLrNpZGRW9Ia18R21b5fb4ovTt1RvJTpuKdpfvzEn9LDbR1WNb
XWnq1kLnEK941y9dgiL8yNmbc7N3lIR7kGIzN2/JSSV5efpF+qz1JQWS4+Ki
AvzIuRVZybXBRb4FKZ8HOEdSmbn+pMTc7cnr/2WZ+yrnUOKaL6JCA8ikP33s
H+ge4ulMcP7cz+ujX3tGRgb5/NothJRSXJBSW1KwY0fhzuqghOgOEc4DGXx2
DwNgN7Z0MaroVeWF4jZW+549Oe1UZnlHY10evZRXWN3WbEV2RGek7BKK9aMW
DNPguN4wpDMIbSYFhmFSlhk2jmqk++1DEr4ZGdLKgEGDBsf08gGlcWhyXMXv
l2FmmYE7PKQbVI72zVigGR2mbsa1uNIAmlVipq5/YJTBmKFpJ2YEM3Rhw4xu
XD/aDXdZMOSs/dTlA5cmTxz55oTs/JUnh+8/Ontv/tbT5w8eP7l8+fGdK88X
nr9efD3/v58P8iN+3sfEN/MvXr58sTTH//qhw99durt4/+L5Eyem7n1zYv/M
kPzkzDSoV/PMewYmWVyrVIWPSxlmwGwHjNPYPg0oHdQqLIhWv1cnVg9JWACs
xwwiZg2VxoNUekf0U6kgido2ZLPYRLBUikgdmlEtAxl0djeVxuL21lXWlOQ3
imAWWwXQK/taqMX52Rkt8V27qWUlRT3sovjEgAJSbEFJaGmQxypSalJ5NTk0
Y5OnT8CGEE9SRAgpbnNeyfbcnDhfv5jE5NTkpJTNOcQNPqTQmNwqz0DnPwbt
Ks8oSoj/MGx9lJNfECmpvDDCPTo8qX7tSo9QLz/PT1cQCJ85+/q7B8TH+mx0
/flvVn+yyt03JoHk4eq8KjQlPbssJ4oUk1OctyWvMCennsWiNRdsiqioq6yr
LimuKc7lcaVClXAPrbiIkt3SVcGmskAKq7ytMb+IpbMyigM8NjayaDxGlwgF
dUarYsRmQaStfAiUj4yqRJbJgUGHvedp7EOWWYuFKtRqlXoHzyikSplIbVbb
JYZRDNezsQOYEccBiAlwjGbQ6HAmelSkxUFcjOwfMUxIrSBvcmJSIa/hj1ER
k2l2v+IsIB3v+O6bb88+uPfNxTvXJ87PPbv0+Nno5YXLz14fvP/6XY7onRha
urZ4/eNks58MqR8bX/8KI0donH/68NmDq4cHpy/d/u7ZuYFxO3Jh7OSlSevA
0LWvB2TGWfmRURhulw4qgFEGhkxhQjN3eJiPykC54wCx5d320YNTYG+3bFAq
BiQCrf2bQ5Ojww7towB5EjGksZocR0inRgBQquLRWDxqZ31+Y0VJQd7W3OKq
OqoYRSGJpCmtpry2mpFdm1SdwqZyW3fVlEcGZmxt3bY1Izdwmxf5i4CEpOJC
YuLmkL8ERQWGeBGjyZHkuLSMhITMzWR/T/+I+MTYcH/PpdG/7l8QQj8PJnmS
i7JJkYHkzxP8o9YGbiRuzEtbsSzVOTj0ow8cxszjs1/8pyvBxdnTh+BHCvHz
8PHxWfWfHgnLPXxW/Or3H33oHJGQXpgWTPSPSwzxj84urq/MSytprtvmFeQR
lF+el0mRimkFDVU7I6jsmqLa3pK2hgZaE72qqba7s6KSKYH5uR7+0XntzHZO
vwYDlGq7zgaJOOZB86BVpwKko2o7OqjUKBXafZP7MYEUkxrMDhkKwziuEdY0
0FmYxDisRE0W2MCBHeyu1+pQtcpxXEf7VU1VSvX0sAqTCg8wsDE9Du/tkMww
eVy1zqwV9xw09xjO6sdO3Zk9fm50xPLo7sVX1wauXj3y6NWtFy9vL75++3Kp
KmSpYvbdErvFN/8EiP7Wff8eRe+vzl48uv/41pnZfSevz9374bRR+eD7a1eu
n7cPHpoYVwvVslkRDO1WOaKxCRqjj0AqpPvIyLAd5ivEUkgtELC4yL4T3xjk
SotFKAC1+n0jRyYnZ6Znj508YFfCHCZsHLBbEKXBarNazHoxnVJXV1NYXpCZ
kZW3c08nC5SozSp+kYhWViCmZdQ2l5Rl1FdV9dXvKSLHVnaW5yRFZMWU+qV5
h23dXpC6ISObHJSa6uPqGrAxOSEhMT0uPCp7d0nCBvfg+IzUKM81keTEzNQI
UuTKgBBXQnSYs7tn8F/CiQEfe/l7BCTHfv7r9F/5LA/5JCHCb4PzJ+v8SMFu
G4gRJAIheJVrUJjrGv8UAjHc63MXrw3EjPziisK0TJ+NKYmpJe3M6l1Zifm1
JTGZRduLqsprWN27SgQ8JlOrYlfxpH20Hja7m81opjTVOQR2HV8uhzLWBQX5
FzEUA3qNDNbjGCzsUcot9mEM1Iyb5dp+FXupFMjBQ/1DBqMKx5USzKyWWRWY
RStWTcyqlbhWBjmgpoateptdiirtNqtJzJS2DogYFrYJ1lm6aQOib1jmbr6W
3uPQ5I0GETI5gwtUR+XTl4zYt9bxKxcuTlw+z/nhyVeL1y69XXj59sVSWdHz
t4sv3rxdWhm7sFQC9PanCqO3/10E8Pb9DJB3m2mezj24f/3axe++v3nz9oNv
JgZkc3cH7h83G45eOTagHfl2+Ph4P7fdMqTpHWSo6DYVYgNG5SBmgfUiGSKh
onwFd2B03Dog57H6YPOwwSQA+RK7xT711emTR/fqQBEEg6B1aGJyzIrLxV1N
LR08iXDnzrKKmpZeDkeEyHVmGYPG7d6zu4feS21ty60orCpk9na37y6uqElM
IEcU5dYSYwITKuuKE4jk1FjyZvKaT1c5+0fHxCRmpUaHpxSVZpM9/CKT0uND
fYJ8fUPCAv1JAaE+q9YEh7v5+3t/7uzm/Bv/IF//+Fg3J89/+9IviZgQEeLv
7ekTGOzvHRC7Jd7dNYLgvMY9KMDTydnVdc2nn7n6BMSEBCZFu3kFxeftbqDQ
6Wkl5aW7qwriiClZOVsS8qjU7tqKyrbaAoCqrCnpK6d3tDZVMjZTSnt6GnZW
CwwD6oIvgwhOCVWt7G46D8RFQh69d8SqU0O42W5FRWpYCU5YtRoroNXs1Stx
KyBi8mQKbBTii0GhxBHRtFIIM6hkSgS24JiBYVUbBSIHxLQMI8RSiKx044xi
rBOFWiYEmNKKdOFW0ZBVrh6DqArTGCo4d/TCiUHb8ZPKI98jTx4efft6qTDt
3eSrhUdvFx/Ov372cqlH4z2t/FQS+rtKkvfX+EuDR57cu3n99KWrt+ef/PDD
0Qv68/cvn//2sAGfPT4xNGwYHkLAIZpkHGUaYX0NAuDDYq2E200Tm0C9RK6C
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
RYkoGDoUVellcoXOKuGANgez6xw8bmaJdYjSrsYNEoFVrLWpNHyVgmO0WiRo
RyMoZEImJl0BqyxTyF4aT9iu2qtjGOnQAHe6mzvere6ZPX9JdPS69cKFB7f3
Hrtru3j78tz9+Xcp63ez9946hPCzV0tzrl8ttX+8mp//CRB6H8b+zuG/efnw
ztyLZ48eLT58tXjuu6kzd2ZeXr00dPTCzHca9JhUDVkmKAAswYbH1OIGm5UN
LvkImRWjcHGqvRlna61tEDRJh/hGZg8Nh62Tew8fmjrw9WGrA0Ja3cDklMOQ
Tcw42FuiRQC9FtUimAGH+RyOuJ+js8jMI9qhqb0joxalRqsStNZTOACtPL+y
u72mvWJXRVlJeVsLpW1XTk5xWV152a6CjM0F2SWlBQU7ssNJiYW785MSMrfk
5WRs3Zbsmx7q6REQFuwVHuDj6bLyF8s81q9f2godsoqYkhjsu/b3a1xyIz9Z
+2GC0y89fFeEJnn88pe/Xeu3KSk5Z3OMt5NLcKKTbzjRP9Db2dmT4Ln8VysD
/FYtD4z0D4iJys/0i8hKTcgtq6ncsbO6pTirooRa29VUDNS2a1uA7hqGuJi1
q59ay2tTcGn0puq6utbRkeFDwyi9OtAj1CPYwy+nG5RjwzgulKJWlc5qVKt0
BswwMIiLuRKdTamD9aB5SGdVUERWzObwLbhOiSAWpVSO2QxcnRKHUb1C0SHD
TUMgQ4djPDUq52I8oREfx9RsZpOooRbgDiiMGEKzqXE1ruzokI1ND82OXL7w
6Bj2ze0Z2x305MLivWcLi88Xn8+/ffzg7at7r97lrV/OP3uPjZ/GQ3/757sK
EIfJezl379Hzp4+fzN2d+370xMlb948fV+6bPTSjmmCMmGcPjrIg1sgAzLPz
eSIrWKQFZGyzRN+NCDpxlYw/jDG4nSJYBSkhDBD19TuEplKnU8oVMBORog5X
b9SYpGzAZsc0ctBihwxDLLvVoEIlCErFMbXOPi4f37t3yEFZGKe9hSlkdLYw
6qq7WirqOa0NTa3N5XlbUrK2l9W31RQUFxTmp4RFZYTGZxeV7siKio5Jys5J
jiGnb92SmpGdEbmJTCS4byCSMxIiPFb87l9/7rTOPSwqwMs7MdLHjxSw+gO/
ZaTIuOg/Bvn8p3u0N3GTywqXL9etcI8viI7wc1ntHEBO2pqXSo6OIjl5Bnv/
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
iygtAwaFiNZDF/RwuFQ2ZjLw2CIAggGZw9UO7h006odGETs0Zt0/grAlGpm4
3wa0NbZ3UdqaevmSpSsTiRRCDVoE6eup6qKwhkFaE4QgrSxuR1lRe00Fp3dH
YmRBeWlZc14Syd/L1d0/uKo4PzUujxRI8CC4O61e90tCTFxSenaua3TiRofS
/rU7ydOZFOq0KoDg6ubi4huXSXTx3RS88mfO6z/9cLmHx7q/uPpFR/u7u1XW
lER94RaVuG17PDnB53cfxwVziBH+O7oozblhWzuac9MLc3I3RpW2N/c0tvRR
KfTuXbVdoR1lTOVXs9/dOHP3u1PXb92+fezw7NSU1SZOIPzBLWJTdMRGcmC8
p09SSbdEKgOF/TAKieQcuQVBNaJuJhvAFZCcwmJKFQIxE0IwsRSjszmQRiUD
ABGDgaB9CgaTJ1Bxe9jdLC5HAHTzZHgnva6vmSmUYowamiMgimubKVvbWmQY
jw7T2EIhMkFtGxlnjJ2bvXtyH8d29satSzftprt3rjy5fGfh8ZMl9LxfGf0T
NNGPY/reDXx8V9D4PtvoANHzp8+vPHs6d+LbuzOTh45euHRpahi2mbT6MXut
ELMxsf2gAKYPcGmjDgbZbZSJsT4qruqimrp4kEQ3PoLr9XblGMylIOrJ28eO
O86PhC5mYpohq0YBMbsYkJLRh09NqoE2Hk2hFmpkTJF6YN+EDlDLrfq9xgGd
gd/LF7EhK7e7rqaxo49B62UiWp0CRaWQzKwDhMwSJqVRq+DRWx2nto4L08vT
du7e2VrVvsklvaI4Kych1PULp8/XOP0mLSZ5a35D9kf/5yN3rxU//9MylxCi
nz8xMCEzO6+ovDiREOnvvjFxw3o/t7UrV7puLIhZymavXOn5scvaf/2dm+cK
f0JgUoKXswcpszDB+fcrnD2+/CI4jbhiw68bP1vpv7t2N7cyZWtlbWU5jVpJ
rY8sqaqjMOpYTSxxIVjTyKnuQk9fmbv0/dNrP8w9PPzNk9NXJ0ZHNXo2OdTr
926+bl/4RUZkR2a0cVGlQxuq5CgqU6Jt4AAgVva1d7GVOKMTwEXdsLiVh0lA
KUOMc4BelUJJVwFCKd0BGoSlFNM5rXRl9x5IxMO4CKOFje6CxHx+lRTgoQKq
mMkQCil8R+xj8kbkGAAgMoDRPzGLQSf08ms3H9tuH8TPnzt7yX5m/s6zt0+f
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
e/fscDmsA6MzFo0WZNINLuf43MCEymZ1DPY7BsemXVN945OjX3w2IJTwhTa3
TLQ4tTr14NDciE0rBQAJoDbap/fNWIVmkKq16gcHtQqHTckRQEajmNWQm5uw
EYtNryRRZVtzypKXR5RKq/Gln8aGRgTi8Akxm7LzY5Iy85KDkZj0CEw8EpmI
LyRxqe2E9vqSkqKMqHV/+f3qv64OTAp+z3uFb6D30mWeaz1WR8ViMNFhQcHh
CRlJqz2WBsQkJGfm4D3QZQ1V8Z4eCSmJsfiKmoqCgpS0kqLuDml7dXVhTkWT
TDJz9uSpH65c//a7e3cvfnvzhxunvj42p81sSQ1HrfAKRMSt/ON7b/lFh4T5
YRD+ESv9wzFxiSmJUeHegZ7Yv2aXkhVmDZ/PF8hJPJGMwSCTOSJYpwK4LECp
EbQ1cXQqmVbDFwg6OgS9VhEEtJKVhn6oWwczVACnZxuJ3N5Dliq7yEoaXSYE
oG4yw+DgUs2QRETTKRwKt7dpV5G3qw2Te7qnb498d/nzL6ddk6Jx4957F248
vf76+evXjx6/WHj1Jm3v1ZtQhgcPXr3+p6PQXv1DWP+ns2bPny8GEz14+Gz+
4qW789eO7jl48NTnXwin9898rzoM2Kf2Muy7LVIBKJPDArtNYtXbu4V9cj1o
gOwioUWlE/KkapdGPySddDnIdeVkvUFKq9P0qQWs7m4+oNZKBEKpWNIONrUS
6oFp19jswKRpxGIdGHIODAzZh4b3TMx8ZRPz1Sp1v07itPdrdVKHa2p6+7RF
0NHCVVscbkYcZNrUPIvLPmjrg+xqC72DopSDYB2+pjAnBYtNrWznNG4uyEAF
xwlaMvF5QX9GJmWnha3zj9yYnobPwqFCsdjQYPyW1JSahkL3vzErzKOgsCAr
Drl6uX/w+tDk0Hc9PwpDvv9RROSaQGxsWMD6lR9sjAqPRIeHBobG5lSU56Wn
Lg+MQXv9OSA+N78gOwOfGheBK8xpz2wt6CFvzc0vJ/BFew4dunb17OMffvzx
+uVvzp49d/HE4QHy5k9i1yOjAxBI3zAPjyUfRqVj4jBl+fhcVFJxXjImKhId
EZyemI1vrK/O4aj5Qo1CqFDpRGKBiK8X9dIEYgko6SEBckAg5rOUcjJHK+K4
sZoBSZnuFwlpZJWUJ2GzO+t6egRkngBiEDRAF4sLQAxpGxeEOnidMFOgBUyi
NqKTxmo1aiyOfQrh55+NbVcPQdpDJ15/e/XOpe/u3nv67dmXDx88ffby9avn
i4PKnjx9/uD23Zf/dc3x78ENv4wuf/Hyv5x7dVfS0wf37v148dKNm5f3j3/9
3QXriHhsr+YzlpA16jy43WJW7ZpwWXTkFhuPYyCrenUSukEp5Y6aJcOwTsrn
sd0lZLTuHeI0dLXTJUL3naS0wFwqkciuo3LpNG5vc2dtb3nLthbKwNDA3PCU
Y8xsGXSLJaPeYTs8NXLECfWpTX0qjc44alMaNUb7zMyow6QSQRKe0mw1m239
NuNwv6RvxjY8onMrdGZ7B9d94eoymyq2ZMejUPgaUvvWwsykkCgCrQpfuTkq
PTI+KQYVtOYPqWnZRdnxMYkJyGWpHTXxFbl19fiAvyZkR8QmJcdFhoUFodb5
hqxZGuq96ve/CXJbu/QMrO8K3yBkZnoiFo1NyUhOLqjfmp2CD/7YY8nHQVHh
SYUVGQFrEChESnulMKsltoTanFPZI7TZ506ePXf5x2vHfrh+6sytGydPfz5h
IKI9l65bGhQXgg5ZvtLj7RXrIrI2YsNzMMFxqOzighQMKgiBQEdHxecUF+DK
AA0oBNuL5YCwC+IpIYEAkiglPFp3D2DQ8AANbFTQ29t7WKo+hYYid8uenh5Q
BPWWcXu7BCBXzuYLmW63QWumt3Z3M0UcMZXVowJEHTKmWNDM47fxDBDTrHAA
DPVprXgHu8+5b9elveNHDhz6/u71M2eu3nr26tmzhcfPXz179HRx5fnlq4Wn
i3T2n/uK/rEC+aaIFpMb/t5P9IbOnjx+/uz+jzfv3Lh46dzJoze+Pqb94tQX
3+intBLDkKF/TDo03CJ3QGqrZlAPSWsBhkUpEEr6JEKeUsyFzRaYCTjU5mnX
CKmdweJwyC09cgEspVOpVAFHxCU0E2rSOum9REYVgwjb+7aPjJqtww770JAZ
1tgnduqHDpr0Y3qtTQ0ahgdMDKtywjE31KdWSAEuVyWENA6nVT/jmN6uEDkG
3LWn1qn0YHtLZQu/o6gsPyc3c2NkVmMPxKwuyEAnJfS0JOY15GARwejEvNJ0
NxnlVpTlpqdnJAQXtGZ9gm8oza2ismpQ6wJQESGBiKDlwQjftf/+wUbfFZ7+
sXEpKUEhAX6BSQV5iJjUnIyEyNDIEGxOFiYCVxD+jodvfFxEdPLGYAQ6MSUu
owpbj25MyhfwG0gC9eD4vq/Pnrty9fz5by5cuX714um/DbK2VWV5efh6hmF9
/HzeXvbHgMA/LPXxCvbFrPrLBr/kdaEbcbjoEGTYihXBKYlJCfiKFppCp9aQ
GDBXSJO6bx4TzKcwAVAoBAEhxCqnN5TzIYaRLwBULC1IFbH49CYSkyOgdbud
rxLo0nSzZSxWfl0br5er6Gmg6gVMhhvOuvj0Zq6SaenXM2QU2Do8KxA0T5za
p/vSeWLk0vzdrwYvP712496rp6+fPX92Z/7R3SfP/5EJ8v+V138vop87GxdP
vv4ki25fuXHvyrGvPr9w6bpjbGD3QedupXZwbrRvCmYx9tpgWAEINAxwRqkE
HKBayZC6WUsiVYl5KrjPKlWD1l07dJN0FlMqEzLb6HadXc3k8BlMGUAoyiku
yWFIKMzeMnorQyGcGBp1Onc6DaY+vd6sO2izTNv7ZEaZ2KoX25xWE7ffuHPQ
BWvNToecTpDxAdhmdzgHZ8fHJyQcp9y8Q2+VGCTE6goSwGspLCsqKkwKw1WU
cymbc5KDNwW1ktLS6rYEJcZj4zJLc8Ldrjp/Mz4eg8BkVxZHBBbF5ZYVJwSs
X4uKjAhe8/F/fOixFolA/tYD4YXApQR+FFq41DcMi8tKj/JBIEMCfHw+8V8f
GIkODI7JykxOTMYXFOdtXOeLK8lF4wrKYoojGvBJ3UIqVaR3uM5/ffTHH/72
7fVvzl6+eHTHbF9nZWZGwgfLVnmHIf+4dIXHkt+GRH64NNA3yDcxGLERmYzG
xoau8cGkfhq9MSojOD6N0NTK04kpNAgS9vIEMoke6GijCkSQRtLbIzLSUghy
OlElqGkTdHTyKDCbqWILWjc3sXVKAU/aViPg0eBWEKhgU5vJQhpTwyGRgJ4m
QguD1Upj8kQaqpolsWmGWJJuiDc6PqjYMb3fcvXomYl9X/d/8/juozu3ds7f
uPv43uMXz1/9HXPenJL+73LolyJ6k1f9d2H08xnqhUd3frh64+qXey5e+PHM
BfP2yaN7h+w6GJ5l8Q/oDaC+2yXhWkVW9QyzkyW1KyUQReOQScwOpUZpkiv6
1Eax7vCUY5zJYmu1SjGFM6zRgzSJUS2lkKpzMjY3dimldFbL1sZuAq/HZh/d
vnvXAKw3G/sc9hnbpBtbII4Y0mq1w0qr1e4Ycw31aWB9n1FnHgRYIKxTW6bc
5Twya3JD+8CUXQOJILC5jUoVS+rbyvOzNyKwhUnElrzijKC0AhKrdUtje056
TgYuMTHMy+PXazbisGHBvr5JRRlJmbnk4shwXMqGtzCYcIS3l6dbUC/9GLnc
Y8VybBZqjU80LgiTkp6eHPheRMAfPTzeW7thfQgaGYDCYJYgy4iEqmRkenpi
ekl1XhiqdFtlbVZtcsI2QMhRDg4cO/jND1+d+vaLIye/On5g2q6KT67P8PP+
daLnGtSGPyxb+5aHxwrksr9iYnyWotYj4vyjszbnR3+8HJufnJDjHbYyDhef
Vs6zwgIRDLU3tfNZdEFXM1Vr4tfTlQaQ2ttV1d7FgiRSdhtY38ToklMEDIJI
wOA1VcvINCW5hU/oBkg0WiNHyWIAZIoYkHZ1EYmicpaE1ctTccUkUArLGvSt
wm7LAeWOswrX8PXpk8e+/urED1evfHf6/KmHx3+4fPfZs79PLXv1euHFPzl9
9sszi/2zL35mszebsM9/orOFWz/Mz58/vOfS9cuDu0eOGr46dEjvnJI4DOYx
wm67dg9TDFsbtQK+WK+FQI2UrgHleiMIqajiYbvZLoFGgbmRgwMkAksjF4oo
zAGbidcF6aVsAoHQVFXdLXVKIf7W7jKALu406BxzeyfMsNVpN1sOaMZH3VAz
QYXlcqVlgml3HLDt6XNKreN7djsAKkVFJgE6vc68e2B82uocAR3Tg0OADNBa
yT09DWInpz4P566RtG3bANrWzvKw5IzMbfVJKcXpwRnFhanxKN8Vyz7ZmLI4
KNYPmZFaunkV0s8nCB244r3AoMAAPwQqNjnEw8PL61cr/OLC3vXZnLMiMTk5
KTkNu8bX1wcR6LvsHa+wqHXe4djAaFQIGhu+8p0l0RW1lSXF+f4lm0uzc4rj
Kkhaq1TnGjh0/txX508cPn/8zNmjY6L26qXrSuLWxK7L8lyDQS/3Qy39aInH
v3n8OXhdekgiApWbWPhBUkNLcTw22SuubG38JkJzTX0dSQAKlGxYpaMJ6AKV
ViPs7WECegmluQOA6Nousaalk5nRmt8q50m2tg8AUmJNVxuVkl8ilYJgXl47
jwzoGQQ+FeQxKC3UMjJzK0zVEbQcrpoi5tm65aSWxQjEyT6BcM8h+4TG8dXF
Axf3H5se2nv2ypfPzjx78urN0KrFhUZ3cSzugyyy1ov/XkU/Z8ksItCbdiK3
k3v6aFGNv3jx+M65Z5fv3Np98PK1awcGdx0ZURyY6R88Mc4+ZFQ4BkZp+00z
StMw1WWvEuuFwxYlbUhvEEkGuyELaJc5aRq+ETBst04P9vVQukZheUcnPMxi
KhVWa2dVdXl9NxkYsAPEHiaVQjMBXHjQOfe5HjbYLVrbrMNgG7KbpFSKUSIH
YNCsmRsZmVbzlHbj4bFBrQTgMckdRBJTqDf0j08MGtUz251Wh5qvJbG7S4rJ
crlAgk8pC4rKwZGYXW2ckAwMajNYUVHSFpuUkozDJcauQ2DwpcUZkWFekcja
oqIwnzV+QT7v/cnXwy8tP+z3wZWJbq4KRSJR4YjwOAzC05fcmt65sT3JAx8T
hAyLiEAHxgRhCtHvxGAxODzW28sfk1dZXlJWkp2Yhk/GxuWUtbJsw3b72KGT
X544/tX5M8cP7901LtwS4IkO8EUGLPuLz6+WoJLeXRL4XlDAil95oeIxH/v9
KTzQI6e9eSUu5d2wjJWBOUGZoekRAXh8VGZms4GnsqolIkAsBlhkmswop3Z3
dVNpNBZA4nGoss1VzYvTTor5SjK9iV3TLYDamFQxj0YlCbq5FIjSKOaDIgFZ
1dQCU1k6LtBK6SKzmXouk8RrpetpDsDSDfYLXOBho95+au7wse92ao7OXDq6
597iiKrFd7eQfvF64fXz66+fLjYW/VM++2X39cXPR/Hdutpt6h4/WXj+6NyD
l7cfH3dLw6O7t0/sO3EI0p7sByetSrVKY/tiQGya06sGmACkUWssLCOghZkG
qwSkCMT9Nq4asCvV+u3jNtg+oq/r7rMolXSRkU6TqVWMPEIXoZPLF/XB3G4m
KABFPNjhsDkGrYuzzjSA1DI+NDYE80mVJlsPiapXDth3OGwDfAowOnRyh8th
t1k13A5CJ51hGhrp0/WPu4b7tWY7nwgQSISWhlaWStLTUhIdER5fSAPZPYL4
9NKYqpaezUVJCbjkpMXzZSi3Ry9xW/TV63yTCyuz4lFBKFxqHC6vCJ+0MTo0
PqsuM9TPz9snMOhP73dUZ6zJzUkKTMGUbPJ0PxWVmJwY+wEmvYRQisImREdi
wgPCN8UlJqfhCyrrcvJzkjGxWaUMqXN8aHB8/9ETJ45+fvLE0QOTekFzCiIw
IyYoPGLDiuVey93+zw/htwyJXv6Wh18sKtQLX5KUkx6V7u+XjFmL9g3xCtm4
lUBA4aOj/xoNqG0yoQakALx2GptK7hUAoKpPxyP1CKgSoIdZ0K3hUnrk3SBT
2kS1wFQOuUdEbG/qAviabgpbwSFCao6AUsmqq2zrofI5MhFIVgi6KW0kpl4m
UHWKoIldKmG5Gpqd+WLu4MFTsoNnDx5226jrz+69WHj1cHEp+tnCk4WHTxbu
v3I7tDfM9s/WiF7/snX/5tH9xNMXbp298Hj+9Z1nB77/5uG9w+ad5/fO7hsU
Dn0mlW8XddpnRqmq4ybTrJUpFkM8ix00dmiYDplKqZHzTWqwX8UGNXaDVLx3
YEJiGrLQmdCwcVigAbsIfJ28Paud1kVggBKdHqIzmHQWYHdYDSazXqLSms0y
pkDrcrkcSl5Xkxru6WSopcb+CZ3JxudpRse+2DMxOr19564pu07cXc4a3DFk
n94zN92vHxyklTR1NrQxCEWVXMU2qG19FCI4s5EmAOVVZcVYfBnYUJaDjYmN
iwkL8MMgMflFCXH5qGT/4tgihP86v8AYXEpOSUlmhOfHEelp5alBPr6eH338
3rsebTlbEGUJ2FAPNwn+u3cIDp+K9ffyCEwpaK5OCtqYXtbWWoTyio1ILqvM
xiUn4xISM4pbKGI36Y+Pzu4/ePyLIwcPH943CFRkJgauC0wLWeGDDPD6YImH
h8cf//L2H0KDV/7GKygoICM9cGNqciYWVROdsiUyMqixBB+UkF5Wnl2fmxy+
oRYcYIlgLkMkoVF7SGQWlyWktnYyOSymoKesCeZwO0GaSCvi5razyd20EkY3
CHSQe9iiXoF4ay1Zpu6lbGlqLqBRetksHp1BEdCIpGZiJ5uhtJFIJp0Moii4
UJvdYhubMk3p1Yevn3/1xfyTY48W5u+/ev3N6+cvntx6dOPx42dvFhn/WVPR
q58Wif7LkEU3fD12V9D9+/duPztx/fjd+e8O3zp4+PSh/Ud3zE0brZMwUzRD
sY7rpFw5BDO6mGqYNUrlSDU8vXaIyzWLnH0OAUsMmZRaCbTD4VIpnfpRCXdk
fFQzANEJbIOcVFtBbK7pABQ6MY/JFWkGZqZNmj4DJLFotDoljy6yjE8O6WGV
CIJ0hj6D2TwyOKw294tVjpHxAztHhsZHpdYx1/SMU0VSOocn9u5y7XINuEaF
DTXNte287s3lLDEZ5mQmBKFis2rpEgmxCof3KW+nFLaGhYRvjEOHhMQFJ1aW
YqOL4zdt3BybsMLz3Q/XBoRGb8pLzN20/C1f3Kag9T6IAK93330XFZSALExO
SsnDvYV+z8MjKC4LvzFg2buYrILNjcT6TwsSQ0MjIsKQSejUptbMsOB4TGRy
RQ+o0Fjsk9Ou3ft2Hzx8YHEecuOmDQFhvqt8g7z/tNTbx2f174KXLYlGe0WG
+Pzhdz6xiYFofFTAyt/HhCemJ5AS/Nu9NicUb0iJyfm0ZmtGZnlKfBmfIZYA
IB+WgmwGl8+lN7J0fUBrA6mJ2EgHu5hUiMEtqxfUqlhNBHo7u7mVRpGJuUwi
i9gGdLaQaphVpN46GoHG64V6uooa64ikdj5HReOyJIBd0yNrUVKNMhMMmQVm
3YUvvz16/pT13JXZy09eX7rzYNeTGz/e/fHxlaeLyvnpTwr7v7eE/H3H45cM
kJ/d2cL9a1du3L597cA3312/umd64sDnRz+btWhm7PAxY+uoeY/AOepi6ZVs
66CCptgJ6dvZ6j5AIwPZMidTrBli0xV8HV8lsk0NqrXiceu0XgnPLW7Cc2hC
A9i6raKzg8CDdYa5MZsaoJOpYiFsUfa6/yKlkNHRI3fO7RxQ6EwavUJpttts
ziHX4ghZtdHmhqDdo8NDBtf22X6DwWJSCdlC+8z02NCAw+6wQM15pS3dpJZu
sNsog3ozMNikuLx2Pp1UkFYenZlRENUUHYaKj0eFYZKx+e3b4mOKA7wTEvLD
wlHe/uGYRHzhlvzy4tTQCPRar1Ubgpf+m4dXaEoxIiX90xBEFspvA9LjI9+g
KAwahY7MLyzIya9vq0AklJAY3Z+i8UFBafkpSXl5qQnZjb2g2OS0z+xw7du1
c9eO2TEjqy5i7fKACL91Qcs/Qfh6rUaE/joycFVi8Mooj9VoP48lAYke6Nik
aM9ADx//VVuQ3vS/xvhsXhsRnLwNvykibmtJaOqnfBUNAqqEfJUFZndQAfG2
GDS+uqWdymhnkjtBgNDEqegCa0BZt4RCamrvZpEBZg+lEyIwRLU1HWWkHiKN
wGnpoDTR2tqLCK1drB4OWUiHAIgvpdaY2TZITqcB0JD+6Pavvji466tvtp+5
cvH7758fOvPD5N2LVx4/f3X75eKu2bOfuGph4Z8g0c8G/01O8U9F9PDRg/n5
O5dPf/v1he9P7Js+eXr+7IDRMX5Ef7hv2AROg0N7xmoG+qc0PHZvb1ujrpVB
0jEcPAO9U60yAGId0wgKqQpAAeiNo+I+pVWpsTmE42PjHV1NPSotl9DQBYBC
o0Xvls2wDpbx2SCP1sWDYaFOye9qJWtGXNttQrhPN6Dlw47JEad8cEA/OOoY
7Z/eMXlgds++MbesJDbU9/BGNRyhddw11meyaBVGaXVK8bbq6hYSsdjEFog2
J4WmbIiuZZI4W7MzcryjPBLK8DHo+Bj/QGx0dM620hhUcqhXYtQWP1QgKhGf
VVC5tTY7N6OgvGLju/j48PXveLztiw2sjG1CZ6K8NvojPly/ZAkiKDgIGYpJ
CovAZeBytyRHh/v/FZ2amYBDoZKSo8IwOcmJmzvdAtg+NbB7z+i+2T3bxxza
3oJAbGBAeJjnqojf+aPXvf8n7/VLPD1XrvqDx9J3/dGrf//HNYHhG9fG4WOw
nsuLPb3iApJji1DV6703BJRvLticvbl4Y3Gq0EoRiUpoTEClAigUZkLZop3v
YAP0rTwWKKhvL2HQldTiVlVTd8HWFiYD6KRR6LSaWha9OpsqqyvmNbURhBQK
oaWH2NkjYTby6EwawBOwt3bwedQhPl9I6DFsd9lsjkPQ2P4zh2/fvPzl07O7
rn/546Ovn96cdxPYw9eLkYsvF7uK/mdHyM/C+hcE+mUT9u6DJ89fPLxw8OiV
H7//bnb3iZPnvhzXWwf7tF/2MUdGpICerWROwJ3qfj0NdLBMPBq/T2AHpAB3
iCu0SO0EixSgi4RSSCh0wbCVD8icNof7ctbUFhDUIiaHJpGymSKhUOd0Dg/1
G8VcWNBJENpNoFLM6iQyNfbBfS6VyWyaMUMDc5/v3ddvsxscw+M7BsZ2jh6c
3n98z6jdqGTU13eozXaLfXRywmawmeVKsDK7uLq6rrW1sbCLLwVI+Yis9ciK
3hYN49OojLUbPDLz8mNCsJF+iEQ0NqMwG4uKiEeikvEbli2NTC/MyyspLYwO
jylpKschipMR3stXrEEiQwoxxXEpPtH+sV5eHv5LNmIiwlFBft6h/vmNpVu2
lgQn4rPzc1C/wyam4KL9Vy5NwsRX8nRGjWVmYO+ewT2T211GkLRl4/q4wEAU
8o8f+HqsRvp4eXt7xSEDUWuR/iuifJf8DpUcsiQrZXUMDpWanliJ/TgqJSoi
+sOUyJCSaEJ9fntpWklGTkFFn0SkplPIXTT3NeKze0mNRHrX1uLm3l5dW1tP
A7uisbKrHRJV52yr7QAIRUIKj8OhfJrfwCd1cJu20vgUbgetjVhGYXK7IaWk
TSkHJVx2UxkkFYtAg1IBdBi275wWmJiOfQ93WU/Pzp3s/+Fv+27NP1p49OrJ
YsrVE7cxW5h3P7z4n6M+fl6FfP0Tky0sOvs3mcOvXzycv3//ylc/PLs0cXri
wpX7xw7sHNh73GqUWCRCJW9sJ2OHieqQTXWb6BRbE4MFwqDTIO60CV1UcLDV
LoeEYhAChRKDfETHGGZYh0eVRyaVdGJ3SY+G1gkBRn5tSUMrRWM1wCq1Wgyy
IPuknQ9YmNSONhJHpRv98pDdbtLN6nkW26jzyGG3jx8amthhmT7o2jcwvmdy
QtXb3VLVDnWbp/tk1rk9/RrHmFmr6i4oqOhgc9wysURvFmra45pw8VsZ9Xpu
YwEqxwMbj8OHrg9H+Ybg07ILi/LTUxKQvn/OTsAtDUjIL87Nys/AYnGlzVUp
2OTUwGVrNiZEInzKS9b5FBV6497Be4R75K9Ao8JjkrBrfvuxB64hN6OmNgwb
ERgUmxCamBGzbgUSl47H4VvlNqsOdll27bLvmbJp2bUJgYGhAf/hhUS+7+Hx
q3XIgPBEbECWp+cqj5UIjw/e+9VvfcKDlq6LSarJfj8iPWNJUtQHm5ujIt9L
LEpu8y3Cr85JiqpMWZfnIdBx7VKghiBQSAUyK8CmUqg9vaCGW0GrY3JrOsky
CqMLwDV2MLoKKC3tYC9AaW1rYFDFbVJ7axM/tVrQ2tAkIHczZUQu3yDq7mlh
0tQAIAC4YlEvl2tUTYq2QvQdU18esp4V3Dijf3709fyPdy//cOXhvSfu6rhx
79XC65c/PPsH8vwPNvtpqfEnKHr9/NHDRw9vX33w6OWlby88v/7F5wNnLx+5
bDE7RzXjg9wRgXMCZqrb7TYHRT+t7pIP0MS6MaUbWsQElaO/VeyQACQJaFKB
UqlU2aeAuCBsH52x795vZRK35dfTZPp6CiQSlCRsbqxtoGgVcg2s1pphlVQs
FnTXMbLTsukE+eDsZ1ODdp3dLu+394+OuEYO7ZtzTE8f2TG7fdf2Efvg2NRc
P5fU3lS/jT8xpda5ht14t2OI251dkEKs1ZCEzC5CN2TncWrS/HIiSTwAaEnz
XYsMQWEj4uO2ZsSsjQso24TK2bgyL3vNu8EbfXzjUvBpuOyS8qLAyrZcJCrI
MxCFDlj+0Qe/zcnBYbzyEOh/9/L8k2dQkE/i7zGYONxvov7tN3F1W3Iqmys3
J/mFZuBDA/0RQT7v/94zI6teOgCOWvR6+8joiMPRXpK+KSF4bcB6v4/f/vXS
95a8iwhAJmGDo//0b7/9i4fHb8M9/D39vD7E52XErcNh6tPfy85IrI16K9kn
MAeVtBy5Et9ErKzNiq7Ymphb2SzQAnXCuh4Vu87eLgKIPDqLIBRtaZS3gaye
WhEAEHoaWZIeamMGeSuJWlaSQ2qkMlhcXgWNL6rJ6mxiNlC4ALtJ42YCTXct
gc9y9HeAtWKQohmzKBUNljb9keOD4Ahdf8D1+tSDb2/cG791a/7Jy1d3X7++
9PjHZ4tLjM9/hpz/iUQ/Rzn8rKsXY/SfPbl/587Tm49vP7x1+5tjpw/8eOPo
kenj49sB1Sh4YMJi2T3HmbEwtDqdVaXpHxPRqAqTSa9zQkrYBjLYVEmvkKWE
9U6Xa8g5ODq1fefc9PTcoN0uqKnnqgwQr0PD37qpgkCo2lxPJYg0IKDWKkXd
5UWVjfWV7VsKysjdLN6g227ZNFa7bdxpdzoHnXbX3pmdQ9Oje6ddE2ODY7un
52YGdYre6iqSymm3jM2NGnWTdnZHelUpqVnLlkh6yWS+FQRqK6KTIyqZbKA1
J2g9Mjg4rCw/OGFFcGil75Y8XAn2d6jKeN+gcERo3IbkouxN+OKK9MQAr2W+
Ab6owFUrfELCUNFx8Rjfko04PxQKiYpB+cZGb4kJSF0T2Ir0TqppKE3EJsSH
hfh7egSs9vILWLcWmV/T2UfXAPo+p2vUpmG1laX4eS5bEY7z8Hjvnb+sW/mW
d8j6laiwgPiAZb//aPlSr8Al//ZB1MbAjesz8zFYj+icirzstPKkDfn+uIS3
/CJLsSmeQSGFZVjU0pK4TAYMsEF6aUlbF18A6mmVoJhV25vB37aFsK1ARq8r
aSzr5VEZrb0dhJ6m4vxyNotf00hk9rBaehqYgnYhGSBSemlqdrOggwBsYdDI
chis6GoGFBCPQuzQt+wdcXCNBpLt8N+uHrpx/vKxzy/uenj9xv35p988vHvt
8fzCyxev3zSk/VQ2/1QT/b2GXj5/+uzls3vzDx+du3b7yZVThw+eO3H59PTM
xGemAxapS6Y0wBAHJo/CTFBHE+gBAUcDcNqIACTq4yvFkBZQSfRcud4wtmv/
jqnh/pnpcYfeLaZgWhe3q6haZOt3A6iC3NkqAEjNHYSyHALgZj4hX0gsKW6h
dTeWbM6qbeeyWP27pkYHdANj41MDWoNRYxIqJ2b2j024ds9MuY29wjYytGPP
5JSDweVJBiasfZNDdr3TCtFzy+pqGsUQX81n9VD0Iml9W24yvpTTzWjOC/dH
IBDBRZkBmzzDkdl+2ekxGQEeqwpSEJ4rkRjsioi05PhNuVmId9/xCVq1wrc6
0//99z9822OVfzB63daMPFRCSlJcTIhP8JaG4D8noDw3eXmGo1DxEXgcJtjn
I9/wuJANwejgEGxFjlLAkUhtw3uPzLh/G1pUCDJw7Tvvei757bKVARGBKxGh
H//aJxC5KfTPHm/7Bfp5Y1Duz6E5CVXFue3phUkb0dGo9PT08qi88mj0X0P/
GLitMTMdF7WtJTU1q7wHFHLzcirJgLWcw9CCfAK5tqFZWlkqovS20wqIjIY2
YQub2NFAa2GVSjpb6sjtvRxqXdWWpgYKowcgsbsplHa+II/X0AqW81k1VIoQ
ttvYhI72NjJLMmRXuSzi4TNzR+XbJ1zTN/8fXd8Blfahvv0zXbdt2qYzy73A
tI2Ag6ECTsCBqLgnKu4FyFA2suHHVpmuOHAnUTM0aZO0aZumSedtb+ft7U7T
kW22H/b2/r/v3v/9OHiOnuPxcODxfZ/nHc/7yecbH5+e/fCr969/evfiH47W
vuetTfOzfw7B/v9B9Ef/3sedbl+7eum3j3+48NP5N18///m7bx/3fvfxR8tH
T7oWT43uP7ammTztPrDsOuiZPHDAw7bKR40ejqnfrj0wpdQphs0DcoN79tTZ
V6c8nqExj0nMEWqMStBstg4OT3gHuQ6PvB4UCmpJBW3N2VWFzWa3kt9nFLa2
srnNpc1VmR1tSoXjwOurS3MjSyfWVryWfodxaNQ87j255nscX110KOXghGf5
+NzyUZd7yDm9OjuyvLjoQ+qEo6ORW8nS2lUjRg2n3WRwdbNohV2dhi5Oe2ly
THR0DDoZvTszLBGCRecmw9BRTyOySKigsJSc9HhoCCK3LD0EeASegQqOySTH
Pgo86R8F3xkChfjXk4sTU4lpGDgkCF5c/dKu5OTAQERNCxaCLyjNSErGIUkN
ecTUxL2RMRm9dQ6B1bn/wGtHh0FxVyUxGILBRD8JAE+GRIXAUXB/CPxpICQ6
PhvxlN+jiMRYBAL2LC4rAbuTjIqozsgKfiwrNzMdDoNvic+NRyalZlRzG3H1
vI4y/2hSZkIOW8ZltLYxuVreOHt4UNslYXKqpRKJGCeq7q0FDVqmnsdkN7Vx
mjW1zQKbuae628QWcms7lOY+nrCFJ+DxGrslbGtvr0FcKpFIJSJdroXRY3fY
9Jx9k4pp89GFUaPxHc+bJ87dPHRj/dNXv37v7I/fbKxvXLl305fLbt3fuPXH
2PStW7fv/geG/u++2R+rQnfv3fbJuJtXf/z5+1u/fP3mG+9/+82HJ0+sfvLu
W2+Zju1bnPCO9s0M7ztssll6Zrz9ktEF074et2FMaLbYFNNOnkFk7bUOD7ln
Dh70OsxG0GAbHLQ7rUqu2WGwemfdXrDZOgFWcaQgKOH0qC2i0tx2hYjNGbaI
WiqKioqFtBx+O4PlOfz68uy4a+n0iYOzFvuIeerY8Nz4sePHXjtyaNY5OOw2
uq3eeR/lMsss/cOHVhbWFpec7v0rCxqpplGuHTVNWXTMGmmfU9hVVcFjqRuZ
7NZifEws2hcxHoXtwsZkppMJyYRUHJlAyUnAFhYTfPHk5cwSFBASkxj4PKyY
hgx+dvvunRBs1EuBu4ASNCVx8/Crv38ICofBJKWT0LkZZQ1Fmfgo1B50YTkp
iYjHJceHRaTRdOZ2i3xmfnJM19nCbEQALwTs2AI8hcBu2/HUlod27AYi44Kf
3AMNRSOjoZGI+JjoHaEPJGZGIQI55allL1Ka1BAM0RfhEEmFadDI8obC/Jq6
DB9dSkttJZPq2RzliLCpjiVm2BRGTjXYD3KsVepujg5W2SjoamsyKFTKnLYG
DYfRU8rvaJZqpa2VxSKDoLZdrBcL2jhSFqe+j+NUKOVCRS+oqmiuNJbZlSo5
Sz7iMa2AQ6uSmv3g5MfHPz249MG7H66d++yLLzZ+uOwDyc3Nnuud9bt3r/9h
vnj7n3v5/xtEf7bvb9+8c+/2jRs3b/742Q+/bfz4+fm3P7v4+cdvvvvuG6tj
r4FrswOLh+wM75FB+5JRCy54dUqWVbtPbOcyQYlgUGmUy6x9HjY4c+DYnMdq
d9sUPMfYtC9gLLinZqb2+dT4UK9RYTE6Rb1ai2dE39HQoRGU4ouFAppYKu1p
r6PVNmbliri1naNrrx+cnfIsv3l00mtxTpnnDk+8unj81Kn3Di5Ozx47PcVX
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
mBETkAIJeOzpJP/n9j4WCoFH7AJ24SupgSlF1ALIC1RsAXp3Qgo5Lzw2N9Yv
NAfRIqtlppKqG4qK6MUptWCDIpeHNDR1WMGeASfNzHcZ9O5xBwg2sPLpgnYm
jdyh7BRQqZn1ckYzV6rqEnNKuKIGmQYEVS3WTmNVU1c9t0vZyxfpjDJNu0Gp
MjeJ2sw8Xa/TVOueXVzyaIb0J8/98vaxn7786svXbr27eP+rkxv3vvfRIl+a
unT18qU7N++uX737X4n1PytFmyBav3H9xo2rlzd8cejEOz9/8eFrZz569/Sb
b068ujb8/puTztMz+9csFqV8ecC8arCCeruezfeIjHqdqlchkrsFBh9ZGRlx
eEYM/RrV8Niw0wJqfQxaLJUr+hglzXax3qXh1mBTCkgkehylqkHU29XcIVLI
DMzykqL8io5SuVxRX6XwTCweOriwvPqKd8q97J0bmT22tHL0yNora+/sX3Is
LHlHbIpuFc9p4qqNQ/PH9i0dWF06MOTyTkzPz06PWHTWkf5hg0zGKa8n5OYy
Wo3Sxt4KPDY5LhoFhzz30M5kCgmNSM+IwpDh5MLoxHQoOoGUjEG8FPnS7jB/
AAaF5sDg8GD/oC1AXHDikzmEqAYULi/TJ82gfojNDX44PCq3rKaipLQoL4uc
k0XMIBKLKbRumc2u4jCoDRkY4LmAvzwODfF7MBoAHn02GAYPSCbA/XZBd0cB
gbWpQMCOZzHRmZE7ooDHHoBQO6VMPFBFqifvfPLBF1PxbbTsMsTThU+G1TcQ
kXtbC3GYAhQ0Oj4qAgJJadHLJHQasbSktoOpEpv1gyLQbrVK5UKJQs/oolFZ
TA6rmdBA5woaNRKRrLspW9jNFWoNQnaXSmGQN3C72OxOPl8ukYn0QqWgW8Jn
abR9gl7xgMDjNo0aRnon1WvffDM48+7w37/98uy+H386dfGXq/cv3bi/cf+3
+xsXf7t5c+P2vft3/leZ6P7GP88N/3kXxoei9Zs+IL33/ltnvrv5xifnz175
+7dvnjr33kn37KBzdJ9pZlGv3t+vs0otY0aeQ2Ew2dxsCai0GaxGjUUuATVT
dq/ZMqq3mp0HJiwmnUYjF4llIoleXlcuGqsxsAorsnF5tbTKOmxhRblC1tPR
zmI2UwiEotq6pu4sI5dfw2Tr3XNL05P7D6+MTs8cm590Tx5cPrRy6NipU2+M
jE6dXJ2fN0jYSsmAql1mn55cdB9aPrQ6N+52zUyNzRycd+oNTqvBwRloaS7v
qC5hN7AbCzobstFpBRQUKno3AIRg0oKSqcgdxHIELQeeRcFToDuiYQHPQWCB
kaFboLsCKfiwmPAd0O0PhwbCAAwyohi6h4h7dmcGFkDE4YkpiRmFhQXU8uri
3LwSclpmcUkmsqmmq09nktdTctHZu17yCwaCI0J9AAp7BgKHI1MJqTu2+NLa
E4hgzB4s4BcbtzstFrf9cYiPa8MwqNjouKSgoOKU3bjytrAQcmpSXTGB8LL/
C7BWTlXOiwnMrq6Wbkom6rkte4sZAwJ9g7KoV6DxiSq1tL+vT8eVy6btWouM
I2W0CSt6iehisLtN2CZqbmxvYnVVMt2cOrHQyermdDPIzD4Bi9ur4AnEXEWT
vIvLYvRJ9G26bqODrxMqxexVx+Glw3NrZ98a2v/2wtr35y9+sv77L7/9snH3
3P07F+9tXL3mQ8rtPwrW/1Yq+vPw9MafRg6b/ue3bt26ce2X9/761T8u/nD8
nbNn/vHhp8enPpg8umYTHj44O+F0GHRzqqOT03Z+n5mRwQJ1/Y6x8Q6VwWQQ
dHVIDKAdHNTI+3Vu++CUx6JWa1RivkjaITawqEyTkNlHwJBzm1vqm+oq89u6
2+tbOro4AnYjtwqPiEkuY2KleR0Nohqed9HrcC8eWhxbPPrqnNsx5gtM84dP
nX5zeXTiwNH5+TWrpKO7V6/kyGcWF1zuudn51YnpIevB+cnxqdkpl1EnYOo4
gy1NlHZiJrutoaGluLEqo6ynKxmHT9wLeQkWgyurSoRkFWJ8sKovJ1GfBuDR
WwAEDoFA7IYF++fhtiMidyVgoVA0AggO2E0M3BoS9GhARuJjaAS2sJBEbaOT
U3LLiorrG6uphWUlZHxddUcPp7McDsdEYvyitqMeh8fvBl7Y/fSDwS8GPLE7
ImQXEIOHYMvQVVAo4IdHo2PDXnr0GWxQGPAygQSLiiX6R9KqypuxT9PzKU8A
qVkINDYnFQaLBLIwhJ7cajIpOiYWDstmqC0cc6mW2EipZLWqxxh2g8ptcQts
Ousgt0fD40vydtJUvYz6phY2v6yworJX19vZWdVhkvWaOpTFlkqrWsaWiY0M
Lqert1HM9klIhQRk2rg6YzVHYrUaVpaGp4+d8I4vrrjPv37myheXL9y+sn71
/A8b7965f/PuH1uL9+9s3L1979bt/7eV/z+3Fu//ueGxiaHrl3+9fPGbixe/
OHPu3b9f/+y9M+8f/Xh86vDC8HHZ0lmH1eNx2wReXduAUzvhdGt5UiO32WR3
mEx61YBGbRSpZTqZHXQPWIbtFo3RBkrFSj2nm11bKtLVOZkoSnmNvrOEVl1U
19FWRa8uIJGr6LUV1Y2ttblJCJKQyPKxHfPKvMs8cuiQd2Tx1VWvbdPsc356
7bVXX9u/OLc8P73/2DDYwxDLlTLXa7P7xQ73yNTKvmmPcX52bnLcO+XS9XVU
1Hexm8ozCwkFNfQOXkcOrQyT28POJPoeqQlJeGpJISk1PbMEFvxSZTaGGro3
ixK+CxYXHAH1j4f4k9E7Y6LC0nPxCSjIC7DoaNxTyIDtEQhffsNA9+BS4pAE
OgFFKsrPK21ntNPyMinFebk19XlpeEgAfFsUEPwkInhv9COPhgUDDwdDnwMe
eeqxsN2J2Cf24gL2AOmUPdv8kOGPQR4OJyLQ/sExZFolaQ89O+fF0MIcNJ1C
Q0Ep8U+EAyEN7XmlLY1pEUlB1QVhrNrC7FAgtpXTwSF30rooVfVdjZKmHrsV
lDhAi1S5T2NW05qEXXI6scMkLs1l9XUxmLSmNpmkRdjX2VHc2wRWO7hgq14k
5ynaeb1dbJ5I06VRtSjddpDBBnst+5zjE7pDr7udR2at7qPmry59e+2TCxd+
+fCvd3/+7Or9m5ujizfvb6zfu7Nx69q92/8Goj/V2b2NzfvT9zfvBm/eg/n9
4ldXLt36/bPTX//1w4srpw+e9Z48N6I7unxI3n/CqR8ZMs+ZNGqrVMDlg5sl
H4fYoeRJenv7pEaTVM3SS2ymBavNODDt1KjNg2aVSqvVN5Y2dguEHE9NCp3e
IKstr2+lK3paylpqstFx2JSkogx4aFhiVXdBbxmnsFywOu8B+/efPDLpmT1x
cNI8cfDY8bm5k8fmDx055l2aP3hoaWrIKDLJVQbvCfcQxzXunV70et0G98js
/IGFIb1C3VOSUZtbTSHktPYSKCwRqb6RsgdNZ9Sko6Je3AvDk/PS0YRyArYa
Bosi4ePKcoISiAkIFOzx4NDnkXtCSVFh0UER6ZkppLDtcblZJNzT+LBwbHqg
35PwPS8npOBTSORkbE4RJR3fwmTU5qTnVZflVZbGbA8LDUM+DQVCn/APiAwE
Hg19we/R0KjQcDgsAgAAXz4LeiYegKD9nwN2PQkEAA/Fbg+JhEIi45Nzcyix
ZBSksJWBheakoQp8T9R2AIiJB6JSEtMJQkldFTY68aVtBfrevu46mkTU1t7q
zqSJK/QqHt/gBEGLR2HV85UKvqy7XU1HYrQ0AatH1iPgNMu4uub4ekEzR8Jq
EDMYCiGnobmRI+jplff1M80gX6cwCXq5g6BnSueY6z7gXTk1rACPnV/46IuP
fvn4ryf//vHH1+7d3bxYdXNj45tf7126d+v+nRv/kc7+Ndq4cW8zWt29tblx
ff3ybz9/9Ov67b998flP65/+8MpXpz9fM606DatTp151e+dNY2alnT2mHJgc
4072qaxDerDTNcg1WHQOo94q5UtAcMBz1GkDB6YHZVqjzQTqxAw2rYShkfbq
FPRyallrG4vP62G4hK11yKTk1Oyi/HQ4CpuAjEehqZ31zeQy8yGvUWJbOr48
O7b4xgGvcerA8pG5pTcPuOYPvTK5urCwdMA76ZK5VOZx77wTNLmXvAdnDswM
201u7+KhA0N6jVlRRmwsqCzAoihMYikTpLPqfQqf2sqhRD+1LRCKSo9JgJOa
qYkVcTnRaZSUopp4DAIZh8HAUxLDE6PDk59EQB4LTNgLJYU8n5KLS0MGRL8Y
l05CvgyHJhAJxLzyGjQ+nVRQXkyuqyktLizIp9ByS0uj//LkYzD8rj1+0U9v
3R2ya/u2p596DvDzAx4NDACAKH/Ab3t4avH2p/wA7B4fpl4CgN3AwwCsoJyE
xhdtDWWLWSUBD9JxJeTol54PjMkvzMjp5cQ9lUghllEKKXQKHofem9Og7RcL
8msyiPA2XceAUcAVGg6YlDUqt4GvNw/PaPilDnVZGr+jlCZsa+6V6SSSJmpd
c023QqGWyMrlnYYmDqOdzuZyFX0CLciWCPUqhkiiUY1sLmC557mKo/37Jl9f
OX304LFz77y7fPbjd3z56+b1jat3Ni7fufftr/fWN00ebv/vYuOfS4t/gOjm
7fUrv//684Ufrty8/cPM+5cu/vLuN2//df87Z4dHps6dkU/tm9WvutamJl3K
ww6HcpSn0JpU7PZ+psLbrQPFVp3U2tdp0NqNwwfdHhPoNkitVpsvJrFLMhva
OSajVMcWsOIyOU32IW1vPVhHLSCS0rD4tIQX8aRsIiGbWl7RQq+m9Yw757Qc
rffAwUPTK+8cnAHHZycXZ1ffmTXPzqxNvz49NH3E9xKEbo376MLEtHrROq87
MnV0bmLCMOoLSfunnNYBaVEpt4teDq9JqG3spjJZdbkJCVhCNZdOikPj0HGJ
Yfh4MouOIYVmReJpBCyFW5mMQMSl5zWWJGSgQhIBdCiwE7LlAUJCMAb2LAQa
GZZEwqETYneEkkpTEQkkcmxqCiarqburPDMho7wmF02AY3MTwqICoOit/n5w
AAiMjEEEPhAEAx57IQiWgNgB4BBbQ/4C7IhIoYU9kIkBtu9MCHwq6sGA4Gce
C4QlIKPrXk5A+IeHYcmIqjZq5stJxQCQithKkRWgnwaqM9NwOyNjkgrraVUN
XMFAZ2t+M28WXqbHjOgGOOyiUbeXYwbdetAmtkhENEFHe52KZRF2sFnN2Wwa
l9HBbtNIGjnsLlZ5F5XLV3AMEq5a2awXcFqaGzgq24BSMzo7abF1mw3CtckT
++as73z12tTKm+8d/XL9+oYv8ty5//cr9y5fXb9+++7G/dt/WAz/lzi0WW38
58nOu3dvXfn5wqWbv1//8pevvvny03+c+/bspZ+OnOifPtF9+oRl3D0GqiUg
x2zTzi9wpVM2i4PXKxsx6kX9dHu/xgAafBRJY5hddlj2jc6bVByb1aM3cnkN
pFaeyVTvkPSIJYKuVqnbxmUb1JXEYlI2mZJPyUiJIpZQUonU8kZps6RYb5hz
srX88QXv4tDqqRnbtO2Y98ybK65D/bbZldk3D6wtDjunJ/Wc6f7940atZ9m1
ZLcfmjvknVBYPRNzc5NuvUBKz0rsyk1PaInJL2JSWutJbdTymviE8nYCNLko
PzEWEwdHl3fUEdJSkRBcdUNZVkpeOY3ZhqsoK8zB793xEAQTtCc1PLQWHpgL
xwWnBQahUIkEVGQCtbqGGIsmleSj96TX0Ioy0JS8OBS1AB0TWeuPjvKFqT05
iAi033Z4LPD4M347AT8A8Hv8QcAPDgkN2vmXAAywLcT3zY7H/R8JI+bG7g56
IiahCNuYG5FApeyGVLVQQuBZL6GrSXhqUjESFgUk5O2pEKppTzAEOTAcJbw9
t76kmUFvaMltreCquWV2sFiuEx5QKbwG14S42S4ebdL7aLWEoWax1cLGTKKs
RcBpyJVzBTxJl7A+NrOgi9WoZKiVjSywtZ7X0WOVD+tbBwxWc4+H4RqoHZ5Y
/ky6euaj06uuV9559bsvf9y4f+nqhXM/ffLdL/c2rv0xOb1x+f4mH/q3nY9/
tV//UPh/mH2uX/n14u/Xfr9w8swHl698/Y9zXxz98I1+64m5N/qPTFmVH6we
n9B4+PubDxgbBuyC4QEjV6WwG6w9RrrVqrXa+ix6ixEcnzbbp11et10Eqg0y
g4DfiK1niqU0G7u+vaOtjav3GAwGVReVkInEEiiFhZRcUmUDraQ4PxNHb6O1
uuam1Hqz+YiPQy+cObvknhs85uNDHvdi/4Bn0nt6+sTsrGfqgMzmGR8B+RyZ
w3Bg1DFzZN/qSL/e5p6an3ErmD31lCZxe3oOPSa3sCWzrrqmt6KahkRTypJf
jCNm4ePySbFhyILayqI8fAy+uLaa4BPaMRmEsPi4uBg4HB4dgIoJDIMiUhHB
ueg0SHpIfDI0ABb9YkpiAjw8mlzXlEtKTkuAxaf6Ykd6Sh6VSEzvSMdBIpHJ
UFIcMjs6NSYaAB4DYEGP+BLXdggiGgWDQnf6PR4Ow8UDwAvBACYlIxkRFfRk
Ql1B6VPIspJcP4DOy34qnJVDQhJynwPqc9JItLJEaktdecIWwK+FFBIbF/NI
RV4Tw9BbT+GomoiNaSxP5YCSMWvV6426EXm3zj4psqiVXCu3vYXh7iwpYfe2
Kjp4YkaTprdHKmvpqqcwJXyeWMfr5auomp76boWOTTcNKcxKqatmzKDXmbwN
w1OnPxiyH9+//NZnxy5//tutS2+e/u6bS9/fv7nZht24d21949eNG7f+WKb+
j2LjH9eF/twWunv75o1rV6+e/umnn/9+4eJnX3303erZt5YOfb/66alF25x2
0ryo7FzRe3udZpHObBoa0oudGjM4qHZyrGYFaJJYQUu/a27M6J42uZ1OoaFP
0zeg1rCrhUpFX6tT0MrpbmkX6Q1i57iBRS8hxWMzqYV5mb5UlkXKziNnEIo4
pRrrgqNnzDK4OrW2MPzKyUPeo9Nvz3q8E8eXnAMu+/wrEyfGFl0HFsCpkRmd
T6bytOaVKbd3ZfjIpENqtI0vLY1I2zhtpWoFKyq1Gl1QXU8oL6PUk/JLEgkF
5VQiBp9JSoBnkPHY9FxKOTkJg0ITikvTU5HhMSnB4dDo2LhYRPSzexN2+b2I
CY2LpJAyYbiglCxYMBIVT0zHwvamVtCo1OxkzJ6ASEwMGpucgM8pKqC2x+0N
DoqpIJcTsgqS8nCZ4dEvByRC/R8GgC0P74hAQIOidgIPBUHj9voBsXufD01J
fAoIQIT6pQUWI3PrEzExWfmUuFh8ISqrsKSI3FVQsAeTl4BCwMJ2xeUVl0EQ
T2cn4sj0Di5XKTfWpMdV0w2MIpafWNNgY+tHhAq6nKVQDVrNMh5znN/te79J
WUXdvU1iXpe0w5fMy2nN1Y1NdVyuukvOEXTUghWdrTyfauYodSBfrGs1NGhG
J1TySccr5nHZ+MzJV8989/M3lz4/efyTf3z/jy/v3/lt48bN2zfv3P7l0vqF
O9dv/ccO7L+cHv5ps3f3zubK4t3b1y9dvPHThZ9//vatd9/6yHtw9dTbXsv+
+X796flF0G3meyWi/Qz9frV60uAyaYf7NHKl0SM3W5SGfotDLu+fWLQN2IdV
JoWaY1KCGo/BomTzJXxOmYzV2CvsYsp9XNvhVIvlfT16Y7/dalDKaGVZOByp
sLw6h83dp/KMiMeNqnHvysrcm8cOjk47V/otq/vPzTmsM+a1A/OH3FPW427v
+KyHk1rCYIlAt9IyYd83sjas06sdB1fcvS3MjhaLpRtBLkopa6shUsjJuQmk
vLRialUjDY/ApiEfh+Xmk7C4FEoKEu8T9jgKoagwKTEVsjMKR87PScPCQhPi
gZczoTGQLCopJnYXmpQII6TBEWnEjKzikpSQEkzY3lRCIrI4ISIaFpNWno/L
fATYGYguyCnKyczCY6PSEZR8ZDJk11+APx4PPfCIf+AzL0C3vBAYFJ0IC42O
85HrnRAIshLTXVVd6RdYVRkJ5Ndk4iOI6aiE+PoEDpWcsZecsgODyEPmKtqV
DSxSdhUqKr1DIGWVFCosTVmKzuZ+py7b6Oo2zpm6jjjsXK7NIBsUmFkiWwer
16hTc2t6RA29tczassIGBpPN6+nt0tH5RSJesYDRXCf06RzpgLCXxRmsU423
iibH3J4hUDJle+XIub8e/3T2rbEPlj849dGFez6qc//+z7/dvnTp2sU7d25s
2jFu/CeI/vjx3p+D+rdvrt+6ffPyxRtXfvjpwl8/On31i78dOvXGmbXPzp2Y
dPXPmVYdmhWbVKgcl3MtkxaJUuNT8kK9hC8DFUqL1uayj+rVZteYalgPyo2c
3l6D0qQdVBj1Sq5Y2FPGF5Ka+Ry+eXR01sbvFoKuMYdnbGLYbbf1mxXs+ora
JiqZZR23ug8aB6xi44GppZnXF+aG97kOLE+d9Kx5BsCDmhNDyxMut+2QY2Fm
2kSv7zZYB+a8NtAit5gOz7rkbPnkrKG9mdUht44yqzqpmWWMIhI+Pr+cVJif
WU3KqSpPDNsbD0djk9AxMByZlJKWT4JFxEED4vDQUHjowzsRaZTS6prciKQc
SHhSXExUSllyTOQOGDF1Lxa/JzwImUYkEVGBaXBoYl5eSkIp/NkoVDyaiI3c
A/jFbN+zNTTKR9wzUEDQCzgSKhMFbI+NQ0e/GPKAjxrt2BUIgW95EB6z/dlo
GjYkKGTbY0FAJr49Dp2bngF9ElldQYA0JyVGp9fh0EHc6lRcRmNGZwMhJ/iJ
+vTM+ERYeldOWbaIZ+nm0T1CFr61LrQXVgCyxZpq5qxiqMVuYCqVLA/PJ5gt
emlXUzVT0MDgVzOr2G1dbDa7u7mRwWCxaaI8kbpJ1K0VMRmqwXZWq0IndbWZ
JOID01KN0WDie9+emv/29SPvTp72fHru8nfXb99e/+yzC3cuXLp/+ff16/c3
K0b37937DxD9yav/eWDo1qYZyO2bV3/75sLlyxfe+OTvf187fODtN054jnnN
0qFDcxbBPsOwQDziYjisin4VxyAftZg0Lo1BolDxjUqtkW+z2Adto9YhiUgy
IJCqbRqLrl+sN+m5SpG4Q2cq6NaD5pHZuWkNt89i1ukUOpPFPDC0zzM0PKhg
tndSu+Rus8c17zZ4LLpDo7OuQ+7J8bn5U+cPrjpOeJ2gV74yMG9zO0dGJ4bW
nKqasppufs+owzyiNQhNlimLvJ0/7lW1cYR9buNASVkLrbiwjUCEh6bmkcuz
iI0kbE5eanRMYjoeh8/Ax2HSqNSKhs1SVcSDL4Q/+TwKBYPs3gFNzi+lJ6Jy
9u6OjEfBEmsSYnbvTCnLhSNx6BR4ehYuJsZHmKLT81JgiDRsxC4kCe+jURFR
4S8k+3g05IlYDCQJsQcdBN8bRsoIxZBKC8hI+I4HfDrtia3b0Vv9nn8KQBTX
wP2gyNBng/wAWHFsblJ8Ybg/gZYTg83Bp6MzmypqYNXJwYjMDH9aykuFpWmw
LeRiShoi+YWMehFrQGOtKkb1GCqVKr2R3Us18RtskgZludaqA9lCvU+sO/lj
Uga9jG0QKnoaWHUdTKagvo7ZWFldWF9aI65j9PF0XINMJBXLmqVMqVw1JNP2
SxQSxeSo/Pg+7eLIwur48skPPvjk02+/fe/aj29+f+XOb3ev3dq4tX7n3o37
lzZ8lOg/1dm/Wejf/LMLe33j10/P/+PjX79/d+XU2U/O/O3Nd8YmPeOvel2i
1bmBHpvDyNBPufh8o0k3rVYYByX79Gojz9gnFvaq5APDrkm3XdjDsxssBrtK
r7KJ1dqOZmF1fadWzAeHvbOz0169WDYwZOC1ltPoTc1MiU6h8BFyMYfB6tMP
6UFw36RzeAH0zk7PnrCPuofGlt70Lk2fmTCYHYaJfW5waNJrHfccdTCbuCyR
pHN0aHZaY5CqpR6LqkM8O69hqoSOcYswl1jf00ylIzMRUER6bnVqclMGCk8i
p8RgCxAYku9jyS6potHraSUpYYkvhCGjYck4bEzAY3/ZEY0lZ8MDonYHxOCQ
6AY0cnsQuqYYhcTEJ6flZCXFxMTCoEhSPg4K8bEnBCouGh4Lx+KSADQAhKC3
7o3emQLLLEDFIQKyCDhSaXFxFiEtMXjrzt2PPLAtMDoA8AvJKM1APLkzHI6I
Lo8trM7sCgsmkjOjdiWW0YKD8zCPAo/kV5JzcZmEiJRIbD48GIqoC6HuLS3K
wNBiqUJ2XbNM5hK3bynqp6uM5jKp0uPh9u632o1Oc9cUaDLLDLXybpGUXlaW
lsfo5HTUMWtbabUyQUsttbuuvoPbxO6Rt4kZMlM3Q2SXi1hSg4GrFXHlSrX3
tHlh/8K0s2d+cuz1pY/fufTdrxc/+vjO376/+8eqx60rV3+69v2d63f+m0PR
vX9Zfd7avD69fv369Ws/XL/zww/nvv7g9NpfP1xzn/n0mGpl2TjhmnCA4PiQ
tXnA3ic1WY16hX6MyVBIG8fVMgO7X6+Ujpq6NaMjY6BV2ssYcHk05p5enp4r
6O3oNZZViwe4OoN7/9H9kxMyiRLUyfg9fGEvj+PLa329fCWoFPHUDNGokyed
mvM6jqktR+bcBzV2h3t8+fT4wuySmNEPOlzLoH5oacZmX/BOVnTzu/vUTQO2
JauQZeKZRuZkLaK5WQVDyxgaG2M1FQvAnhI6PA+Ho1Q3dmUkVMT4uGsmPgCS
Qkj2sVZ8s66GTissLE4CIA9DMnEx0TsDQyOiohHw6LBMf2AbLBRBxKGbUQk7
IUBmYSI88tltO6KQ6ER8PCQDE0/ISYaFp5HSQ4EtkORkAi4GCNoC8wsAgOeB
LJw/KgKDiSmk4ogFlWW1jR3JiBcCA3bsDAzMp/gB4RmxeQWkgB1ITFQgEB0E
1KTJkqOfegSeXkiNAWJy0NCQltSnMqhkKMChVeYD/hlALKYQKKvJCo/FYvjt
pj5TmhBB45Bbctp66ntFoSwDltfXorc6rU6wQcspmzDa+Rojq5VVx6pp5/Bq
+bSmlkp2fRaRJNV1lSvaujndJAWzTqRQKtrE/X1ipoEjlLRInI6Z+RHV2pDE
ZDq/cuRvX/z05Renjv/y3TtXLmwO6q9funf9u+9u3r+6aU70X1aG/piO3TTQ
v3VzMwpdu3Hr7qVff/j815ufnX31/PEv3lobnT69uOI9rTUuTlo0JzQ29b6R
URVXznHpBHKb1WA1sM0Cd8dgLagc0PcPDY6MKdySdqF7ql9i0DBquowWkcrI
yG/UgWLe1NrU1MkVbbegr0+u00iYAp7EYuB1lzN6GV1iHShiKiYm9CLQNrE4
4x4Y9rqHFDPqUePka9MHDx7VSzh9xtnhPpV91uUanRwBuW3K7lpQ5xk+alLx
GDqWe0jdPeC1C+mCfrddL2pp7OFSS6rQ8AwMubakGB2BT4WRAgPKi9ANxXno
ICixkFxcUlqYDoNAIWk5qZDndwc9G4FK92UtMmYHsCMKEhoJrYiuRaNJxDQ4
pRoGi92NhiegYol5aHR6o7Dy8SepdCIs8MEoYmoGFh7wVCgyDfB7/mEAGgtE
YAEUCZ4fAXCI5PTUZ5AU2BbgUR+VBrbufmHb8zuhu3YHBAX6h0ZRduLiyFWB
4RkhqALSXujO3KQqwJ/aWVqS/VIqpaKxNiIKjcaVUAKfL0yrpZMqc8PxlcUg
TdHRxmQSwhvNCj5NOcEV2QkqqcvmMLMsA9UaiVXDdhqkXc26hrZyXnMnq4HJ
Lhfk0+vruum9jUyjWMCv4ta1i5QKiXlKpm7vYLf3iJr14x5DrY97ditA6+tv
H3V98NZ7x9796R9Hv7668bsPJr9srN+98fumocP/eO79uzq7/y+J5otG19c3
bwdfufztV7/8+NuPr5x494e1jz49c1x35DX7qakVoVM7um9aNmHjWQ2D7iGW
3MjjKME+sUo1onWyBzlDHqVYqjI4+vvcoETpHHdq7S4tkyHXipWt2eXGfap2
+9zR1VeOuRicPgWX3Sdjmh0mnS+gGeSSXkZTE1MqZEkGzd01dId7eGzf6LDH
M6RxqYZdi+8fmp2ZM2tMFsf8mM48sWJ3j0+55B0N3VIF3zQ+75X3MRmcZrO7
t800CnYV0FUWUCbhcfv0PBavq7kmk1xfW05CoSP3EKIiSyno+hhCYUl1c11h
e0c7nZqGw4Whc0ibTnohscnpibFIPPSFrUFBO4OgsMwAIh6ZDkEF55Tk4Euw
nZi0VnpG5AP4GFxpU2VZYS4sBoMmkLHQyJCggPA9CDws9hkAEumHCIHFJuYR
SM+X4VtE7Y36xO3A09CXgnb7AVuA56PRCZHxGERUUGAkPplUXpZDSBNUEzHJ
uakPVG1/ds+LRGhsaSEhKxMbF4rLZ/HLE2MhOGIkLC87L7cwky7rajM0VEsa
2uUibKalkSZuYxooAyZlJ8Mqszsd9tpBXX6vQinkS5p6OX3djeVUOptVz2ri
1TTxOa31nVV0Vj3foujlcFkcQYuIzRd39QgH7GzpwKilQqJ1LR1eef2t6Y8+
/uD99z/5+MLG/fXbv352//ubV2/fuLJ5SfhPa89/i0V/joL8eZvq9o319fVr
l375+dOPb//8+fn9n/318+X331Eue1894TCY3IYxk8lq0didmmm5SmSWipVe
u8cjZ4iM/RIBvadTa7BZdVrXiMVo6Tep9f39oMAyqGBzOF2MumqRE+QrFpfW
1qb0/B6RSMTvFYmFOqfDatYqzf1yoZBZR+/pU5r3jegFPRqTY2jY43ZN7bMo
JCbP1MlDEwdmHRKD0zPm0FjnlsyuqWmnjMVg9WibzcMHXSIdV0ij64ZBydA+
VQu1tUct5fWpZbKyxurCwjRoEInOqispwAUSylPReaiI7DJafU0NvYHe1EIv
SkEnJMBQ6WmxmwXmwPhkfCopLygwAh4VCkvARD8RkZNA2EaBFGfWxhbCq3HZ
panwPIax363nNxOjAx+PyyLnZYY87R+2BxKy84XNEvULxFpyOhANPEhJacmr
IBSy8fiiiIf9gpGYlyODHgK2ROJIhIDoBIT/k8+HYStepOJ3VtGq0iAPQxvZ
Vcl7iVxycUxpQHA0hpRLxEH8E9IfB5LbCJlZaWRyeHRudSFYy+O21NFKmgkN
nQImvaShAFdM4FfVmtymDquhWUzziZt+s0lsEDC6Kti8lkpaUzOjQF2nbKvV
VNCaJL5/K46Wy+6V69UykQ9EMqNcIVa6+LIWuU5vOOw9fswyfsRw7I35N7/5
7JtfN35Y+/3745curN+4c+vG5nj1rRu+RPW/9qj/+PrnfLWPE926fvn3X3+5
uP63b9969+tTP3756Wefn5ecePfcF84Jyf7Rjwb6dDqnzgIaldP9C/OyWpEv
L/F6TcMjNqVQpgAN2gG92jWgMGmdblCuNYJc0Cppb+lkNPdoHQNS/aFXV6as
3MZuUNMjsvZrdG77PrfZYjANgyqNUc2qq2oQmMeGDcLuWrFrxGa0j3lcgxyJ
cmho/qBnaXaIp/d4rGCfYWbK4JqZdan7dFoWm2n3TLv5Vr6MUqMYscmsahoR
W8XoE3DUBkEnXSNvbSrLbURWCusoxdg95BISjhQTnd/R0VSRn19WV1ZZ5JP2
kEgcKhoeA0figedfRmHJxdQduyGxqLiEpISAkF3l6fnhddGVyKaApJ2x6el7
nqLqTVIZpwoZiiABW1AUHBIG+IdB4LDIZ4HE2IQ9wGMxzwJAcnoeDUsmNBTu
bSBRoTt2+kPhcCgk+eWQQBgmAbUr7OWIp54IiXkAFgjbBcQnAdBK38uM98tJ
zU4AUgq6CnD4l+KIcdG4mPTCuMCIsAhcc156EpAY1Ytr4MiospomRWNCeV8V
QyYAjUzJoLe7WWxprtVrC7T9Ro2eXybWTQt6lSqmqI3GYtS11AsbxLIGZRaj
up4pN4pbOkUGYx+HxRbJ23ttVrBXL2yWikHPqt1jmVt27ZtdOnbsk4u/n7x/
9OuvXH+7cO7X65sFoPXbd69evXL1xn+ZbPwfTrQZijbu3Lh6+fdffr7y0++v
v/Lh6e9PH/ti+sjCK/0TQw7VjMk+IzHuA712Pd1qmGRzZXJwYthlkKhBsUIu
EPGlfC4X1OmdBsWAYXjCYTCYjAMOkEVvF6pUNvvQ3Pz+k6+OCVs6xSqlvA90
+SLNiJBFQfrIZ7NYqzcY+prSKQzQbe2lUYmNukEzaHFo9PYeUDs+tHB48wKq
aGjfuFGnMMy5zUOzsy4d6LJqeqxTh8dt3fpuHqla7nFrrJLi9MSi+h4eT6vt
preLm7LzMtOq9xYKq7AZEAQyAYUiZJazaU1tLdWF1JLmzqY8TAwcgoG9iMYl
EPPD4CgEIp2Ef+qJpwJRKXjU3kdidxVnURKIQTkvtkcRE7OQMYlVUmE+CYGg
VOZgUxGoLErwkzseDgn0fxG2J2Ab8DAK+cgOXFZRcVhYdIpIVVBXAClKKQny
84eE7gqAItCJCSg4JCBwbyws4Cl/JAkaVJpXlBMAb6CQ8NsAeEYdlLiHQEU/
3JJJiYrPg+6gUIrICUl7gG3+WSGByFAaqjEjSyQpllXzOC9KuzrLReLiWmkD
rVdnUJA5DJsetNr4zp5GjWdcM6RWM4vU6pbSLnYLU1Lf2yIqZ9ezOjmCDpZG
zhcLGXR6B7dX7YvlShkDZAnUc95p7zB3cP/c8qT95MW//fTZzdG1/e+vv/P1
pRsb9+5t3L15/coNH4Q2fUH+v8T6Xwrt1q1rv3z/zeWrH7719rHXvj38qfeV
t8963fu7Xxk+rx7XGezGOZteIu02akycDgZnM7OCRrZMC5rN/QaVSG+2u436
wX670zloNei1oFYq0VoGplcWpw8dXfBadfwOji9hC2wek3nMo6gqwaMo1GxK
TRdHoDWLSvMbteMjyqYKcnGbYsC9aS4yrOnXuh37loZG55xcq2dCq1PpZ43W
kdkZpxZ0q4esM3NnRrq65Z2tZe2WYZdx2NRek0HIqWvjqqSsbhu/MKeullpE
KpbWppNCickoVDKJ2sQWcNpqC7NyCjv53Lo8EjYqNCA6KzM2Ng2OTYRAkon4
2L3hEDyFiNkDIEPT8nB4AiwT2YlKp1Kj4kpp5bkvR/tjSvOhwBO5Ppn1KBAY
GPTsw89DYXtCIzAlGcAWf6hfPpnLK2zLb89LIWUADwFAQJT/1ufhSduj4rGw
wMcfin056LEHt+9FoQCIXwAW8EcFJrW2lxKx5duq6JJC7E5UQAYkrQ2LCkWk
RD0eX5QBiXg5NDE7JrM8gEqpY3FpohJyIC2Pr+4GW1iGjhZRZreG4ZA7pHSj
sV4L9k/IFeXtllGrUKngtPN4bXRZXl9JeXa1pJWjtnY1aqUtDTQ6QyLltxq0
qj5OL1sCzgpBmwc8IJrd71g5ODXxxdrxuR/n577/7OLt++sb1+5cu3dr/cal
9T8sG/+bK8j9e3/aV28OWd+6dfvO+m8/3vz59fO//XR2/P2h1SNrM68cHpiw
DkxNm80zHlA1pNOPLfeLeBa5TeXQa7RKbV87W6TpU6u1MrWPmXncw0PjZpV1
yGkyKEDboGdiamrp1Kp3dNBg4fZp+7jdQq3OZjfp9ApuYUFqckkxIb2gqK7H
aOvrIGBplhFdY2l+bnm3ccgzOOQcMpsVVpd7/6R72dgm1bulGpWPkRk8M3PD
oMFlGJpcmFvQV4olbWVtbKcdVAxqW6pRYRhyFVPM6tbqSlOopZQcYmVyT0Np
DaymODWdml9UU61nl5EwcDSJ2t7dUFpIggcFxFMyIiHJmJT4Hf6puakpaUnw
OEJ6PPK5WERMCQSdScrIbMLHluOReVR4UFolu7kMCyMyVNkozF7AL3w7ArIz
AAqHBvgBu+J2hRdUI7KLaYV5VfSSwvjimK0YQiAMFrBjDyz08d174lCIgC2B
WwHgcf/wYAYViyKVl9QW4rJKsrJIsMrYfFxoJKEpB1UHj8rbCQlPqmwoyEmK
RBORmcUpex6t9iNmFnbzqbLiOk52QQcN3dXUDfL7bCx1V5+0o1eVK3WrPP3W
niqXlSup6x0WijXKHlZbGSOPQaO0V3HFlTmbd7QwXC5XqNCK2hkWtVTSIxMa
+x3N7BET02UeGRs+evbtowc9pz945/zP1375aGPj4uV/3PzVh4y71+//Fwj9
X070r8rjxu3r19fXr/z23a/nv7lw/otPp8aO/fWT0391qVZO71twO6xTZ/YL
lQ4j3zCk5ynFji51N1ev12oUaoNLazPYzQ6pZfHImY/eWe2XWr2TbteRpSmH
fWL51YP7h4wmtUTt0kl9NK7POCyV2E3tjaJxWzs5r7Cqs7m0Ue3St1ZS9mQo
hvS1ueSCWpZ8YN/0gMFg1Guc8wePzYGLGq65zyHR68F5ucYxvX/CZh0et8/M
rCg57Rp+bWprm0XhNjh1DEYBPi6tsIPbxLC1oAmtFFROce7z1ZU1zbE11JTM
6tLq+mJ6fkYmAREWAs2tryouo+LCw2NSUcGIYmpx2vYnEAlQFA4T+Jh/2Hbi
S3tx8PqdsHgiqoCWEd2MLm+hQHIbKNjE8EBiEzUcDvio9EM7AAoegYhB+AOw
xwIDAD9IVE1uIxZRXCRC1+AzgYeid2LxiJAXYwOA0IDQmPSU6K0P+wHbXkYj
ohF4IKMYTQ59NLGSDHkxCUqoqC1+uSP1gZKcNqhf2nZ8yUt7iEk4n0AsR8TH
PxofS0MmYjr0ze10OYXJmenhqo3lpOry8oocFZVRZrANsmZ6KR5Rl7fDo2XM
KX3vldwgrq7ltDdWVfQ2eLuqxF2NvTU1YJtQLhdyxGq9DGxv7OnTCZlaj0U4
qTWYl4e9awdX9s18/MUrn39+af+797++/+1H16/e+fX+3bsbNzb+aen53yLR
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
+N25C+e///7CD78Mon9e/8w6W18Pubhu/PnV55fPfPzCN1+cWf76uRMPvfLk
I0+NH/LGpw4empl1+Bxp/0Ro0JPPOjNzUVefFQiN6KZXlg6vLazum1lJzLl9
5nginM0s7z8yv5gKhT3OQOLQkWNPzwfvW5n1RLVSvXHUbB3PZBwqiVjdzzU6
OHLVCDA6gNxJG7F4LNCtdzVh+hT9Sr1hSGv05PauLM8vmBNpgW4MsHDFBvmw
fjqcGbcVYDNEpqBZknashN2t0orYdJPfN8jjMVswdLHR5nLY/C6DXDZiNphl
RpdeJupBUanwsvp2Eha8paiR0S8idzFakNtBm+8qq4c1U1hUZBOS2FqP5W3f
AwLthPwGVAIt2VxSLxAjajeXYLhsXFtTxbU3VVZtv2696txRDimBVNxaWrKl
DlJTXly+cQOo7gYk2bhrDw2BAkOb7gDVl4GvLyqpLiXV13bShMOsdlS3wKRw
aPrLQNe08djNu+g9jFYMthWL7GxGs5isXoWGyCVUYBv5bb0SKXcPkq7pu/ue
PgaIegsWUt1yfTGKTdyI2TlQK+dy+5IyGRTGNQSHxqhUEcWBk7mt3oTBGZC5
x0RmY2fAF/f3OT2zSWDR7Yjmgip7MBYZDlvN0uiYasQwaDU4bd5xm8crczni
yzn3wmR45feHjwZfWrrv6dc/PfTp3x+5+sQfv/rks3PnT3/2zSdfnls39Pzx
/wmify7lXy6Q7wvfF0B0+fTZbz/52xe///sfXnv+6bdPHH9zde/i6kO5lcVA
1hVw5sbMPiDmGzfEzMCk2WR1JKz3PzizlI/NJGO58YBp1JycTc7G9i+uHJye
S6Ri+rh76b5jJ+b9qcW4PyQSm4GgUWcPRH1mo9Q81O1PtWhsxn7GrvJuZciv
Jd/wK1TtdiIbxVLzHf5oamZ53+JyJjsWMsGdPbphtZQrNMdzzimOtkc5QsU1
kAZa4K07G7jyXhyCpx9T88USDo/Blltcbs/4uL6b2S/sIjUS+DxuLwfDpsFq
CT082YiGh4ETBNgeAgJPonSTWFwyBll1I5KB21pE7yPeCIeWFejylmtR1+6B
FPUSYXtuvxnJY9WCa28E3VC9a2P1NaAtW+/cCtmEKgHtLAE13nnj9TcWlW4t
oraw2VoslMBkY5CoW0E7tyA3Y0vrQCg4Xd/HlEtNaD6JuA1dcXfZprs3313S
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
M0bjUodTpwe6MS1bQL+uQ7e3c5kwLllJ6EDXg3YWt5RXwRkwQW1XM6eZ2omj
SwYIrU2lIFAphk7r4jKIzXsqm5h6LKeHj27HwrhsAaZZ14+jYsgypKiBKUQJ
3V0cqrrjNgobjWhqFY2q+q3oHfr2XgWWwCcJRwVAZMjSI1EP97Gw5Ho0N+6e
t7tdebORzgGchsjIuGfMOe2e8PDdgHeMoN2/HBOYlROjinlLd2pmfEYS9cdn
J4YDGVUyJTeqpmcfP7yyP3js6AOGJx7JPvT66689f/qNS59+/9XX57+7+OPP
lPm/67N/BVL//Pzs4rnvC+Ls3HeXv/vyb++8evaN119e/O3LJ1/+7clIfHHJ
u2YOF0pedDplcABu7QwwqvJOpH2ecCpV0FtJv9UayQVCszOxmfFsKO3PJFYX
sqFIbn5+es4/MjioVmvjEa/Dm0gEYrnpuFVrSwQ8xJZdLWRUX3fptY1tEByk
aBtEYPOZ6BhYCwHbBK21jCyGLIFuv8A4Na7gmbHIHiC7N2QFkjnfsBCYX0hO
K+L21Egq7PfHxoxmKa9HJqLhKFS1VcnupLZR+VgMBs1p6yZSuHgsh0IqgIRG
4zDIBAqLScaRSIwOWCOJRcEToNdfW1xxG47E6GrbXlxf+OzS8rLaIkplMRTV
gOH24OoqtpS1cEf1g2ZvMDRuiUVjuk6BSAfEHTM+n7qrbdceNJlEaGwRkvqJ
6mE0rBwKhyOx/UqasJnbxiCxWeROLrO9qr5mczEYgwe3kgjY1jaCHCmhqJSM
HmYnWqmmNFTZTUNDVKaqHsHGtqkk2E42TKliMwYceGBmpLR5RKvq6h0epOMp
A1KBWWbTDlDFenUbWT0CjHeBlTRG1GHPjOelqrhVOW21ZTIOJdU9GU1Ju1em
Zie1QSB8XyyZXk1mgoB2xpP0AnPDaa8xMzvqztjXZh6bW1w+eWzfA5FnX3/t
6Xfe++jtt05++vWZ8+cvXf0pWqiguS79d070v2PW69c6iC5cuPDlha/ee/mT
v77/9fvPnXjx7QdfefS5xftW98YeTCzN7k07XRZvdDSkXTSYA/FkJBSNhTzp
+cTYsCE6s5j0TiWDyUg+MRmfm1ybTnod44npfGZiIqSXqEftVoPe4vHYbcn5
uZTPH7NIW0uwENLdRG7DNlQLlIap2353a2DSjESi8W1QaEsFyxAcjBoVAW7E
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
sSmvWA7Mxp5w2BYPjZqXIs57703PWiKR1YWl+bVnfv/o8SOvPHnyD699eOqj
06c//Mfnn3/8zfeXfi5D/7eH9b8Voys/R1X9WOhpF86dL4j8CxdeeenLM1+f
+/DAEwdee/b952YfWjiWfDYzM5v2z0cDYwlzwli4y3Vap95ochp18jGfPZMO
hFyxuDsQsEYj8UDYYpZo9RnjQP9IyIwlafotYyqnaAjwDPciUWib2CmH4Tgt
HAYWhiDTifCKorL6hlaiiFK0hSVEb+Rxemq7quXc3deVtzaUYkiA1dlt5CQT
St5Aenw5Yyn88ByKMLp30dqjY1PwolIoEiNiSNroTfzOcYNIbGTDUR1IKGLT
3U1ImoxBo+MQTRgyg07YU1paXla1p6q6YuMG0K+LcUWgu2qKtlTUYG6qv1uh
dZstGIZcFzNqjDazKxhPhpMWucyss46YDOpQLD1xIDav8MaTq0v7FzKR1OLa
0nT+8NEHTvzuxLGjK0eORU8+tPzQzHr0437RqiehEXew0HXgVnR9SQ0EVl1Z
X1d2zZ4m7O6KPo1zVCpXqoR6Y4bH5xFZuxVGJF1ClTG1ANOoZDLVTTlp71za
OdnlBXgahSA5EAjI4ymmkj5mk3WFdQbGsIxI7wuYVXwNU17eLzMYW1QMUiZp
mBtNTfVapSSpL7Vq13hWV45wYKJ0IhWTa90dorgjYe/zHjo6c9/iTBYY2qt1
TD6RHUlFXp5PeaPRmMedXjl+/1QkNffcK088//bfT713+vTH77770RffrE94
XLj88+OxXwTRvwwdfsr4KIDowqVLl05//OBjZ86dfu+1k3Mvrj716JGFo7+b
OjLt9a9kbBG9VuVPztvNbmB0LDTmiukNJq0l7Zr3J31Oq9k+Ohu4d99UNOsJ
qHXDbu/MtHkkEAV8oyIiRRdkjxnsaG4DOqKK0jAoQlUDpqOllcxiMvGYNtSu
ql0CDpdedWttSw/NAOPC2dQuVGtTVeWeW7iGnoCg3xAz04SRQHLaJ+sSAYAt
FF7SDJKU4AFyJQqF1nSqEWRwF8sVUVpiQD+fR2puaaplUgRGFpMEu+e2iqa2
jqLbN1ZCa6qRO2qrt920sQaFKbq+AlxaBGmk4dkDwanpnEfC7B2xuBzJ3EIq
YdEu7k+rFSKpzJyJBU3xuWNL2bBv9cF8fN/B5YmZtXsPvPLo4w89Mru4vPzA
3OLiQuREYvH4woIrP5lezgjTXbtkDcWbwOi60qLWdkx9DQS84xpKOw62jcVA
85CsHRj4CJzZw9GZ7UaRmsPmM7v4OATSHTYQ3aSEpGmQtoONpwcATcASJ0ed
BKWGFIsa1RxGwmk1DHJJRltSORcK9ri9yooKQ9A2JPexuW46y5uwqrpmI54x
Kdnl7uqemoqwZApNwD27OMuVZsLRxYzOb5mfWEmE7zsypQMOPLgGLALZZxaX
HPm8xxrKJpdPHPvzy8/+5Y2/fvbR56dOffb56W9/uFjA0IVL65kd/60QXfnJ
T/8n48+rBRBdXB/J/vufPvn866t/e+rY9B9XHn7mWO6V3BP3J2L3+5Ljfp1/
POEJDjmnXEbAbXJNiIdHRx3zthld3OMNO8KGWcOsr9CbnUHFkMon0k3ksktL
e5PTBolRah50BJi0Nh4xrEq3F+7APTiehM/opBI7sYi2Vii0ZRSyg4KqR2PE
zAhhoA2L2bXxltvvQhCrKtFYi7lTqpofMAfCQAKYN0k0emc8nXH1irDyXiaF
0wIZwGqbIdV0imCQqrMqucy22jKwGMtF4ZUkOqrmlptrUU2wipJqJPhG0I1F
5eVbrr2hHgvevK21FQwlViBVXQ5P1DZrkotkWlMsFjHHo/MBizWWMbqt8aRn
0r6QfSiRcO8P75+fX5ie259PTB9Zyy3cd+zhR559+uH7DuSeXlx8+MDCE7OP
H56dGx09Glg2imoIA7sLYnBbh5rD6UTsLoAI2wkqrgf3orskNLvahxGQsUG7
txc1LBpODQn6qW6jbqRXs384bbfH0warE4g3GeiVznhB7iVmZqxSnaUNyMZH
ewR6wOEfQfWO6rVhLYXe5feo5USzL67tTToYUhtYHk6z6aXhabfHr5ozTrIB
d3PhNrbNaFyxdHQgNaNN3av2TydGnWsHY/lEypU8+tj8ZPaJe3Mvru6bBP4/
vr47rAl7bTvY9rSnttqeDhegMmSoQAiQwUjYCSuLvbJIwgpkJ0A2SSCEhK3s
obKXCsgWZToAcSJDtIqr2jrqqvPDnvb93u99e75cXBf/h5vnue/fcz/3o6or
6x6YWZ0eXFi5ufrr2/cvnn948W9WvSa8/j4T5I+p2Yc1afbRG/vm1bPfnj17
/vz++V9ePH66ONMxeuHUveH6+ubWhu79NXmaYmUda1/OGovP5fF4LHFKViaX
zlLIOVminEK1UhTHZxdn5elrBJXKEkY8miLm5OLEPGFlibokq4TkLw/gELTh
Hg7gIJWYBtkTkkjzgG7FBZERvuidbkAI4OM9O7dvwMAgdzOOn1WAvd0WU+PN
Bl4WvoCNn/7gRhPQUISsIjE3S5msEFTW0hMrq8q4kZFhITho8D+93RyQ9uiw
GAiZQEeEsuNIUAxgh2sYDE6iorF0OMjN3QLoaPypAeBHEMLZDBqEARnZOeza
bg7xcbP3j0tNSs5NLWfmqfXlSQlZwrV2LS4XVGuKyxVrfDqvoLm9o6wqs7i8
o7VdWFBY21h8sL4zr7D/aPtg7kB380hDx8jh8Z6CxqPaw801h5pa2ysaagp0
KKw7aJdrAMph2w/GEPO9KDTIbLfpJ3tRWw0+A6XjDMjeZJaZhzUtAJ1OVkBZ
KHelj394FBDpH8ugRiqJfB0RnZJBF+dy0rPo0dpgshzKyqVKsJQUN3YpNR8a
xQhf+y9isNjKVDEOx8RjgqVeYQqBkLtfpyAk0oHZxaV5QlSJrpiHyslW8XhZ
6W7JIpXEk5UVyyht2l9eyC9vYolLihYq+Y2FB/oSVA2EQ+c7hvkna4c7VBVt
R08OzV+9c+P+769/+7D626u12vLi9f8FzP8G0UdO9OepqjdvP74SvXz57JcX
T26/vtd7+vx8Z+PERE/JbFfD0Zrymo6mwpr0PJWMFy3XaIXxIpFYlsEV56h4
2TVqwX69oFjGktCZsqZSrVDPTaMmCuJKYvL9aUiHXHFhXhFK4ytnpaDRfg62
pOz8BN+g8CA41JcmTIwJxfqi3dy+WysTTu4/wBwwvh5M+FZ7MM7bwNX5240A
p+1eLlAXd98AbCCWps7NVBZIGMkZEom+Qspjp2AQQUFe//BFgv3cQ1BhsCh8
tA+NRolAIIFu0VE+SCI9MoyIcPZ23+vqbmhiunuX5a5dO/612+TLTc6uQAvj
7bY+YSwJS5PHTt2vT0vM14nIBApfqFVW5nY0dxcUFe3r7O5vONDS3tvWsC+v
ODuroq71QFNbReG+qtr69q4Lox1t013DzS3NR+rKu3ubOgZqaut1jWz9flzI
dnDglxZubiA7mLe9oTHIwcjQxt/Veedm/wjfZNw2P6+IRFgEikVLkMUx+VxB
BjclLIomyMtkqOOcCsnxWZk5mREZNKd4vYSfkBlCKOfFhrnopEUJkVFSIoPE
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
W5SnVsvwaHlHY36QJl8p0KurDnQVj1XnFibLNJKSSnLRieT8Q7oqZlUDq7e9
6ujt8aU6/U/Vl5eG68aPrpyfvXr/0cuBiyvTPz9ZvvzLmz8s1v+24/+nh6J/
j9DerhWhN29fP39y/8nr5y9+XR6bu/3geL+8oqH8ZGVtXdGRUs1+fVaRJk0q
ysjg8zPkOZx4QVKqkCeh71MV5O3nFzMZHFFeUZEuOFWSwidmSfkJHLZOGMtH
sYUoEgJJCQHHBGF8KCFBNvZWeByd8pkNNBKCNLNzWAfQ4VC2dgHebk4WW8wd
bDZvsnPxDPKDA02s9xpus91uY7UOEOmaxBWGqjDxvvTdPqF+JLmQx8aGJgXZ
e+GDMtgRmHgGwMoI4u9kYWXkCYJZIECfgMKSObFecIgJzMYaHk6MxkJMDYHm
n39iAQB8AbKzBXraYtnqnO787vqTfT9dmh09snyk7+iJzp6+plPN/dcur05O
HT88OTTaNVBX3X7wYEt1R8WRkSOjIyf7u2fmVlq7uxoGemavX5q72n10rnfo
SOPiaNmJpqZqohHDA+aM9AZBsLsgMIs9MOtPnQzBPr6bzbw9sSB8ED2OwCHS
ZHSaOCaZTo1DyVh8CpHvKpKklmJSYhh6WUZ4vgqVwI+Teasy2SQM8qA0JS9z
f5aQqqnOzarMaqxklHKkOelsHkdL5WTKsouYwWQ3+yQGLNmMwiGQkuLlXPrH
TMtIH7lcwkwX8zkcpahMnUCuRIh4RTRO/b6h8creNrWmp1pRcLylsEQyf7K2
umO2ram17Mrplz3zy5eGe+/PX7/edP/iWoG9P7ty4e7TF+/e/zXC/x8g+sse
8ieGPlob3777/bdHL1+9e/zs3k+zdy4ttwyOH12qnNq/v/XgcFtF5ZoI0ypk
YolMIpapdbxUZWqGWl/CzcksVBXnVGikmTypQCqtzY4IIEZHOxLkMkGymlGI
TJNGMvgcKtc1IdYbT8CFIdCB7LgkEigAH+HqZLzDfufGEI5j4HpniK1bcNBm
gIeF6R4ghugL273HDQG0Q9ht/xwAIATjCCHpZEUkh0mOJ6JDmenClKSkaBdH
JzO4HyEd+4V3LApoD1oP2PTNjs3wL2EwWBJHJIz29Eajd0PhYEtLBB5s+vX3
RoaGVtu++9z+u+3fezrTkrTFhcf7RvrqBjs62vs7T843DE8u1k9cqT3S3tJT
NXFyZPr0qd7O3ubWktKmhunjLV0DSwOD45M9R66eujJ1dml49GTDhSszw4Nz
5y+eGu3s7dId47qj9ro6OyMQYHvQVjMQCOpib7gVYGYK/dKVBHYNivFi7gFH
WdqH7kXpuVlxaWUpKq84rH+cNTUrRO3BEyQF0QgCYZafsDAkvULDyatNo+bE
4QqEvCQBlSDg2vN9I/IdyCI6S0CWIXEJ8lw8PiYe5YOihYmzU5L0LHiAViCQ
h1AkunwhR5palK+IIWWVcPylkgTB4czG4mKZ9mBWdnNJVe2J1r48aXoOr/e4
slPQf6slp3H4wkrl5Ln81bnZe2d/qq5dWLjV9fjizPPxG3efPH769sNf94X+
N4jevfuzRv07bm+NYb/9/eWbV+8fPv7p/u3Hd36amJ4v7znd3VBV23akq7NK
nynP1UmTUplsFpPDL0rPFarS0uVihrpalFenF3HSaQJ+QVm0gCFi8+UiCMMf
BUr35+OEKbhAXqxVFicgFA7z9QTv9g1ghEegbWBYf6wbys8jiuLAJSV4mcN8
bADfO/q4W+7YbE5moyHWjsiPVywhJjt/tMOnoUISKWmUtPikDEIIg5nASEhk
JMTifGGOtmiwhUOswDQIDHFYb2BqBvjE91MkMoJFCnS1d/BGB9lCXYDbNtl6
wey+A2yxt/rWzOp73x93rEf4EVraT2SNFI91dU1MTk9c7RuenJysP3n05OTs
0szSwtL0+XPdXcOnTpwYv3Li1OXB2faRgfpjpyZ6Rk+eHZnsb1lavDxzone6
+/CFjomD3TN9Hae6W2sI2JgfHCFgR5gbcNP2zdYucAc7EATi8anpP4BGCRHh
Xn6CNB1bqdUnRVJgnEiUJFRAkh/M1ilpHHpGjYRDiNRR+Ti+OlsZhRYJkqRS
TlGuQlFBShXrpPxcBTctUazn+muimNmhOrwrliCVagUMNzaP++XOhCD2mtBR
a31C1qqYnISNVqai+VxtblGNKD2hsrSsulSnU8kqKit1Mk0+O6tbmdhXklOx
v7Zr7kxNV9Xkg9W82aX8zsn+NxeaRoafPD46/OzXzte/nXtx+96Nh788ff+f
QPRvffaHkf/fI9jXL1+9fvvu3ZqY+/nX5ce/rzzt6+vqre+bz+4+WtW1v+ZA
QWGBRq8kcwTC9DTBGnrCUli5XJ6Kq9Xn1+ZnqLKTkih5GjlRr8VG+BGI4VKJ
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
tEPkN2I5wGazx7dGzkbkqAx/f9eQ9aR0oStZ6RKTydqXEK0v2odBCtEEVRRW
u1Z2dCKtjFOja2pLPlobUleQVzTQ1anUy7q0LVMzs0tdp45X7h8dKpjrvz1S
dvL6pXsXmq8OVT5e7F6+em5s8ecP46devX33+8OfV9dA9EdD+/u5x7s/Hoje
vP1jkfrZk1+fPH38673lubt3Vn+daewbH67v1+XW8ssbcnWFGn2Rco2e5deX
Vu+ryMyQyZXKjPwCRZFQUVwl4rOjqQlSKVHEo8ZmsgIVMemuYk26b2yIcl94
sZzugCHQLSwAu+xgVnCQXTAEQqMgUhUunzo6+DlaOJi5UAIdzH/81pdJ9DEH
ALbZr4ftANlvsbcx+MTF1w1ivnGblxMKjnAFrMNHRIbhfEwBoXRmIs43isEP
RSQLFflwqJUBAPD5Pz4BfPbjNsPt33+OdNz0CQBg7uW402I7wMg3wHrLj1Zg
kK29MWgryC2SW1RzdKD/8k+3r12/+Wj+3r3pmcbzJ6au9XadeDgzN3Pp8cnV
e+fOLf566fzKz4uDU8tXfpqeu3ZkYa7tfs/Fx6O3248tX792p+vS6uk7M+O3
pi5MNDZq8HhPU2Nri29dEc4227bZeOCDvXf+8/PPAI5OlhgzDM8/xBmbmiHl
ar0LdBoVNd2fleUKk3LziyV0fIALGeFPCEshYGVkmBvPIzk5WRfjnx9Mi4im
+9n6h0ITOWI2D7shlhEuD9iVsXsvZEeYeWwkMWAXkkxhKnniYC4Ols5mQZKk
1EhdnsorUCRR7xdKVZr9ShpFpevMjsopqqjXNpZI2vMaddL6SnZpy+T5gX29
1fVzRTONOQf1PbfLJq81D13o6rtx4cJ029JCz/3TP52c/P3J45fv3v98ffXD
h4+y6z9snv0l3dak/ctXv38E0b3HL39//vDa3MPffr/a0Dxxamy0qbalvq5W
L8otVcr12lyRRl2dX7FfLhSJUpOFYrqIU1+Ymy/O21eSI+bSI+KotEQWX8DE
mBGdBckCCUuro26mw2QupL3OG61R8G12xlAHYIwXLYoYKuIbYUhWmw2hQbvt
bDGxfigcJRb4veEPgM3ua1rZmbITYGALwJKcQbs3f7kRYGv8vbGBMcbbPzbC
1zfSwdTQLVkcaxHFDIkMDVHwAuA7131hYfGNAcAAsNFwIwC4BRjoYwAwAqyz
gRkZgQwdjD752mzTOoBnpKVPcHpmW9Wagj11ZqTr0smZgft9czfO3T577eZP
D7uvLP3aNvlz41Ln3Yne0/PX2+/+9vje5MWHveN3FqfPv7h+Z+XprV9uL0ye
mL56Y/by8vjUmaW7kwe74qLgu9YbmIDszIB2dramRkaGhmZmm42cUGibz0yL
k32wriRMBNBXxaBkp9mh9wn0MlHBvgq9TzolOdIL7l/OiJazs2VBrBC0PT84
kOEt9gmIME7BWmOTFMkifvxmI0SKNhWVyPCjRwbT4DgaNN4eJ0QCXdNQGTxc
MIcAReOD+IIKLiWJzRWw6HIcuZIatKaU84okVQHE2v1VTYz4Fj6tSclp6pbX
ZanKJZ0z801txUU5KcW3xxfPtN4cmPiwdPdmZ9fDqzUrv9xd7J4/NPD65bPr
z357/+svr178yZv/dor/l0r78NG99vHc2fMXT1+++/3Opat3rl27Njg8OHtm
oFDX3JTfztfoNWKBeO2nor6mqjhbnS3j89MIOWnlZfq6jNy6Am4OU+LPjpek
BYs5iGC/YA0lNdg7gpKlj/GR0Moi+XyiazgwAAyCWG3FOTjtjaFBwoBEoCfA
0dTBw9rUER7O8vkXhoGLAppFGfzDYpvFlzv3gECOVkbAnSGmALuvv9+2bcfW
DQYGANtoTKyxhZ3rZ4D1dnBvfwwvBQNFIGPUQpiBscUa8QFsAWBtd2wCenh6
OOzYst3ScN3ubZBIN6Af3h2JcXf7wcTXNw6eqGrtHxtcnppeml28unRv6dLD
Kxevds9131p+tDh79uytn1YfLt68/9NaR59fHBt8NL74+MH9xWcDYwunni5f
WD2y/PDIXNfJO6Ntd7sG59qnZo/nKUFG5pa7XMJDvSHbTREuxubeIDOos7WD
nw+eF+sJUUXh4UCB3L9Y5ukqzKFS/QWJOKfMRHpRGS5KJsrLoGNEyX6hfGOM
wA9JFcIyGTwCI5QYFZhvRIIh8e4mYdgiC0jEJyHRZngkzNfSbeNW+h5g2Lav
NnomcyLC41PAwRStNZlK4WhFkdjUEm4EAa7JFeWlYYWluoJyDU+kbuZUD9ZX
6jsrsnIq1cX6hsaWroaTA5Pth5X6Sw3afUd7mxcH9zX+duPquV+HLy2Xd84/
vL/6+NqH6fuPPzz78Oy3x+//AND/1Pjv/9vnr8b2cVn297cfXt9fXHmwunSm
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
sWGOeJi5jrY91Qa7trxWoa9jIDWyOVzEp6VHJGHhxaUcGO9LahY2wTc2PiIG
Bgctew8QRpXJs0ugH4SCfPAQWjL1Q7AnxiN0KQ71WTKhEJ+YRCRSrUwcIBVH
zMI5J3MlFG8n2EcAJ8BHofAv6VB/SMBKSBjHxwNDIEQwolYGQ8BBKAYJG+Xq
tAxbXAj3Xxnk6g4OcXN293B1Wejr4RsSAQ72W/ZJuEuca4SvR2J0DmXNP2/d
7u3q6xvonh3om3062Pfm/p2ensELfc+Hjt6+8LTvTffPk09HRl/29/X1Dtx+
fu/u066e7pOdty+PPPml5/Tj3hfPu2+dvX7zxyPnvyGi4jNYFLDTp0A4Itb/
rwBnIBz4xafBmEUh/1gKCPNwVyrE0bErSdrYsipuOYm3PjfbvEqqN+PtGyoK
GuUpVXkio8JSzVfqDVhOUZyQg7TlK6j8AhmDl04jwbIlGYIYdLGHgSLOC8qL
AmJYbDycTM8Oco3zxATh0CgUj4rKyZTTqDRJJEyiNQrlLTKmSKYvhlU2OBxM
vqbOvKHFVMpxSFbtVmgNdpPoW3vHmQOXDty68l1jZ0fHvXXf3zh0Yf3qpvu3
vln109DRdRev3OoeaLly4Xrv6xPrT/c/vdxz6PmVR7MT/08geufXpqcHep72
9L58dHdm4NGJ47/eu9nRvmdv04/Vq3aYN7XW7d3X9k252LZ+zZoOfS3Ppi+t
rpDZy6ot5Hqp3WF11FdpxTZliTSeF5JvpWpwJJafgsTRNiNJdDI02APs94XP
Z76+caFshiQd4J6cGhse4V0gzUgGhMLyMLDQKGhIIsE7HgHPIkK8QEFLEoO9
FodJct1WoGFAVCTE5avo1OjwcJhrGjqKnbbSxyveswCW7+vsHrh0wWIYGR6Z
jAACk/mpwaFRwf4g0NdLYCjo8oXvOy34x1effgD46MPgALh7iKtvPIwm2/1r
951nN/q6nt2e7Orr7xuZmOp5c/b17Js3Z/qGp+cC7XsvXr++PvDocs/DO6PT
A31Pul/3TrzpnOgffvTrq95z5y+8uD04vGd/z659++pURbjAr3wSiEv8Av2D
4+LiwkIDli9e6u0PiVnm/XloWDwyOy9XU8DRsSuq6+tUaHMxq6ZNYaiicivK
VLXmgpZmYbuOq0sXBGfJ1O1aLZQnTiMWCjmpRUaKviK1mJbFFZEpH9qp6ZjI
4hJSFq8kMxgFJ+K5wZ8T3CmpstK5+DwtKTHHCKZEIZn8MlSROLzITlJUKjaz
sSKddr00b+7vWmTbFQ11qiaurGrPpvZ/bj3Rb7B9/21r9+Etl9ZtffLzvh+P
n9p7q+vojvOn7754enPHg4MnJ7euP33hzc0n98527rp/7/X/A4hmfm/Yn4uT
Jvq7n73o7et/8+DSsVOX9u/ZtOfHfYda9tVUHrS3bSv9xmIoKZarpKVmm9HM
LMPICmRGsbVZ1MTUNZZYyukVXH0pp4BYVlAg9ZdKs9QsESRHAFfAcEUwyOKk
yK/j3EJSucUSKu4r9IcfLQL4EWMoBLSTuxtsOacQ7wLkZIWn4yP/5g6LT47G
5AD/4u8Z7puT7ukMCgch2Piw4GWLU0Kw3phwAHbZSnhMsBPawzsVEhjg+pUn
FAxHYLMJQCckGJSERcbCoC4eadnwAKC3j18wyN9jmasHMDTMy9cFS0KxJNv+
ee36qxd9LwdeDL7uu9P7/GHXw9Fr/fefj3eN9PTdmXrc2TU7+Was+8XswMvO
7u57d1503RzqHe6+N3j37rNbfQ8OXDty4MW5I7cuHF1Tkc+g4sAgIq+E6ANY
EpMQBQd6e/h7O/8DBIHEePknsUhssni1mCpkCvCI4jKlTW+z6Uq15moqzbFe
3N4y5+mtgkyjvLaM05hOsqtqucXmgkKcll6scCMwknmEWJ6tCEnNAK/ExSZm
pa7wBFGpLHBaTAwBnYpOKWRrJDBSJBWeLYSSsFpespjIq+BrlEUOfWF7dXVD
i9xUI1olKFtjXmWvKaiu1cssdsG+w+bt1y7d3nP+187z916dP35sw9ajezo7
Djy4t+2XsWtbrnaduTe2+edbV0c6b63bdf/ok5PPe8dnpv5vIHr3zXdpounZ
6ZG+1/2jk7P9NztvPNm0raNj884fHdsrqy07t26y2K1N9RXKUlNt4wbTJp6V
VyqRCxhqTV376rrVNY1Wta3ewM5m6vFSkTxDJEWkZ/nIi1ghDXQKAhLyMQz0
FRqcKxEyIOmhrl9Gey3HxS5JTEn1DvgsKdQdlhgN+BST5BkYFhqdmRCVCg6A
fgUk5SAAqcTImFToSgQVExYODMuIZCAYEEABjA74OISRGZYYF7hoiU9wUIgT
MBcPDw6BuLiHo1IT4bBoNz9Egm8w+uOv/YGRkPi4sPAVoR4B3v6YPGKp7eC5
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
UYlURTEMwYOQYwvjoZhErpQvJDFQK5M+S3XGEeLoGdQqWUVBRSrTkMJeu9ph
5n23mmHatdEqXl3cLFCvNjE5HfYtHdb7Nzd/u7dv85XBm4/u1205dWDVnsP6
00/vnXxx+Gbnrp9eP3twv+nB3VM3Djy6fPzN6567s2OvZmbH/2Shw7t9M28z
jHPvx+f3pY2PjY1PT4309g+9vP/qcm/3zxevH9j+ffMujVm99aJ8a9MeZVVx
maBUbqmVVQl/qq028hvlzFKEQRVbWSXQl5Q12ur5xna0MMM5lpwVlYMliOhS
rJLD88rVJdE+9kjjVSlZ7ChQCCIxNJyenQKLiiPl4gQEYjo1W5eBoMGAGQQq
t0jI4+u5Pp8viQ4KSKZXGMBZed643CWBYYv99EucrKleXGdICCAtyPv9oMyC
fL5rQiYm5CsXL2e3pQsAy6PASRD/r13DEhI93d3cQiL8PsqCZIHDkZ7wIGcA
AEpCuoTg7O1Hb1x90jU0F/0NDI1Mvp7u751jX33Pb1+61jU43tc99Lhv9sX0
8NTM+OhY/7PZ+Vm8/v6RidHpkfNdz5/2XTzaf/7QlXPHdu2wyYQpKTEfesEh
WCIA5JWc8JlzGooc7bpk6cJPnH0Ry6JAxYgvI7NMdQZN3ZoqgYOfzCmhrG5j
bVyNccwLE1hItDbeKq3VWN6Kd4gceI6CUqesl+r1dXJGGK1CCLOIczPq6Kr8
IA2NBFycl55CCinIKklZkJ0EK4BSeYU0tZ4LjglIiGdRaDIlRsKPZJhjtQa9
TaeUyWyl9PJme7lEqTeqOjSyKraBW2Fv/vHk+jP7Xj1+cvLZ7vMPfjh++Nja
47/uu3326sv1B69dPnh8z8srO3+61XXs7p2e7Tf7nz2cHZx4uwX9T5QXfxuA
/W0i7a0rmxibV86bnBgZ7n985emju3s7ftq29p+nOvbadrXWf9e4peInjapN
J9fLy6u1jY72tRtNVp5FViuhC2s2qyX6mqpys0ppqSTni/MycIWsPHpJLhqX
QI4l4piQRdHAvDyCRM2LSqKTfKF8itQTRs7MZ5AisFiPgCWfIVm5JCySCo7D
RkSAPT2QFEKOUBgDeC9dhCrAQtJA0fCUwCWZeEQun4jzppJgrp4piSBf5wh2
MsgzJAUZ8oWTs5/zYheXZV987ezq5+/+OeAzeFKoL5ToszAyICg1JA3gh05P
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
9lqWk0dKCHMDebwftgS4FOrycXJampdnUvBSbwIxGaIuFtrXyfPKUrBN8tzq
OoZhnUbevKW5pa1SpqnNFFiqW+vsjCxWBktqay5T11maDIUmva3ZbNWoNHZr
GE9JUJRq0OjiEp6Zm8GR+sEpeZpag0wnLaFB/WPAwW5RCbDYJSlfp0GKEOSs
OAkTxygh0Zk8qqHIUGVpclh0FCOFIpMJpEXi0irt5s2N2rVr6s6sPbJm48+b
jp3atPm7b9vOnL1Yc6V3w5Zn3z65+uvjgfHJvjeDs33d84Z4dH7h0J+EQjN/
/OytJ5t6q2o+PTs9NtA/Njs+OjXx+uXg8HDng1vf7G5T/7Jx/U/7N+w5NPfs
927YKJbZyxnUUm2bTVSrZVi26G0HmqR8XrZJZ9+sk2spJj1LYyhWq7NstaVS
80owD+/CMgeRCBpMubqUbpaUldZI5TnNNgXBh2JX2mxGowOMliRASbAkUSVp
7gZK8sSRKSVs3dyxicLw8jJi/hzcSLmllHUlJAwhdwkgxhmPc80uJLG4JCwg
ikAhhQYA3V1AsA+d/uITGYUkLgTE/TU2NgoESyFmkAoJUT4+xND3k/FxSToF
GQ5jEjOFVOn2PVfmYTP7O4jmd57O511nfwshp/9dLJp5C6I5/IxO9ne/6L53
edfmKjIim0uNzIRH+eQluH7s+UVMFAjnzELggQuWeAMBvng2EBzl4QfEZ2LJ
NjK/gU7Ur1rraKwU6qopmAo6f1V5qqq9bf2mdVK0mFttljoa7EYK3iTkCXEV
arhRWmOTGWnMMhkJT4uNd5Ty8rHoAhaViyhSS2TFMnuBRBy8PPBzRLJHACwy
wpuIUGHwxJxUMq+ExRfwuBJ2SRnNKJNKFVIOz8yTyFUGoVRua2hq2X7r7vWT
Fy9fOrT94K8HL5zcfeHqz8eetxztu9t84dq5vYMPzz4bedjVNTs+B6I5oj47
MgeLP613/A+zNP0uDfJWWm929PWroemZ4amJnv6ZoeEj+29Ub197+kTT/n1V
1fd/OGwyrt7QYtBnaNZ3rCnQGXTSlEqVvEm5wbTTut5Yb8DaYZgaVSkBaeah
TemgjACrZ7GACg7woyQh2XBODK+siG2qq8jPbZVHlRQlOzQlcnsOdX1pOYso
a6tVKfSofGl5rEUCqWFyyZ4F2ekwabkmW50bJIr3JIqkCIR4nd1ezTTV4wWh
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
hUs1WzfU/bDzyoa9J++fvXD+9r72XX3f7r67a+CX6d6h2b6+1w9eD/XP16Pf
Skv/b0qL/weGpt9x/PlGtInx8bF5maHRyYmBnqcP7915/PO+i3tsN3fvMTTu
23R4k8ghNW9vr8jep6ivYZavU5kN66ztNXWFbWxxc3vHOlU1L1fJUbVVrYO1
qvIENpmMAklEFCPdEoEBIWyJOqxZiGXPPbsqUYuSpq/ToA0E8lZ9ooNdVhsq
V+GKrXYTx7NKJne45CoUXD+Sfc4Ip2lL0xByYTmZJm9mpII91YYcXB6BQs23
FMEzOeA4ZDQGmRHvstLF2//9JWi4kz8gYBnYKzY+0B8S5JQa7hONwpJoiFQK
P35JXkEQCwNnYVZkUYjYBTBWXnvH3eGxqbGRf1262XdFov9yaPMJgOGenq1t
G3EBeUgKgYTFsjFEOAoVhnBO8QFEAIDEpLx0X4hrOCIBERPi5obFugUkUUMY
CdnSpPzK6gJpgwxlVVS11antHU3N1vJqcmVtKU5KIYroBCUtTUPC26RFAoHG
LLOwUsXKmiorg2uymdMLE6XcPBQ4Np2ZJ7IQlDgmIeLjCICr9wcEWHRqMORL
14AsSnZaSR6TryooURGSRboSirhIqhfpxY0N5ZVCKVde28xUyqxr2/aYf/yp
/fiFvSdsVy/sWb++45e9F384XHfoTNudR2MbH0yM3pueHX/YPTo+O/Eu6TMz
393xZxuH/xNE78LGycm3vmzuOk7NTvd1Pel5/d2J6gOP99pOKred2NfxbW31
Lyf2WNt0bWtNzcYabWtJXYWgvlSdV1HOUdcLS3TzSlw1LTYpK4OXpGUgdMVk
oiwsIE8Rh00GBS3xj6sUVkrkDhNH2lpfW0sh1dsKRTkwkSjcmEN0lGy1a1KF
4ixdfknEx6QcZT6lJScNg8ll4rFCVaF6SVhRpbI40dLCLcoPs1UAwkxFmjzP
JEcKRqooCIMVBmMwEbHBXj6egJDPPQELAM4+S5aBklNQqYm+ru7LAFFpBH4e
NIeTjMYTU0JdPwaFweiysODmb68MzPwfpuc3evEfIJoYG311//A3a20as4kd
HRWCjCwCJ7qC4mIhgEIyEBMBSoN4BC+BQrBhzqlRngvdnEOSQ7y49DX2arnM
gamVGgw1DZyKGo7UgM0w6dIl/x9r7/0X5bmtDw85O7vG9CJ2BQVswNAHhs4M
U4AZZgYGpvc+THue6ZXpfWjSEStGo8aSGDWJMcZoEjU7mphoiknsFStSlBdL
zsn5fE/Ze7/n/gOeH+7P9ax1XWtda92dNLyknh/t7lkbMzgDhk4t1eF2tvIr
jWqAXaXI53BdLtBSrPJ4aJyCqnpl5YvZUq1QpcBTUiBv/BUGTU7Mz144609U
yhTFToDJyVQdxaQlqmW8GpXPijfIvCQNx2Yx2k12s9Rvcavsez54/+Dn3xz4
fP+6A4f63vzp9KGdn5/c033082Of/Xz/pxWTY5fGz3334O7kyMjI3ccl6seh
6NEbiv8YIXrw+1GQR9X9B5O37g6f+er4T5fePjGwa/+Rz4Y+Xfl2X2iI2/WR
dcvQtpb3oyod3oiPse1mjNoQ4waDuqCXGuqldwXJLi5PwLZOpfNetlVJ5Cgl
jTOWZudVJuURtUrDYrlvoDPQ0efXkvtcVUafztEm1PeJeoFMO42c3V6tDkGE
YamQGuAYChaGtN6+RgI/gFC1ajwilSATT1moaEY1ypJCIiHLnsVyW9oQCHEj
ilJdBIPMzYLMmQ6BZU0vWlSUmA5JKENkTYfEQV5LXpaRtTxpzlzIS7A/vzaV
5zKwkFcqIUXz53AqEe2Rzu2nb90de9Ifm3jw75T6v4pEo/dunzvRGxPUUAoT
aMW1JdIScOFieU1aLuoZdMKcjMJULHpO8axlKajUF1AvJkzHZS8pzOPjcgl8
IBfoNPZ5LShSD4XdZamMruSuihk7ulaHNmy02AwyodYkDZvc7YGgo17W6vRh
eDGvk9bHputBm1ItL0WzK/iZdclMpr5CizBm/7E8I2FRUcJCdHxG6lwEMrWI
3pSqwXA4EqJMExAzm4WqYoFVhA9zN3S0ao1mm83O8YM8AhC1vtk/9LZl/8mW
basOvDMUfXP9jl0/nl2799D6sz9dPnR98t7w7bHb3w+PPGob3nuc1h+VPMb/
293nv7+bB0+Ka0+GPUaf9s4esaOrF4d/fPvLS9+deqtjk/Nkm3V98M3duyLS
DW7/Hn9LNNwUAQHPEG9oZZs4BqoGnCRPM0YTkIs3RBiat8wOelFYr3CFwuoX
uVQb65W8rDmJhSKdJkRVB53SPr/AF2OyODIM2mtqCMaw+IhKA+qk4vagyCZG
NKKqZrCNtdLqOqWJTvfrQbyYX2U3wgtVYTTmEQ3PkKF5pqoKLoo+PQFXAkek
S5Jzoc9iEsqSIH9cgKmZBclFEAogcUhYHKR8dmUtcZYQQ0DD6OULm9OfWZo/
swQVxygtyIdwu3Hq3l+uj4xN3v+tEfT74uKjM/74CsceDQvdvHpx29513QQU
kcDLWI5dXgmFEJhZhMwcbMbi9JzSkmcLELN4HEzpqzNykxbmvBpXnrw8lSuT
MKVhuR7rNtQOhNi6lm5jd4erO6QTxkRCh9YW4ok7TYKoAQ0ScRo1ImaSmzQM
j6GZKbBR3K1eHtChWQH68BQRDZPJAKfEfS0yIQOeW5ixMC2j7Pn8aRlVS2GJ
KcWlPBFbZtfZqtWNTNUUa2igKA2ALxTcMjgo00t9NsBpsrWs2Ll2aPOXWw9/
+NWmgYNHPz9y9KRlYN/u27+c2vzZp9cvXvn7yav3Ho48XnX2aITsKTL+N/j8
For+3ZT1tH32qE/04P7Du9e/uzS8av/nO08d33F83xdrNu7Z0t9pfXffjgFX
LOgGTBK336mu12gpDkuvre3NXq0nxosE/HZboNUQwtotIjWmSiNWsHNcdDI0
NxlJrywpkbjcXq1cpekeGOyNmfoiHV22wQhHa6HrVOkKqmwVJoNMIBoxNI1X
1GhspsdhcytV2OIge5FFnUeuLHJLNInVdgaOBJOTMnML6OwcNNgkR+bkQaV5
AkZB0TOLUqA1eZC4zNx8yCtleBwyYwFTAoVPRaHquAWohGW1GXAyETqrgC6R
wYpKJZKaBsrGDRtP/XR/7PebCP8TjXzisL5/a+z+vbErP24McIWYwvIaPlVa
lIOtR7wSn5WckDsjHpuelrxkIbwEkvdiOhcHzViQj61MmbeoQSDGugNGty+I
JneJAH+MRtDS+BF8eYSJa2+idHvrtCAK7Al09+lsnkCvjdct67OzyRqyTGQV
4VQSLmCTTuV1Eqe8CJW3FKtVGPnsfMizizMLE+Fz4tJSxfPmvJZVmpxZXLXY
Jq9taJDTbSYdh1LnkPu99sYOjVFrazM4AZtVKJAY+oJrgtuOfPTthu5t/dED
64YO7ty751zroe1rrp47tefsuTvnro6OTU48kVgP/zkQ/ceNParHPnj429r9
8TtX7k/e/P78mV/fOvjlqm0r1r3/ibdr4w7DlgH79t0frt9FsXlAtWZFROnX
BEy9Fg/d5nIHBC6p2clUemo07DarKTzYHyuy2AH+XCaZL05+4a9iqSgnPxII
rggJa3USMropP08gqmcpjHJ2zFhqxFX42HWuToEzH8Eih3FYe4u4mVpsktX0
MzPAEM0dlkqnxRx4S7uZUuwXyzXkvKQlckCm4IuYSfnLoXEQCpYwHxI3HUHD
F+ETsrBVxYtfm56ybEFpanoaIfGFwucgiFLI84gXIfBsSMZz+ESSuaA8GO2I
fPzr46dwf5f7f+8CfdS2v3fv9uTk6K0D7+7u5PHU1CpEUoLgTzCS3l4rNKGK
aLBiGqRqXkpxI2lRxqy/LEhE88pzpkNeiM/IEwczaDQOrtEctce8LlQYlPWv
bF4RkHdtaHaHYyGHqSVqC9tg5WamUVij01gjGJPVZHIpgsEYCGoaCWY6wFCb
6gM4JL8RTQK5rLy0tOdnzZoJzXo5I6ssbmkCJb8KTZCgdSyGgqF3mFhEioSh
5rjIIorLuta+Mqiy2Zv1aqdMqLIMtm5vWTOkP/nR+yuC7du3ffNF/6frPjrx
7bH3vtp/4drDU3dvjU6OPk5Jj5n0vxqJnrRgHy9Km7rPiXs/Pfwx+uObF/9+
8JOVx458+naPp8MW2vh1vzMUeEfWE+5sM4eMPp6q1ejXdIcGV7/t1zDZOokv
7HV5mOFeQ71YruXZ+T4MwVCLm8MtzGJmYV6nWGTtRATBpBF5wwZer5Rssop0
hilKIPeEPWYJz90jCGl1NAUnWWw1crVN3IhbZ1HQ6xyeGXR2eUaoQobLU6CX
gcwcjEBQgmMLRTlL4mdkFcLIi1HpC3NmJb+a+1xcWu2CV4qXFy2CzKBSM4iI
agaioARRsAhRkodKT8im81kyQjKU7CJDS2YsYuTp1246f3ty/PcE8uHovZH/
CEYPx+7dGxkZHr9+ZpPLUgHguVi8AFbBLSdWwCuW4WZCXiciUIwXIS9gcX+B
zGDkZtdkzJj7GrR2UWF29XyMyMBHaXRmer0sE9zKaHUPBhSdsRV9fH0HjRqQ
1ZltJCHX7I20VLeaRRFSjUIByFSRoFgpgdKigajFCzcxGR0yM4VYUFXO0egV
1XPTk9KTXslBPAvNbUwonJ0OzymuEpUIBRw7R6ZXqSlaLYPJtmojYm+bWRne
utbmNpjEdsBoCK7b8fcDe3ftHdp+dtfm3at2uVftPTHwzq6er89/+da10W9O
35tihvfGxn4zUf3zIHo0MfSYYU/85puZuDAxeWlk5PSvX323feOZL4+/2dtm
bOsOOXe52tevC30SHLBoAZVfHW62gMyB9lbVCkNA0xPbENAGeCGDwaKl2SlK
BhXDrfVUEySNTGgd8rnXIMgMoZhlB2KujqAcr2AWeJ0qDRDq4+G9LjozqDQO
GJi89Cq3NmRnoZRkEpRvyWbUZ9aYUgothOIOBgHbZozAUqRFL0lBYqoEbFID
ckaDhFcNjYtHoTkF8Kz5M17428I/xL2WnzJrHizl2eS66nkUOBw6/5kcFKSQ
iJBxXilMTakhLk8uz38GmrEchpMypb2bBr48f3f0t1dPHlPDkVt3fpfSpm5l
fPTh5Mn9B1a7apqQNUuzqPlESGV26pwFdB5GPRVMk5MSq16F5CCzobNmzcVW
pC2ZXYiqQj2Tg6RkyAJeuyigoncbNDaJdR47uCzgLDAYiqNBvKlLbVa3t5M4
HqHU1dus7RFIrOZOJsrhljTJlBZ2Lo0WiDnUaH4d3qgs49fqaQJsNh07Z96S
JRh0HvyVooXoZWl5GKCOr+LjuTYmkd6gFrC4Yq7HYLfHAFvYKlIHvX6tu0nd
ZFS29GxaObRy+7XAhoNvd25+74dNuzd88Pb3v37w+dnJ4cnxi1ce3r0/Ofbw
/0ckmph4ulb2sfnqkcgfm3xw4+GBwa/CF0//evCLzo5uRtTm8L23fn3fmhXf
f7B2MLayy++QIWWBjnahiaUz7Wgf9EbYKr7WTfCxeG5ZVZclBGhcTZkalx0D
VWkrawtx6YRqTzdKqLSxyCJOpdWF4XOVllK8GWDKVY4mmx7X3Enk+lUDKk9V
kYySZA4QZVSvyCjoN6scZk6kSitIn0lsLeSZeABfU2+1mBjJlU1gswgw4FJf
LUPHzSyvQ6VN6bHXS2qLMAnzF2fPhUD+Ng0yZ1Z+UiV7Eb82Lr8OklU5D8df
kl5XQEhdgE/9MxxiDjs37D1//elmnac5bWx0/LdNKU8uafzu8NkdgX6rVIwn
SLhVqVNxR4bE5kwnLU0peW5WZfqyZbNwfFZxXC4+5dnZSWgWruHPiwtfnZXB
k5ezbHI0Q7HCpLZUY1s0tpX23ggO3GQNb2oLWayrAvl2o8LM4XXoqA0abW8E
C5hUZpapRePzicBOVqMuVQSaQ3JV7hxEsU5oBEERt7SyJKMYvrw6CfHiMhg5
K5OERMlIfJxEzpI3MsmgmIUEGkzGoNG8va2fw9ZbNV5Tk1rb9e7uwx99tueT
yJpv12xYt27Hmg++2fjV1q0nrnz4/sXzx06O3568ffvh+G/E+F8h1k8XOjxZ
cvXgcdF68ublyWMbvnz/+w0n9p05+s5b3S3O0IqOcNfxFv66FuO6ri6forXD
22zLtLduCQ04I8rwWyusGtAcdK3WeWLekF7lEuZRBQpaA8vSlAVdlrgYOiMR
xgY0nT7ArdTqwPCgs5lniCkbtGErtVI74AnKFRFXKBaw1atrqWBEwPIrTJpq
l68AzymXBDPBajjV3ADhVfHzkhS18dKG1zLqMURMZdkzUHaDoH4eAzolx2YW
MnIgMzL/NJ0BgfxhSdKs5IoF8FosUI1iN1JKIC8WQmYsmZlfXVOa+mLd65Ci
wtmYorwaXueGUzceV+l/44MPxsZ/q8A+dceOXP/h0IHeQG1+RTKmTiPHwtMW
zfkjDFGAqFUyU/ORpWXT/o24LDN/DjQTVsjFzF+whFtcWUOGpuKMZixTE3XQ
WHxaq1XutXA4ra2WqJNn0Yh6jWVCZ8Dm1iBpnTGNFuxy0nkGuiDotyHEugq3
ptbkAYFmPqDMJgoZcjKDptJyQYAlEzex8/JT44vmC/CsooS66mJBvULaLhU0
4fg0pqxRJNX2qvT8SNgVAd6NOtU2vdGqcIHNHVs3HTt8/Mvg3kObPv35487v
Vux754tvrh+/fPbC7Zunfhh/5PqZGHkwOvFYnT+aGf+9neofwtHDp5Ro6gKf
aPzx+yMPT54+veniifZja458v8nW09lj7+0ddL/X/f6Aqr2Lt3ad2SeSO3pj
HaqYwQN0r4z2M5ptUQ1Rr2UHeVX1FqIgpvWypVo6EeQtKlqKrK4oREmkQkGH
OD/sAA36cjQ45LXq/VZlDVlBqtHVVK8AcMaCMhMWrm7WLasMz4ZW1lIX0xvh
ogCyib+cZ4fBpdpAQoGNsLCulsGKCgQqDmNpspAro76cBitsgMyCJM+dFxef
mFiYPx0yLacMSWQWQyCzEuMaUnL4RMhCIqF6FuSvcyCzRJwcFKJiThUTUVGE
U0+pleOTd2/eHhl7JG0fzbqOj449voUnptlHlfybFw8HWmV1lUylnDm3goQU
kcCl2Gp0zvO8+Ukk4YxXGZhZ5OchcHhl1WvPl9XWk2DIhcXTE3Md3AIuw0WR
Gm0+GwFN7OdjbEGuuZIfRke1hIi5Z2NNV5AEqDleANGjaTHRCa5oH6siYrLZ
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
q4VyufQ2Fbw4m5WbVJJTu3DZDMh8+PPTCvOKlzz3WmEVozKuGMNTkxPnw4jx
8TlJeQwubDmGFgepIjNYCCjXxf9zFg1TDZlFAgfejO47f+fc3RsPHtw4f/X0
p+dOXjh5YNCrFVGEtKJl8Tj8XA4XiymoW5yZDU0vYQJMaPrChagpel1BQeT8
CQktKKicllT0xqJZsEW4+YnQWYL4pPRiE70bVwrSWh0WezubErFYN5uDsSG3
Vmki2jXIHicg5tltIZKcXecI6epZATW5p8lHcQrEHpZHHQSULqmZU+WSVbuC
1mqg1waQRRqTScMwCsR6OYsuZdbUyjgiLqhmKUA6uTybQ2PRJRrvFD1tCdOb
ezdv7QqFW9Xi0OZdn3z72c6du8/s2f/5ySvv/HT39LFvz12692Ds4cPh8afn
/wREvzXyJydHHoyM3R8eu3n58hfjZye+Gzpz/vsLR692fmDra7fFugNt2web
uh3g9tDKNYEogrHO0SeraeuWt25+09tpsIRZ/v5eHDdgaQv6qBRQ6l/EbZHz
eFRmbnnK69B6I18lEHItARcRH+q094UtRjJgR7BD6UxjZVqoM8BuDzkrFEq3
QxD0UywgDylb10lBhLUKv7suJqvshIWphVQ9S6tx88v4dC0tS0BLAJU0HGRZ
Vjw0k5iSkfIitGLW9CTI/NfYFvX85USVcNkzi+EkvggJrdYKKjMSxJkzMElJ
VGQxDJo3a0EWLlDxTCWsGloMcQ69e373T8OXbhy/fOGn4cvHv/q6JWzvk3gF
XA2Tkc3JS6yvnl5R9ScONiu7Elc4Lw0ld5MWIITBBAilKX4xklyVV1xFKSzN
yo8rhmGJ09NmyLkNjfmA0BziG0QgDzBNXRIVsDeQnTqeMKyxhfiRuqgBH3QG
ra0tbp/NCfr6LXy9xYts1YOWLJs40FhtrUeHrCvEPKesQ2WPEsyBcKnSYiar
9FaJQClWMnl1RJrNbgR0Xr2tmoyrQphQcpFVqtE5wu6Q1uLSaJSAxrd29Yqt
p7Z9d/rz859+O/zjrc+/u3zl6+/PXbl+Y+Th5MR/x4n+BXX2tHc2Ra1vT1w7
++2le6Onb16evPLw+58vXbj989Gxg18f2LC/861OSbc1+N6et797Z+CDd4aC
2qFo9+rQ6m573wqcx6ewb9LaIv6wYV1vd1ilkamdrc1AkA7qG+sBfHVefWZ+
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
TTyPzBnohRrXT2wI9jmaNMqN+3fs37nn7GTjrs6Dfev2bNgTbDy+c2Tq0jRE
96dL62e/vBH7tQvsF78MP756wL3X5deLm7cffvOt/0jjej8UXLemQ9dlPtB5
eMy8Z7Bt/9Fak3eU4Dcf7673ABVrKHZ/mcHhqqoRGtw+riG6FB5PiiMUFXxZ
lkGg5aEZDEhjzEWFBJpcZ7vNzqf4rdXcNAE/w9RkREsJnYEevdjj8zrC2Fy5
tQRmwEz/+wusPmKTbVaJu6TYqIL5NUv4igSwfDnMrIgkuegsJv7LP62Inxe5
MO2j5SvSYAzYqkWI5BhMQQwTF2WqzJwP15tomRxedBIuEa7mCbKRICpBHBXH
EGYsglX9YSE371/Q3Oj5VHgO80O8XswvqasgLEMuryBnU1izuXOTKaUReJfw
A3hhRGz20pJYzCoNLR9LIgG4ivxcIfHLhaVCJfpPC3PodMR/zUjKy1kalRDH
g+VhKhmJzEKNwQykCpzVvCK+RmYTOMiAhlbnZErlBqLXQLD7uXaXxgAWcnkA
XsKkCgElx1Iss8to+eIQwc5iQnJ+tUCic6ukHocPsDsperanrrXayAlg9YBG
wzbR9OZSg40sp5cqeGIkGc2mSX1tVbaW8WYouHat3azvce/ZeHiwdqh3s2+k
8XT7pk1rRpo2n7px/Ycbdx6/chp4/otV5a8N0d+9eV59Pnn56PrVK5fOnDt7
9nrj8d59nVs37PFu3nras9nZ2igZ3DXcanQale3mrTqrU6GuFa4H3GMGuZTh
dFHqdaVGBKcWpJPjcmZjFufMg9M5DkqF3BagwJT1ITFZjFVCHk+uRlfW4qcB
ZQppIxc0OE00vhSD1BbSzUE/V6+TOAE3sCraLquSBm0OrdgZ4JaDYpwLwcSS
xA5o1dwMOldQokiYuzIy89133/rrvJK/zZgRlVRYOuu/SqhsFR7UV5XhS1Zn
4/76MQW5cDGzZEYsZdG8yOW/X/npfAZXW7IELkXMg0XFpnz+pQyzOgJk4EsQ
sQujC5K50fFcvs9ITEOKipGQkGJWCARkcqGKqYn5ICE6Aj/r3fwSNA8FkGa8
y6JQP4iMLNVpi2aUUfmRs1jJmDyuqEpFEBaIZLhKLKxc6dCYaDzI7Ai4PVyJ
AS+tsRi4Em1xNl8qFlBYaRwRX0IVlIgx0jKgig4yVegCjdwuYQIaJc3sl/Gs
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
xAsAZUJkmVrGIJCWpgEkPns2nF5Uys9CsAtjUzP4QkJURuFHOXR1OUyViobl
hKEgsNyxuaa62y7udQQgYaXHHO6gKjrE2Rt8go56ic7mcdbuEFCH2hgd9fW+
Ef/A9pYBDV8nIOKxLJ6kpq+aUSWlUQVoBUMP2pxDXp2T2aBy+N0ttSFz10ht
d5OoFG9ByJgkyN4rD9a4XaGu0MH6LUeOnTo7+vWVr63dWwYGugLd3d/cuHj6
7OXbj19OPX3+Wnn44vX3b4XS1Jtl51OPnk49vPnDlStPD51v69vjud7jORcY
P94/eeEb+9CO5n2dQy31Pb01mgMTA3W2ffX169buFcmd1mZMLIuhkBO472dT
RSwsistwUdyVLLWyTocLCJi1EpjeQWKY8PaQSGFydRjtKpoZQDCoHKeLaK5v
qqu1QTqd0e+w2OUObz5bnY3A50QV68Rw5lyy0SbRi0veTkfN4auQxMxPZnzx
zntx782aQyZGK2xYnpRAJ6DUmI8zCf++SoisovG11P9EG1bHwNgSIYfy/rxy
zOLFWURaMjyC1SgAFDZJJSZWniumCuWwyDo6kJEGlMQ4spaKUJF8G6BOEWa+
yyJ+wiwtzS4uBah4eb5ezJXHJmBd8UVA0dKC8goYGS5IjF01h7iMJqg0yxvs
RnUc4LJ75aU8k9SlLCmoYWsApXZbJamtUbRpLDgcCgZDG9U5PX5j32Brh6Fe
LGzaZ4cabU0j7VIUuhTPArUWB1TjkitpdpNZ0MZeEyrt71V1drFt6mAnEBjt
90tBCU+HcrqsaqoTaDMb9G3j/Xua29bXT46u6erfsH5DXWD7ZF3L+rPjP3xz
6uKtZy+eTCewV1KxZw+fvL5o/G0oenN3/UqyPx2J7t47eGz/8f3nvrkwcWTi
5I7z266ddpzYcv7A8Ulx04FD43v2To54Ltjk4bq23bxQncMg1mhoogwig0xl
4XJyKHQyk99iD4d9DTRGF17qkjOsaLu7wdHkUgZ6GnS0DbXNdVyjxWYhwLly
MZtbi08kgtkpCloyvZqqNIiZ7kZNb4dG5XI51EVOMZ6rzzdS+eRoTlZSBTZ3
Huz9RNoCGfGj5cTcNLUAwRPO+qgo6w+ZypU8/n8UiFlIcxFakhtHpH0eQUHD
4EtxGYtwC+MR2el4NqDQEGOoq7KIGZkLefzs9IqPufxl8CBJys2qQuSagVKJ
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
VtLFWqq+vFhO54ljKB61XCp266jUpEUkEw+kfAajZhWC+RX8mI8ZuGQ+jlGg
FQhxpZAOWGvx+RVhNTvQJTdu6q1uCNk3dBQZR0cudlQNOKygf8RW89Wmg5Bn
vFU7ssu/vc3TBlr2HhjYe1IbkkDrgsEuVcdoaEONnC2vYPn9NfaOFoFx0Ni/
oX708v2efUNiW5Un2DzEgQ6HWhqPbe1pOtoaCJ+b2LZv46GuzR2ub4/1VB88
vWlk17nrV18+mA5BTx++2mP3s0fwq3GwZ/8ENdr/HqJf5NzPH798fPL85VsP
rp+/9+DGg2vrzz/86sdnp278eKLnxMmmUCM49NXRXa4QtCEcCO8fGPBrvHK5
RaDL/xTQacmiashF1oIBb4tXWgOZLFZ7J0dbLfO56fZgTSAYMEvUfmyVQ6es
C9oaFMQcI1gmbdKplRKow8GIZm2CuPUOrB2wcQq95Sq1NCETn0BF/TkTb8so
LckrzC1LzKVP//JKXnIukDG/IiYNy8lXZMr0XE/hMlr54pms1L+wy+BieDHs
AxYpC5uroyUzWUwmBpFfQF7ALSFVlOOdMoqKz2AXJGaRGBxOVlZlMV2kVnqE
Rn1SMs2WBCuNQ0hKpJKofEaCRFXCYOUBHJmeJ9KQZhcKpSIYoEjJSv8Yi3Pp
nDa40c1rInCgUG1XS3Wzsq1ZpZf37mtdp7Otcyqagkbd+i1HrnUFrmjdu4PK
g5vWnNuxcc/WiQnHQY+ht6PJO8k0NXTZTPbtocYGg8Cg73LahtZbnOFRi39b
w6lW5xalpLpaUtfb09+7aW37gf6mU1t2j+/uvHDh2K3TN3afGb8w7ho5vNE1
tPPY+UuXnj5+9vTFy6evxnZ+Fmc8e/bi+W8biX5+y/vmCvvBi6kfLz57dvLB
pa/vntxz9/bUudZLhz3nbv5w++lwwzffHTvftvfIIah228j4EMbdKsU2iMoK
k0GtOqaMnZNZQZJBGqqvvatGUQcTt7CgWoO3UR1uk3t8gqaQ0yOmODFVtpQk
NUcmE9r0NnFjwKQy4nEqstS1oVEg1nIyimUSH3KRS/wWx6SCgIJ8UyWwjBCN
w1MRfwNiBStRtOQEFrmYi16Sm78qj/wZI3cRrjy20E5iZceLV71VUTwbLeIx
/i3zU9SsFRkfoRLUVVxRfAI556Ps5UTMCmbBXGpZymqJRSinL4jg4YuUwpXZ
VI3sM7g5qdLryy/nBcScpeX8tFJclERJFlNW4eEiATyJIcBbKKWGTxJJc4oF
BYUxkMtfQ23VktfaexU6yMezjgKc3sBIV2jN6DmDfHjv4WODh46EJF+fVLhO
bto9scU3MF6/bWxyQ894neNso66/ZXDfztYBc0Nb5x5TQ0eDE6puGmxtMrvG
1hnMW/ccHjlX1zbMU7sGgsPDqsmBxq2nfthVf+v07tFDwxcmzpwevLpv15Vg
27FdHYPnT5/5/vr3t+68ePTg1ULbl88f/+O96z9R0fj/xdDrodjXI43TT378
CuZ7E999v+3sV1tv/vD9N8P3bnfsP9dz7sdT333lPXO1U7Lx6KYzQ/Xntqn6
Tq6f3DngqdbZGauEHFAFWYQ2d8t0mNE4zD51u6nMKdU719RXt3W31zrWQECz
T+3ugELWYDVagStyh8wIl1bM97t9gVzQiBQyM6Qho1WSammUOmx6OY2Zl20O
RODp+fGpq7ML8nOo6dSo5RJSLlsqNKkNFJvTpMpqKMilJi/L4GYtE6PhtFIW
f+bbqSs5qwSrVzNgqUgFUqQhoiLnlkbAywEph+VOSwY0DiG5ODZVhSJoKrA2
UZWurEBFVUuQ/Eo6qEYxrGo6KAQbjKA8LoanNNmTI2DIGIICJ8r9t8yoLCpa
zmebeboKRjOo6eiutzc2yFwdOmhLZ92u4M6tPqpux/jAmUMbdsobvw+7v20M
bdl3fTN0MmTbtG9dbV9Iu7mxd3DP5qZ204i7r90gX+vucG6t1bSttQSh8GjA
2rO+09Ox7vurgbHDDT6/09S1cWL/gc179u407rs+0fvt1qH+7y5fu3fu6pl9
Jy9MHB/4+sCetht3bt16cXfq0bmrd19dUj999vcA9Nsz9OKXUbSXT+89ffz0
xdTdqdv3p67dvN536vqPt2+c3un57s7OiRvj5048OnKheu3BhvBp++b1LYYe
i6tcqLRomX5eBQbUiiCiyVdrkUB2d8soT1NtUdoddQxBA9TUBFmoKrlLJcQk
0kJKdmg9lZGtUdrYNUqlVdWgdrmL7c0hZaZSJ0R4bGa5sFvEVnARaTkRFVgu
NXd2Uso8QgYeK5IDTnZR9kpY+WdR9Pgo5nRAMeszVfRi2TsVGZ8VC8modiJm
5rxVDOaXzOxcdZkohY78JPL95X9JySxLKmFQpMrkdC6DLi9LI+MZ+KXJ3Kx4
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
AQWkrEimRYD5M2lOUj0JrWSnFVViC8RSE85oquuv37BB4F1X1LOlU2exa63u
HZ2G0yf2bhVCE2u0hy4fPfrd+OamumOhjYOBul3Xps6Gvz+6bsfxI9e+1gzc
uvTN3sHw8GjQ/fDU5FcTnu0bJ9QH6k6ebt13cHzL5SN3N+863uXsdLQNOYcm
L569fO/i/bunHnSdvX7p1oGrN6eePPvx+a1zP52+fPvM9QtHTv906/a9R6/Y
eVVRP/ttXpX9789rScgbiG5dfvni+r0bXS+f3r535fy9F3e2H5zaf/Xxydu3
D1w5aT+x//jOa9dP9A0Nb5YZiKpxszxHLFcAkNWhrlM0thp6uoYhabtC5HJv
cPxf3L13cJvZlS9Y++9ubdX+tVtbr97M2/HM7IQ3bzwd7G67o7tb3QotqZVa
WaTEnAMSQWQCIJEDMwHmAIA5gJkUxZxzBAlmgEQkcga+u98Hdbc9bvvZu/XG
lvcUiwIJkgLO/d1zfifcc2sUL5tklQltDCIxuQJPpNzHsSKZLBKaheIQP+Tk
xOBIpBIepuXlEIfDUhBvselXsyRRSazkx/gbjx7E8WLuPv3Z7b+6lvT0o4hv
fhKPi3p4LyaH+uJxpoQRFZebRnzxQHLpc/4HX9Aio2+JU2Ov37r6QeYlzJcJ
Mdx8VsQvPr/8bxF//c6zTy+9dTn27a/S0j9IfvyYTou7lvJNZOWT2HTyI0zs
42dstPirBMxtLP4ahpRKwV2mkm+Qkp/R76dxypJusAlRaS9+SUy5moh9cAOT
l/b+kzJRW3I6X1A8Vdq5Sh7KLp/KGJws4A0u1NbmdiwNle+rhxcL9N2YLhlj
3St6eXJkn+VuTWevbC1pGyr3jLPLK/Oy5aqCvmm7Zap+YWW4fn92WnxKkYw/
6RSJvFtqrcNCV0heTpq3elTy4qXRFfXU9IHFq1pTg/0jrTMYsgYuVPrzxqny
kfLJBY/L7QmXWZExVn9yDvQ7BQo3dL+2RJDbbQ8GDCHHtM48cGx1jc5eOMCp
J9hT6tSJVqaaNsSoeSaqS8wuzSYnPZWLmYnULC6ZkdXT8qomWtjUWCVppgqa
OkoimgXEqla5XEIZ5F6h4pNZMXQBsaZKzI56VlJJkORdf0JmMlNfoPEJmDpa
jjCippdPFQryiZW59z+koN4nPEi487dR99+6HfGvT7FZhdfiJdEf4MQk5o0n
0V/GP7lBRX9y6yGxCh3zi49ifnYj9idfoN/+h4j/dO3zx7ioj65FPb38V8/+
9y8+ejf2q3fuxlx/j/TtZdyDr7/9Ah0V+/RS8nsfJDz+8JvkWxGUy+hkFv3u
U9TntDuf8PlP8mj3c6LTebcfJRK+/exqOi+FjM6kJMc9SiHdvsxIeJ4S38iV
FEfVUote1Sh7KTTD/O7k0GwjtuOgYXikdVTaP11GU5d2bmmGxhfU6xv8+VNa
3cLeYXXe6fzYTINpt7NQ5DhZW6CMSytEa7yq9Zf4xS3t0vxs/1bD+Dawj6oP
sYKSmqrJzv2TkeFT5b7VFLSObVvVh8Dq9sOAcXosB2dW02r37vxaj/71oS8I
ARH405Y5fo/8pjvzIVkjr9MNBdf9QZ1599AWPDc7x9xeyzkIHuwpGsDWwO50
u3F4E88tE5BYLwpTyKX1CdTHEoq4mtNQnimStkhrK7u5vOH6yGQJTp75rL5c
KM0jNkmr2UzqfQz746yaVFFRbXFXPZ4kbmBwE3nV0be4DVyqKOMmuuzOF7SY
iMSqmNifpZASbj95599Q8cyIG9E//0hIzBCnPcl970v0I9qLL5IJH33OFcVg
87/8mHrtf4392T/yb+cmXHvET38e++LSv/y3S1GXP7l76e3Pbjx7/lc//8nN
95NvYtDJH2dG3EhhfsVBxecx84hYCvGLFMbzpCSyNLskBk1il5JzKploZiaf
mfiwCH0lJvMjKvdXP+c8f4jDfXv9GTaPl8rkj7YWLLOwXQxO2/CrysZWKmdF
j61en6+kDC+lylSVa7tDE6b9rT1sxUlfs9fVfnQuX2uX7q+ardWV/caj09WF
pUrxzrnm2NDeOVhJlPHF29kShXQCvHKHDrrlw93z0sWRll3Z0EHflr5lTKc5
0GltttOZHXvQB7mtdp3Gujaw0qmaOQp+v2r+wPf54j8vgH79MJxo8LutZyHI
bfQEnSA4vWjWD+qc+xfbO2C15dw+c646ejWvU5RQa9lEbBGL9XUyt/42sVxB
kWfkyMsaS5iV3OIaYVzlyESlQt5Z+4gpLadl5GeJRfSMrAdpmGQ6P0MiuBxB
iItIj4rksWPTapk8UlF+qSz1g7jM22g+4Ws6r+A+jYu7/vQq9u8fxN6//dNn
l66g+djsJzjir75CRZNE1+9TknKefPEs78F//hxT8CyOGpXyOPmDd2mXnz2m
3iI8j/r4Z1c+vn+L8NOrtJiMaP6tyOtffnr//3j3W1pCdswXMY//t5Trf/8i
+Radg8ERifxLmPgbV7JxiYX3XlAfJXGfJmFv4Ojf/gz77fWM9F/EoNB8DIqI
S6EyX7yX1dnORJWhu4Y2u7Z7SRUtagF1qVe8tNVQU7Jez13Y6t3c2N4Z7/VV
kMa6RdtHJ4d+w+HBYlW/xqkrrD6eHFzu0I0NShenZ+u3pQNHe7p19e5KSftW
w16zcDV0dqT2dJdV1shl2j2TYXxjq9ZsmT891Fu1kxZg2ZzfOtFZ9fu68+1D
lcZUOlJjtYDvLogOc+o/We/H75HQb4EoCPxIj5wt1AOFdJDf5gcHAxYX5N4h
6Gw1apdhpsnE6WvL7Kl+OMHOLX7OF6OullaXp5ejGnkNDfF5sFdnJJU2UgZJ
DTRyaW+JXD5Q/yKZ8xah7mmkhMrmNIrpLQSMnCOLSxOymbWk968VMYmXJcX3
S9uo3HIqOQYjQseQ4y6nvYXN+J+S34u/iYn4GJOIRaEzbr/9jJIrjv02GXfj
U9pzMg3FY6PRBPQX1K/+8dbtqGfv30Ldw+UR0zK+vPv2Lx/+60cf/BSLuxcT
lZbA4GAiP3jn0qX3vvjHn379VUw6HRsfT2bfysRfjZRklODRDNwVwSdXWHmC
bBI38TGlAH2HQyRR6DghO7eBhrr8f+fEfklD3xGQMcQyAqEaLSK0TI23zjXk
5/dT1vdH15SDL0nK2V1x78VSnrukv1wzP3SxdWFV8k600pnTrWrjeLd6pHl9
aNcy1j8zsWtXNNef1lJ0E5SZfsb23mFLz5zqxOUBHvd+2aR4XrBXP2GftZg3
bKcbwNNzbgcByOECVjO48NqOHd6j00PNaPOK3O9Biq0IKQpz6tCbwKx/h0Au
4Jg8g/RQwOqG+vY9DoPVDbYkKw0Hp7MTypaz+YaBga6SPCEmm1pH4iXxsfT6
6greYB26rn92Q9zcnc5TpNcz+a3oxLqKVhGpDJ+roBS0oXj3E8T4OxJSgrQ6
U5YurEfXlSoecQvYzyO5nLi7rCdfoHmJ78YJ4nnE+ymZD95KeTf6k5uobx6+
9xYvgU/jxD4mfvQLUlwLGnXlJuZfL+dEJFDfT45ISXn/8s3M3ISnX2dGR9+N
+eRXH/xflx68g7+SmZWRhSeQ6Vezv7n8Tx+9e+vSg7fQ72B/9S3qMSWBzCWw
kjFf3uI/xbNIT6WPUajPS2QvaNWMa0xGUnwG6hEWT6SS3kmSZsTEMagfp93H
ZqEVyu5VxZQCNS0kl3UlLh7sS6SS5TLh5FC37IBM3R5lKMzG7T3nofF0yzqz
eGY53u3VmFZK1iaXNarOJX3ntPnQMLUzZjiBrFP7bfvz7I2tCq66qdYMJmZD
BnFNZf/y1sLmsW7GMTjnG9pfmXcj6UQA7Q6vuIAbpj/G3bVlzdhIs88BLD+s
028PcAiAYABAbwhP8gWCVmBrtwLrgW8JAtYzEPBohg42Nvb6Tnb6+uYPir5t
x5egnsUnsjLLqKWlpVHy8aGqRWJBuQRfvt5dODJW0VDGHyfJZFEUJpH5OYWX
SUJFl5IL2gvSBairKaQXneTn2QpOrJQv44iY1PKsK+9jCZS7Mfxn36ThUtDx
GemMzyJvfHrv64R/YMZGZ0Y8ysB9ejWLgRHzcD/lJFwhReNS375HjcP9c2Ri
Ngr1LOKbzOg0LOO9h3/3y1/e+fy/wt4yKxqVHpPCJBLS0q/+/B/+9Yt3v334
9Bnm0vXYXyV+k349MvapILuSjknHXr2LwbBR0dGP0Mx0duqDXO5nmd0P0LiY
63Ex9IfonC8/xtxIwmD72vH3ivvJVV2924O1XNWqqqF8UyJZ7hnun14qbxwc
3zZu7CpnzniTWy0VU3rzxerQma5keGWx1702qjlq1jpOTnZbJNJ9z5EwYO7o
31Wfn67UjPV3LW6YQ85AcE1WqOiqGivXGwyarZUjrwfo1DaPDQT9nrN9C3D6
g16Hbndt6dX8xNCuH/L8sE6/DSIfciUDeDNAFLDbkHutziH3xiu7DdqXL7hk
5W67d2Rnj3c0SSphyho5fZHlecX1tV0iRWaqsKmvi4VqWpmYG59g1vQoX8n5
tcLxqtKCelJGBQrVTJbEpTSUUIjNmAiiiFpSqpTcqWkRYPiZ9yrLce/G15Dz
cjvrsmNpsXfFTOzVOw+/jb/xc8ydFxgG5hnja+azDBb5Jp6BopJJuK+zsO/k
Y7Go52xmJCqWSnnnxr1vbl26fPchHxOX8s1Hkf9y7Z8//2+/SHyExt/OzIx/
kpFEe5h89f2/+/Drjx7G/fVnEf987ZcffHU96ZP4Fy8wd7lfJ6Fp2fjEB5ez
BXy6lH4XTUnNzMtMyiOQGDwiDse+/WH8vecSCjUDL6hXVgyUknqbhnP4i7Wd
VUqifGhzb2B4nl40Vp9/tiNoG5snDgP5tP7lomdtDWzKRnfGLSbXecDQuGjc
Xh9rKhx1GjWdh/rCo9mR+tl62dE4d2uVtguHV8HTVrlCubbSr9/fW92wjeth
puOx2d0uhyvo9risXuACQbfDqjvchn91xwCM4Pu+oR+ByI9EbH92lvRa4Bfh
8ziQeyK8XnAcBJqDgF7jXAFDcu/mFnDre9OOdBxibzYzl1RIqqGJMXn1UlHF
SmOOQja00E+i1KOoVd+Ii1DYvub62tQUDKu1priQyyVyyPgC9ufFs2wFOZdQ
WMho5BSJ5dxKZV7KLRLxyj02n4S+TL0TzU+XYJ6i0Tevff5PV1LIab96Fy/k
si5FU5/Fiq/guogkUtz1L6IePUj42ZWnqU+x/xJ99wUuS5CRjP67O1/99P6n
f/t/3rn3FJ31LJlEwKTgs1PQ2Ie3bn3+9sd33r79/J+S/+XpJ1H4yOSnhPjH
lIg49Ld5L/DJKXkp7IKUNCY1Ij/ycX70p9is2/G0uId5JSIGNz/xIe56ExZf
07TctDAj2lfKTuf5OWu9+zUzKmHRTGfX8kzD4C6368g+rdPrLyDd2VLpoMMY
cOn0VqO2bUW169G2DKttW2s6i0cyaNo3r7s0p5v9K8vK9al2vdsXDFmW2muW
VdtqtUVnsIK9EDBaDnReh8PnDPmhoF7jDgG/2+e3a7YXJ5U2KzCEBzL+Zj/+
D2UHeOnMQfAnrML+9wR5gW6jzag1O90bF96ABRhdp40Wj9a1Oe7uV85uLAm3
F6TZ1GyiTFhFlNSMUls7FkRckYyJmVps5sx1DimFDVXiVsKvMipa+4WXYhsK
knkVdPpwr7wihp/wqLaTeZXdmJFVjLvJLSA8xxTk88qLWBl3yNRfUjmlSTj8
rYj3Iz78HIPFfPYgt6gg+QoK/y4l96tnYkoKNvJn3z7FieBgDRP1TQyTKrnD
zbj0+ZVn0cTyZzf/0395K+rt/3otFX/1RTE39xEtFZ2NpVCfv/32hw+f3km7
ee/nMT+//smlOFTkV2n3WClPSJivsVfTsFTCpeeEy9+SriTnk1E5FCKGcPlR
DiYzMy7jm2eUiIwGaXdHN5Mw8+qoGbOhHxS2v1p0Ts9vFnT35Q959/pX3eqV
hdPjdZutNXjSPXUyPW1VN+7t1FXIvc61Lc2B52Je1jFvPewY3t4+2jVaj3Z2
p03OhbaF2XoL5A4Cn2F7uP7l7JZuZefMHgqEQn4rODc6dBfIOgBIf+SAd7Tb
5zFsTrSeeCw2pPXs94DIB0LenSAIvBEg8vm98OsIwg98nhCALrRB54wuZIHO
6hcOGFvzhfoNWcRA9lJ9R0XxS2l5ZiFtpqeT3PBq37zWpnhZsTgyfdjPWuqj
yKarynoSv+YvKvh1XLSU9i6T9xjTP7IkQW4AfSoQf0qdq4/Ecdn4shLhw1QG
AfUgSkRGpdD/mnDrC/Jl9AvqB+lsXjrl21j+LxJYsWJOEg8lz75FTqXRS0qJ
aUwBnor5MiP2efRHUmwun4+O/dW37375P3/yT58/+qY8L4d1A0tAZ0bS09jx
D3/286/Q0V9mvHfp2rX7b0f8NOlu7OPnv2Tcv0yIxmZFPYu8jqYXVDLJgvR8
XKaQHEtlEagidnYt5Vo2KprKoCRgmLyx3q4mVvNyb5fyVX6PcWeU1LM5tG62
zrjmaVXaOfbyUQtv/UjhOauc8Z4HLLPCBfuedsGxCMBqQedB6PzCDxYql4Fh
d9e6ejTVIh0+nypSbRd6YB2HTscVsvHhA/WO0bxtsJ1CSG+F1R2wwU4MhgNw
OxHnFfBZDuaGRnUw2w4gp3X+fRvsDyAK+bzzTrfrjQARYhgDvhCwhKDAocHj
PNbaHB7vxZJa43CrPHpzl2JnxvS0Kr1VkMEhNpTP1o3MNmeVzFS3dUjPttPK
e3C91S+K0LfqH5QuTubmc9nlNWK+sLytdLo5KVeQTqwpoeR39Az1NSvkdHJh
10JnPV4UTSBG5cqT4hmPf5l049m1BGpU4meffn4nkkAhP6QySEX8pM+f5jM+
psQ+FWdjialffUIUfPtBZsw/Pf/y4dOPb/8SnUrPuPzxrWtx/+Uf/+qt5yRc
TJyYzLhPpqRkE3PiYoiZj6MuX3+aEJkUm3aHfIP9SWZKwpNMHCbpKjrmenxC
9Cdp8U/vR/HY2XF3iIwb9wVxZFr0rXxBSbkInZVIjE0RJIirpkSkZkV/Ve7A
dJtwYFi41rM6u9PP71ztXN9XMecNs+ta3c5+8NC217K+EFRtqaZA8KDDbjpS
uRwh29LK2mHAq18fNdp3L85Ojw9m99ZMJ6MByG03ri0utR7sudRzaj3Mcpzw
DoZs9hASY3kQjwAvA9JD7dHtrS3bDcZgAAr8jnvJX38rBLlDS2en1jcCRBBy
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
/W7JgqDK0jFzPCVQj+6gpsZOVN3dlM1Js1xG75vdWtsfO7canQHg9czBC2l1
wVQG5s9+45kdBNwwK4RCP3CbkCdc5IIVAdNqf9APvEiZwmN3Ohwut9uPYMjn
cPh/q9z6++X7TkafXxNCrnfVuoJe8y787h1qvcUTshqAZUPr+0tJD/0+CWfB
gn4zrC8keRQKGDzw1yoA9MA6dg4HpMGlPeCwBcA58Bq1Q8e2RTXMxtfn3XWT
gTamtkNo29zSelxW2fywSjytaV5aaBytyhiaUBc0Ts0W7FbKztQe86HzUK7d
ZLw6yD3RtzQHZPXDFZX66paXY7j+qYE2Xik3QbCz0ceQjjQIqVSRQkboUb4c
Uwjqpu9Ke1fbSOtN0p7KzZ0+/fR8laRfrVI1KDhbL0snttfnTxdnD3qHDo1n
Ps2mekprWc+YPt6SV1ZcVPC0uwrqQs6p34ikdY4OkKReYOfIFwQWkwNYneFJ
UpDLijSL/QYekPonHEv4ESDB2jj3wLhxu/weq9kZCDcvBt0W649KZL9XXmMo
5PfD7gx5vBMAftPqvhdY1Wbrhd9mDnnDvSB/2QJ9l/YKGpyIs/Z6/VAASdAC
tSdogJUVspycBdeUwAyC497gzIarXw+Hw07/+bDFo9G5pX1ONbAdyOZF/PkS
tlAnJAyr9kcPT6dBP50qytqY8xp4MxaV3VxhBWrI3j8C8ylwPG89GwHrG3v6
U3VNsrJ2CJfwsnhyf3KGVFonGsmYKW8dw5KUmdSKc0lnX9lhx3ljk3p7pknJ
kDfWTa1NdR5N0Fb0VutSbf3C0ej+YtHSUN2OI1+5NrN3pB/fP9OPcUYmdi9k
KVNbe0vny+0HOrsXxhG8YPBqufx+5A7xcAtQyO8OH/j6zcZnGDr+IAS7cqDz
O0DQF0LqQMFwWRRWTbg5yO3+4wkwUrSHQl5bIKBB1OvbgxXu3jUCyGEIhi4g
v8PtCYDQXzCh/rUgzMAZDA9Agb2+3eB168OzjYDZenQM7GB/FxzYtW1nALqA
f2Sx4XDxEFiDVpdDexDcY+3o+mvOwJkaGF7ZfTPn4kEDlFrFrdo4O1kDSotu
oF/fNWSZMMOh7DLkNXUvhcCFIWiELYJnrHCsn9uOnuraW5l41Z3NxhQ0NMwU
jFK4zdRS48JFy069biJVPagqYU60VNYOKeqXXI7O036+OrhURdhQTWiOmiQL
zQTtq6Jl+9zqeehgoPd4lz+t3Q91KWadys3u2enJ/leWuX0YJ0GvFcBGFibU
4X7zMF9+3f0V9P7anUCeMGAQ8+wMBKBw6QvWjfV1FT7chhi+vv6P1ezrE4oe
SxCcwUG9W3cKK9V35ANOG/wnzQgz8yINIn/ppggRCHIimXkf0vHiC4X8yFwd
RNEeFTBa/TOwCpDebDiW0QMTHEmsuCdMXpd/eGKtWGs8WgDgQOUOVsnOFits
Mp2Kvl+n4A4J65Sr5/r9rr0g8IYm1wF02rBoW2pz6QfPT3cP2haOpvQ9xkny
sPHiCF1Oq+ndrZXzB19yyRWi3mFF6djQemfNGmFlYnpDuUJvmNJu9M2NNakl
HQOBmlX7qkG/MzZ0oTZ5jk6mdRc9wKZ1bNt2JqZ0aw3r/hPgsp5cwGFgqLqz
gb91YYLtUHDlBHIgE14CTiRZ7PUhnMaPDA7ywe/3NzmJHwoHazBUkK5pd3hK
DBQwAJseqb8GYGrs8QcCfzSJCYVRFISNlxZJQZ0YIDew74Gg3WoJ+U3hY65v
3JmO/88CwQoL22ok/vCF7yQN2hBrBMeiO6HgXBC6sHghdYnFJfXZIHgNbFN2
2CvMQXuN4KAK7I3OjpGMiuU93sCpe54+tm/R6RsqhIMQvJmHgsBoMwI3zIxA
kwuyhFTt1saF/fnTlk77hXVmyjzRl53fVzup7x3izzRvySkNMjk5dx0tWMqc
rCBJdy6UnfN7FaMve5lbZ4116qEDTSdfcL7rHS3Q9rWu9Nefn50M2kHhjmWR
GXR6dmc8ztY2yAFJ5SZVaHvbY4TcNgjAaDjRBk2OEPB44d2CjOtAwlL3d2eV
f72Mwe9K8+7z8KlWJNxwI2cxoO/sU8DtCf2/4DBOB+L7gi6bFw7xgecMOXmt
WwUu4HEAlyXcgITA6A8Wcv8i5fvgIzi3F3Q54Hd+NuMNbZ+5QCAUOg/pFmC2
4IJpkjlgGdV7hYeKLPO5zaMyaTrPBBMHS5Z5G2sDDmOO7Xpgn7MCx6HMFS4Z
BR0TGxC4gPUJB0tnVqesnd9XQO2q21s7MJ8xmxMn5Fs946rE6X3afJFmYNWo
HzpTiHYmB/o5q7q92nODzbu2oqi0ruybnL5D0biVcmTssgBNwarD47EYQ/b5
s65iF1hsOZBoFzeMF+c800qHV78PHN/10P9wHOMPa+D1/fTIVWR+2Arv2ZEN
hqAK+c4fUSj1I3sRnPlg1QVt3gObfV1vsjqAWxf0hNRw/Ofxg4DF+f8XG/S7
5Xs1B40ghJQ+XCGrw7l+HAgeQ/rGs4A7dGTVdx1uV5ye+4DmApz63a3nEzkT
Vpt5YX3HMZVl63x5Dgci5u0LYwCc7oS0kHPZBTXrQ3uNsxYIBJY1/hMIKMuD
ExsbQ7ayAUg/7OANH/8/7V3pcxNHFv+399N+2UrVbtVukv2Q2t0EyMERQmID
SbhNgsEGDLINRj5AsiRb54yO6bmnp4+37/UobAhhkbABx+5fBVJUSbI8/fq9
37vn/nHtg3+2bzy++7T37cLlS+XHJ5vnPmtfmHVWq5duL398ujZ3rlxtRg81
+9e3/WEcPMGjiEdxJ0MBbd+S7EyeerGD3/1nD/KbV3iJSUcPIr3FuSiG/kwo
REVroqJcPlokDT2kU9SUqnIzFuP1+Ync/NeTpGRyGNacx1nOAh72VA51ukSe
x0aHUwE9h37+f62iDLIl8KqDHpPBTVcPgYE7F6uGVsvefJzeUqHyo482a+XV
v36aaTYzDztSJs9aS66fx10vKv+MfGI454cXmkpTd00HnECev9mZ3ZXXVm58
ee8vC19XP10pP7jzxU9bt+/MX731wb35T45tX/3u2oe8vRx9+Wnt4k8fltt/
v6sbj9w2bH9ySz7AW9ze0n4HVLen4UpX5JeYSvHMGjOR8tERdNu9WplyDUMJ
LI1iQ3ImFSJy5zk5Ttqs06Q9zeRDKeRQcqLOVDJiWg6Rz1MyMvXjEs8ddPoY
5KqCH5UxryBcRwJRQDPgXBl10S99BqMoEsP71ICHj7ip/d5o9NNw61Sm78ul
D6/6nfWTHniDGWTmoe6hOWDr6NUmEJEDMgCIdypIvzINXdXyYVfcOD/4+Lz/
tLcJ8amNK8drc63l7XNflS6ttBrfrYzSnT8t3fhqY6mlmsMftJPDrM+qx+p8
yw/dUY8FO358HXl9i8uVZgBuvw9stikqQXku4pe1G35+orvujLrUxpWTgy6S
SX9rU0xGjgaYGVXFaA9qISt2bb7+8OkdmgeaZxRBQDlcydNGAiJUStek9ITJ
hhwK3/61oHSz0OiGAkMVHm8q/riE6lkgrdmS7A4+YJpjEQ4DN4luzPVi6NdX
NrwLs2s3Eo7KXJpkFLo8c2vIh1aY6s53FeoJKuDRUW1VnDkNi+Vr39XkBtzL
+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
+gUm02Am6IxL0MeyJZEWRcbEqIBeI01M4AVH1pwy0QGqEtXozEHHnDqnTHkG
IZFiKq2M0GOLIHKRdIcxNX9RbbPpKETTJXSRRQ1RVmkrjxkwRetLoDBapPuo
Acd5qqP67YXsl1F4RcB5ijjPb8HFlIkTUTQ+QKqEeWibeWaCtdSkeEjqYfcd
hXnLOYTDaKLCP7J0yK11XNqtKZPjTGQLxeElszHuIU1YkEkeTTzf2U3RdYPR
G/0yYOjbvkQCqRyJyrbdbVnJ0JDvw0ceXhQWg67ZhBnKImKLtCjhLZGhog+Y
5kr+DvcwUpQGvhl7OOl8Z+pUfcr2oHrGP3uP7ydvPkbrK4ddaMscrBBNguKI
J9AURojMKkt0yejfaDAYkBC9/FLDx83qXTnpfGcZ3l2brbtTfvuXf/IePwDB
GU12rPVFE/KDs6zjYIOoj5zA5OuxfxdlTBej5/C6SniVE0SJdJ5S5/yEGadu
leLpb1xqkfHfTuh8U+RBhFSt4qc1rV7e7mnxu5jq9iLtRVJNO5zAM27Uq95N
Q7ko1AOT6TkKA+gQ3vzmF0K0dymisBWN8/FV2lYHZgvewcc0j54cl4Cy47oY
svHKt0ZUPzBFyDmE1vaF18/lfN3X2/OhF/aZ+ktG/SOc7ni7UMI0BnIaJpGk
r+ad5ijU5CnUXCVZax8UyV4/QOa5EZxE9EP4Q8+OebeYKjJsWrlM5+3o/9qp
wpJNcZNDmoX/5oc2YV/RayF5lpvsv+IUlD0S5bDvHC90X+xTpV+xAJoPRwdh
2IYUxSR0syvP4q3gbQkRFMsS9uPj9gSexCmpIjlVIYnFVHixD2yfhKgYk0gl
K++dg8icGxW0X+bR4l2hqFlKsn0gxnuF1T/vEPv8qKmc50AMbAkSsxH4ILCz
w4/9Pu8ibPn+Lcgg4G9YUGnx3lH0dKn3rgHMiFFLh/6g0HsqZNxPjDtoD8R3
sbCwsLCwsLCwsLCwsLCwsLCwsLCwOHCwEWSLPcOW91jsGVaGLCwsLCwsLCws
LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCyO
HP4L8Jrbtw==
    "], {{0, 652.}, {581., 0}}, {0, 255},
    ColorFunction->GrayLevel,
    ImageResolution->{72, 72}],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{581., 652.},
  PlotRange->{{0, 581.}, {0, 652.}}]], "Input",
 CellChangeTimes->{3.8778153005185957`*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"87c63c9c-92f5-4631-bd9a-37af98e9fda4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet.",
          "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9526b83e-2c7a-4055-9d6d-b44c6b6cfd0b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->433339604,ExpressionUUID->"4c736609-44d9-48a3-8f50-b5d3e67b2a9a"],

Cell["\<\
This paclet should be helpful for anyone interested in dimensional analysis. \
I hope you have a fun time using it.\
\>", "Text",
 CellChangeTimes->{{3.8778153037042875`*^9, 3.8778153199990788`*^9}, {
  3.8778155087320423`*^9, 3.877815531974468*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"9d5b89b6-17b1-4072-9980-935e2e8842d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Details", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Details may include a long description of the resource's contents, \
history, methodology or other relevant information. Give references here if \
they are directly relevant to the resource. The details will appear above the \
examples on the webpage for the resource.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDetails"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "43297241-7494-4027-914f-bb7299f87d01"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Details"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "TemplateCellGroup"},
 CellID->484110581,ExpressionUUID->"3a0256a3-6d1c-4521-8a9e-6db706b2c0dc"],

Cell["\<\
The image above is a portrait of the great physicist James Clerk Maxwell, who \
unified the forces of electricity and magnetism into electromagnetism in four \
mathematical laws known as Maxwell's equations.\
\>", "Notes",
 CellChangeTimes->{{3.877815323402972*^9, 3.8778154246316357`*^9}},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"46b0cb97-5c92-491b-ac83-3f46fa38ebd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose one of your documentation guide pages to feature as part of \
the main landing page for your paclet. This guide page should correspond to a \
general overview of your paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "97debb8c-d7da-4eb9-a5fd-ffe9faf4c97f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->587602718,ExpressionUUID->"3492d13a-abcf-4401-87bf-c444a7bc72b2"],

Cell[BoxData[
 TemplateBox[{},
  "MainGuideChooserTemplate"]], "MainGuideChooser",
 TaggingRules->{
  "Refreshing" -> False, "Relative" -> True, "MainGuidePageString" -> 
   "Documentation/English/Tutorials/SIUnits.nb"},
 CellTags->"MainGuidePagePanel",
 CellID->614786987,ExpressionUUID->"64c5922b-7c25-42e9-b46d-ea4d672febfa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Language Paclet Repository.\n\nThe usage examples should provide \
a succinct overview of what types of features users can expect from your \
paclet. Detailed examples should be reserved for the corresponding function, \
guide, or tutorial pages.\n\nThe default content appearing here shows the \
recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bfc6218c-79f4-4cf2-ba2b-fa925eb80371"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->365974185,ExpressionUUID->"3ee0d6dd-bff0-4425-b128-7642d51bace7"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Put any initialization code that's needed for evaluating examples \
here.\n\nCells marked as excluded will not appear anywhere in the published \
paclet except for the definition notebook.\n\nCells can be toggled as \
excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f498b916-d537-4be5-b97c-05e14834f635"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->468286435,ExpressionUUID->"56401705-7c2c-45ee-bfc6-9e47e8c6418f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletDirectory,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[11]:=",
 CellID->633295841,ExpressionUUID->"e1f5deab-6ca2-481c-8b41-406b82d3db06"],

Cell[BoxData[
 TemplateBox[{
  "PacletResource`DefinitionNotebook`$PacletDirectory", "invnb", 
   "\"The current notebook is not a Paclet Resource definition notebook.\"", 
   2, 11, 1, 16940839445485533800, "Local", 
   "PacletResource`DefinitionNotebook`$PacletDirectory"},
  "MessageTemplate2"]], "Message", "MSG", "Excluded",
 CellChangeTimes->{3.8778157950029907`*^9},
 CellLabel->"During evaluation of In[11]:=",
 CellID->868891898,ExpressionUUID->"53785136-9324-46d7-bc57-8f4754af6e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", 
       StyleBox[
       "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Symbol", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["0", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    PacletResource`DefinitionNotebook`$PacletContext,
    SelectWithContents->True,
    Selectable->False], "]"}], ";"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[12]:=",
 CellID->256310072,ExpressionUUID->"41f21c34-dda7-4452-9000-ca5e54b9a45d"],

Cell[BoxData[
 TemplateBox[{
  "PacletResource`DefinitionNotebook`$PacletDirectory", "invnb", 
   "\"The current notebook is not a Paclet Resource definition notebook.\"", 
   2, 12, 2, 16940839445485533800, "Local", 
   "PacletResource`DefinitionNotebook`$PacletDirectory"},
  "MessageTemplate2"]], "Message", "MSG", "Excluded",
 CellChangeTimes->{3.8778157962529945`*^9},
 CellLabel->"During evaluation of In[12]:=",
 CellID->172496930,ExpressionUUID->"a2ca96bd-0934-4d2e-8fd4-62d1e2548034"],

Cell[BoxData[
 TemplateBox[{
  "Needs", "cxru", 
   "\"Context or appropriately structured rule expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Needs\\\", \\\"[\\\", \
RowBox[{\\\"Failure\\\", \\\"[\\\", \
RowBox[{\\\"\\\\\\\"PacletResource`DefinitionNotebook`$PacletDirectory::invnb\
\\\\\\\"\\\", \\\",\\\", RowBox[{\\\"\[LeftAssociation]\\\", RowBox[{RowBox[{\
\\\"\\\\\\\"MessageTemplate\\\\\\\"\\\", \\\"\[RuleDelayed]\\\", \
StyleBox[RowBox[{\\\"PacletResource`DefinitionNotebook`$PacletDirectory\\\", \
\\\"::\\\", \\\"invnb\\\"}], \\\"MessageName\\\"]}], \\\",\\\", \
RowBox[{\\\"\\\\\\\"MessageParameters\\\\\\\"\\\", \\\"\[RuleDelayed]\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}]}], \\\"\[RightAssociation]\\\"}]}], \
\\\"]\\\"}], \\\"]\\\"}]\\).\"", 2, 12, 3, 16940839445485533800, "Local"},
  "MessageTemplate"]], "Message", "MSG", "Excluded",
 CellChangeTimes->{3.8778157966904964`*^9},
 CellLabel->"During evaluation of In[12]:=",
 CellID->142642547,ExpressionUUID->"bcee96a6-7c9b-42d8-8c6d-3bfdc51f23ba"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"2230da1d-6b05-4307-8ab7-6df6935b3ef7"],

Cell["Transform the joule into the Planck system:", "Text",
 CellChangeTimes->{{3.877815859572728*^9, 3.877815866977124*^9}},
 CellID->602483819,ExpressionUUID->"14ef1577-b1e5-4937-9ecd-e99eba18f574"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
    "Quantity"], ",", "\"\<PlanckUnits\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877815756041524*^9, 3.8778157870962424`*^9}, {
  3.877815853461193*^9, 3.8778158718697004`*^9}},
 CellLabel->"In[14]:=",
 CellID->390088148,ExpressionUUID->"56f9047f-f7b6-4ca2-bd90-c0fb86914782"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"2.756147296775032733026256`3.8749198541608103*^-53", 
    RowBox[{
      SubscriptBox[
       StyleBox["\"m\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
      SubsuperscriptBox[
       StyleBox["\"l\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
      "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
      SubsuperscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "3"]}], 
    "Planck mass Planck lengths squared per Planck time cubed", 
    FractionBox[
     RowBox[{
       SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
     SuperscriptBox["\"PlanckTime\"", "3"]]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{3.877815872173093*^9},
 CellLabel->"Out[14]=",
 CellID->151192535,ExpressionUUID->"1ec6a098-a55e-436a-850d-4e5622f07063"]
}, Open  ]],

Cell["Transform the farad F into a combination of natural units:", "Text",
 CellChangeTimes->{{3.877815874456256*^9, 3.8778159107690754`*^9}},
 CellID->216138259,ExpressionUUID->"eb5eed6c-a74f-4cd3-8865-13485d9c44cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1], "\"F\"", "farads", 
     "\"Farads\""},
    "Quantity"], ",", "\"\<NaturalUnits\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8778159121922555`*^9, 3.87781593727501*^9}},
 CellLabel->"In[15]:=",
 CellID->671989819,ExpressionUUID->"c6aea794-7ec5-4864-9d46-51cd700ed600"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"4.7879103775628411213230812013`4.652507983440015*^47", 
    RowBox[{
      SubscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[InvisibleSpace]",
       "\"/\"", "\[InvisibleSpace]", 
      SubscriptBox[
       StyleBox["\"R\"", Italic, StripOnInput -> False], "\"K\""]}], 
    "Planck times per von Klitzing constant", 
    FractionBox["\"PlanckTime\"", "\"VonKlitzingConstant\""]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{3.877815937728134*^9},
 CellLabel->"Out[15]=",
 CellID->35692379,ExpressionUUID->"50d8f1e6-5884-4901-9ca7-041df1a84fb1"]
}, Open  ]],

Cell["\<\
Transform the henry H into a combination of the SI defining constants:\
\>", "Text",
 CellChangeTimes->{{3.8778159394355764`*^9, 3.877815960053874*^9}},
 CellID->277277416,ExpressionUUID->"74d99d46-c292-484d-a572-371931b4da2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
    "Quantity"], ",", "\"\<SIDefiningConstants\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8778159610851364`*^9, 3.877815972314644*^9}},
 CellLabel->"In[17]:=",
 CellID->180003878,ExpressionUUID->"7c8ac556-38d5-4448-8cde-17b2ea794519"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{
    FractionBox["28091916270250853824503693", "78881787500000000000"], 
    RowBox[{
      StyleBox["\"h\"", StripOnInput -> False, FontSlant -> Italic], 
      "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
      "\"\[CapitalDelta]\[Nu]\"", 
      SubscriptBox[
       TemplateBox[{"\"(\"", 
         TemplateBox[{
           
           TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
            SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
        "RowDefault"], "\"hfs\""], "\[ThinSpace]", 
      SuperscriptBox[
       StyleBox["\"e\"", StripOnInput -> False, FontSlant -> Italic], "2"], 
      "\[InvisibleSpace]", "\")\""}], 
    "Planck constants per ground state hyperfine splitting frequency of the \
cesium\[Hyphen]133 atom elementary charge squared", 
    FractionBox["\"PlanckConstant\"", 
     RowBox[{"\"Cesium133HyperfineSplittingFrequency\"", " ", 
       SuperscriptBox["\"ElementaryCharge\"", "2"]}]]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{{3.8778159734551888`*^9, 3.877815976422801*^9}},
 CellLabel->"Out[17]=",
 CellID->170510221,ExpressionUUID->"244c08b2-da0a-47a2-9302-07d62ac0fdfb"]
}, Open  ]],

Cell["Transform the weber Wb into a combination of Stoney units:", "Text",
 CellChangeTimes->{{3.877815976820427*^9, 3.8778159867313337`*^9}},
 CellID->643814641,ExpressionUUID->"8a9610dc-96f3-4478-86e8-aaaeb545267d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
    "Quantity"], ",", "\"\<StoneyUnits\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.877815987964246*^9, 3.877815996851469*^9}},
 CellLabel->"In[19]:=",
 CellID->455748714,ExpressionUUID->"d15dafcd-8342-436d-a740-ab5adecc2856"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"2.41798924208492`3.879423107705504*^14", 
    RowBox[{
      SubscriptBox[
       StyleBox["\"m\"", Italic, StripOnInput -> False], 
       StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
      SubsuperscriptBox[
       StyleBox["\"\[Lambda]\"", Italic, StripOnInput -> False], 
       StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
      "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
      SubsuperscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
      "\[InvisibleSpace]", 
      SubscriptBox[
       StyleBox["\"I\"", Italic, StripOnInput -> False], 
       StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[InvisibleSpace]",
       "\")\""}], 
    "Stoney mass Stoney lengths squared per Stoney time squared Stoney \
electric current", 
    FractionBox[
     RowBox[{
       SuperscriptBox["\"StoneyLength\"", "2"], " ", "\"StoneyMass\""}], 
     RowBox[{"\"StoneyElectricCurrent\"", " ", 
       SuperscriptBox["\"StoneyTime\"", "2"]}]]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{{3.877815997195201*^9, 3.8778160012264547`*^9}},
 CellLabel->"Out[19]=",
 CellID->199821170,ExpressionUUID->"b56d4b1a-da0f-4364-979d-34bfb0fe55a1"]
}, Open  ]],

Cell["\<\
Transform the pascal tesla kelvin Pa T K into a combination of the four \
Planck basis quantities of time, length, mass, and temperature and the \
Josephson constant:\
\>", "Text",
 CellChangeTimes->{{3.877816002314737*^9, 3.877816061440324*^9}, {
  3.8778161163418937`*^9, 3.8778161190063424`*^9}, {3.87781616144207*^9, 
  3.877816165516545*^9}},
 CellID->645967846,ExpressionUUID->"6d564964-f386-42d0-bce0-57e9989959fc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitSystemTransform", "[", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"Pa\"", "pascals", 
      "\"Pascals\""},
     "Quantity"], "*", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"T\"", "teslas", 
      "\"Teslas\""},
     "Quantity"], " ", 
    TemplateBox[{
      InterpretationBox["\[InvisibleSpace]", 1], "\"K\"", "kelvins", 
      "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"t\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck times", 
       "\"PlanckTime\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"l\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck lengths", 
       "\"PlanckLength\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"m\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], "Planck masses", 
       "\"PlanckMass\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"T\"", Italic, StripOnInput -> False], 
        StyleBox["\"P\"", Italic, StripOnInput -> False]], 
       "Planck temperatures", "\"PlanckTemperature\""},
      "Quantity"], ",", 
     TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"K\"", Italic, StripOnInput -> False], "\"J\""], 
       "Josephson constants", "\"JosephsonConstant\""},
      "Quantity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8778160622684016`*^9, 3.877816168752056*^9}},
 CellLabel->"In[27]:=",
 CellID->3278037,ExpressionUUID->"b0eedd5e-e983-4cfa-bc90-413b20b76334"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{"2.72676029426560124859754`3.874869674224456*^-169", 
    RowBox[{
      SubscriptBox[
       StyleBox["\"m\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
      "\"K\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
      SubsuperscriptBox[
       StyleBox["\"l\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "3"], 
      "\[InvisibleSpace]", 
      SubsuperscriptBox[
       StyleBox["\"t\"", Italic, StripOnInput -> False], 
       StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
      "\[InvisibleSpace]", 
      SubscriptBox[
       StyleBox["\"K\"", Italic, StripOnInput -> False], "\"J\""], 
      "\[InvisibleSpace]", "\")\""}], 
    "Planck mass kelvins per Planck length cubed Planck time squared \
Josephson constant", 
    FractionBox[
     RowBox[{"\"Kelvins\"", " ", "\"PlanckMass\""}], 
     RowBox[{"\"JosephsonConstant\"", " ", 
       SuperscriptBox["\"PlanckLength\"", "3"], " ", 
       SuperscriptBox["\"PlanckTime\"", "2"]}]]},
   "Quantity"], "}"}]], "Output",
 CellChangeTimes->{{3.877816098939233*^9, 3.8778161766970224`*^9}},
 CellLabel->"Out[27]=",
 CellID->463696451,ExpressionUUID->"f6f94587-3bdc-409e-81d9-26fbae9ed48a"]
}, Open  ]],

Cell["FInd the dimensions for the weber unit:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.872438088811635*^9, 3.8724381160912356`*^9}, {
  3.8724386080144196`*^9, 3.8724386083870564`*^9}},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"f39284aa-e9a8-407b-b1c2-07330b88d696"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalDimensionalProduct", "[", 
  RowBox[{"Quantity", "[", "\"\<Webers\>\"", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724381003414536`*^9, 3.872438106707444*^9}, {
  3.877816247703007*^9, 3.8778162497610626`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[42]:=",
 CellID->593829399,ExpressionUUID->"40bd94b6-ef0d-49a9-8fd0-da568a4bafd7"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{"\"T\"", 
     RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"I\"", 
     RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> SuperscriptBox]},
  "RowDefault"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872438108833562*^9, 3.8725993716870117`*^9, 
  3.8778162500136623`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[42]=",
 CellID->248756784,ExpressionUUID->"7bc44bc2-f2cd-4f5c-9aa8-85fb0e4b8eac"]
}, Open  ]],

Cell["Find the idealized SI constant's definition of the weber:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8724398768208213`*^9, 3.8724398993051715`*^9}},
 CellID->53950897,ExpressionUUID->"fd771a41-4f25-4428-8eed-d56706c86c03"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CanonicalDimensionalProduct", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"1", ",", "\"\<Webers\>\""}], "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724398659275312`*^9, 3.872439871016738*^9}, {
  3.872439937028592*^9, 3.8724399426279416`*^9}, {3.877816271838925*^9, 
  3.877816274236047*^9}},
 CellLabel->"In[43]:=",
 CellID->54066691,ExpressionUUID->"40f224c6-c5e6-43d6-b91b-d7873c180158"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{"\"T\"", 
     RowBox[{"-", "2"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"L\"", "2"}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"M\"", "1"}, "Superscript", SyntaxForm -> SuperscriptBox], 
   TemplateBox[{"\"I\"", 
     RowBox[{"-", "1"}]}, "Superscript", SyntaxForm -> SuperscriptBox]},
  "RowDefault"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8724399394636393`*^9, 3.87243994289964*^9}, 
   3.8724400068440742`*^9, 3.8778162749419436`*^9},
 CellLabel->"Out[43]=",
 CellID->31295690,ExpressionUUID->"90057cd5-c4ac-4409-826f-7161bbdf27e7"]
}, Open  ]],

Cell["Find the Planck form of a unit:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.872442240738181*^9, 3.872442246849989*^9}},
 CellID->183599869,ExpressionUUID->"e014d5a9-2331-425d-86e4-49fcf3cea868"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlanckUnitConversion", "[", 
  RowBox[{"Quantity", "[", "\"\<Webers\>\"", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872442135021378*^9, 3.872442140366722*^9}},
 CellLabel->"In[94]:=",
 CellID->93162853,ExpressionUUID->"af6c996d-2250-44cb-a182-fd5cb460efe4"],

Cell[BoxData[
 TemplateBox[{"5.1122630752681745090977756667`3.954213812101825*^-10", 
   RowBox[{
     SubscriptBox[
      StyleBox["\"m\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
     SubsuperscriptBox[
      StyleBox["\"l\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
     "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
     SubsuperscriptBox[
      StyleBox["\"t\"", Italic, StripOnInput -> False], 
      StyleBox["\"P\"", Italic, StripOnInput -> False], "2"], 
     "\[InvisibleSpace]", "\"A\"", "\[InvisibleSpace]", "\")\""}], 
   "Planck mass Planck lengths squared per Planck time squared ampere", 
   FractionBox[
    RowBox[{
      SuperscriptBox["\"PlanckLength\"", "2"], " ", "\"PlanckMass\""}], 
    RowBox[{"\"Amperes\"", " ", 
      SuperscriptBox["\"PlanckTime\"", "2"]}]]},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872442140666335*^9},
 CellLabel->"Out[94]=",
 CellID->113555973,ExpressionUUID->"cda5e33a-f198-4ca9-a18e-7e409d74b834"]
}, Open  ]],

Cell["Find the Stoney form of a unit:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.872443077186587*^9, 3.872443081902317*^9}},
 CellID->233601559,ExpressionUUID->"fd30c27b-6c00-46bd-b09a-001d5a1138db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StoneyUnitConversion", "[", 
  RowBox[{"Quantity", "[", "\"\<Webers\>\"", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872443083327029*^9, 3.8724430877245045`*^9}},
 CellLabel->"In[297]:=",
 CellID->53298384,ExpressionUUID->"5d08cde0-ff85-4e10-9835-f5304df2adb9"],

Cell[BoxData[
 TemplateBox[{"2.41798924208492`3.879423107705504*^14", 
   RowBox[{
     SubscriptBox[
      StyleBox["\"m\"", Italic, StripOnInput -> False], 
      StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
     SubsuperscriptBox[
      StyleBox["\"\[Lambda]\"", Italic, StripOnInput -> False], 
      StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
     "\[NegativeMediumSpace]", "\"/(\"", "\[InvisibleSpace]", 
     SubsuperscriptBox[
      StyleBox["\"t\"", Italic, StripOnInput -> False], 
      StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
     "\[InvisibleSpace]", 
     SubscriptBox[
      StyleBox["\"I\"", Italic, StripOnInput -> False], 
      StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[InvisibleSpace]", 
     "\")\""}], 
   "Stoney mass Stoney lengths squared per Stoney time squared Stoney \
electric current", 
   FractionBox[
    RowBox[{
      SuperscriptBox["\"StoneyLength\"", "2"], " ", "\"StoneyMass\""}], 
    RowBox[{"\"StoneyElectricCurrent\"", " ", 
      SuperscriptBox["\"StoneyTime\"", "2"]}]]},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872443088290959*^9},
 CellLabel->"Out[297]=",
 CellID->2637900,ExpressionUUID->"19107733-d096-41f6-84e3-7d17d3494bfb"]
}, Open  ]],

Cell["Find information for a physical observation:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8724404607032704`*^9, 3.8724404678481646`*^9}},
 CellID->360975364,ExpressionUUID->"e56e720e-1454-49c6-a170-c1992560cfc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalObservationInformation", "[", 
  RowBox[{"Quantity", "[", 
   RowBox[{"129", ",", 
    RowBox[{"\"\<Webers\>\"", "\"\<Candelas\>\"", "\"\<Amperes\>\""}]}], 
   "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724402947105737`*^9, 3.8724402997230616`*^9}, {
  3.8724406065287766`*^9, 3.872440636072525*^9}, {3.872440734814931*^9, 
  3.872440736679665*^9}},
 CellLabel->"In[440]:=",
 CellID->1211579,ExpressionUUID->"1c3991c2-50d9-4269-bc9a-a0bd12489409"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"dimensions-notation\"\>", "\[Rule]", 
    RowBox[{
     TemplateBox[{"\"T\"", 
       RowBox[{"-", "2"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"L\"", "2"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"M\"", "1"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"I\"", 
       RowBox[{"-", "1"}]},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"\[CapitalTheta]\"", "0"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"N\"", "0"},
      "Superscript"], "\[CenterDot]", 
     TemplateBox[{"\"J\"", "0"},
      "Superscript"]}]}], ",", 
   RowBox[{"\<\"dimensional-product\"\>", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\<\"L\"\>", "2"], " ", "\<\"M\"\>"}], 
     RowBox[{"\<\"I\"\>", " ", 
      SuperscriptBox["\<\"T\"\>", "2"]}]]}], ",", 
   RowBox[{"\<\"make-unit-planck\"\>", "\[Rule]", 
    TemplateBox[{"7.7200492245324907861266248595768`3.9586043537531292*^-7", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"\[Lambda]\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
        "\[InvisibleSpace]", "\"cd\"", "\[InvisibleSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False], "2"]}], 
      "Stoney mass Stoney length squared candelas per Stoney time squared", 
      FractionBox[
       RowBox[{"\"Candelas\"", " ", 
         SuperscriptBox["\"StoneyLength\"", "2"], " ", "\"StoneyMass\""}], 
       SuperscriptBox["\"StoneyTime\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"make-unit-stoney\"\>", "\[Rule]", 
    TemplateBox[{"7.7200492245324907861266248595768`3.9586043537531292*^-7", 
      RowBox[{
        SubscriptBox[
         StyleBox["\"m\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False]], "\[ThinSpace]", 
        SubsuperscriptBox[
         StyleBox["\"\[Lambda]\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False], "2"], 
        "\[InvisibleSpace]", "\"cd\"", "\[InvisibleSpace]", "\"/\"", 
        "\[InvisibleSpace]", 
        SubsuperscriptBox[
         StyleBox["\"t\"", Italic, StripOnInput -> False], 
         StyleBox["\"S\"", Italic, StripOnInput -> False], "2"]}], 
      "Stoney mass Stoney length squared candelas per Stoney time squared", 
      FractionBox[
       RowBox[{"\"Candelas\"", " ", 
         SuperscriptBox["\"StoneyLength\"", "2"], " ", "\"StoneyMass\""}], 
       SuperscriptBox["\"StoneyTime\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"idealized-SI-constants-definition\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{
       "1720000000000000000000000000000000000000000000000000000000000000000000\
000000000000", "/", "3105925903994435017106022361083353653196680617"}], 
      RowBox[{
        SuperscriptBox[
         RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
           SubscriptBox[
            TemplateBox[{"\"(\"", 
              TemplateBox[{
                
                TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
             "RowDefault"], "\"hfs\""]}], "3"], "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"K\"", Italic, StripOnInput -> False], "\"cd\""], 
        "\[ThinSpace]", 
        SuperscriptBox[
         StyleBox["\"h\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"rad\"", "2"]}], 
      "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom cubed luminous efficacy of monochromatic radiation of frequency 540 THz \
Planck constants squared per radian squared", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"Cesium133HyperfineSplittingFrequency\"", "3"], " ",
          "\"MonochromaticRadiation540THzLuminousEfficacy\"", " ", 
         SuperscriptBox["\"PlanckConstant\"", "2"]}], 
       SuperscriptBox["\"Radians\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"continuous-idealized-SI-constants-definition\"\>", "\[Rule]", 
    TemplateBox[{"5.53780113616993`*^35", 
      RowBox[{
        SuperscriptBox[
         RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
           SubscriptBox[
            TemplateBox[{"\"(\"", 
              TemplateBox[{
                
                TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
             "RowDefault"], "\"hfs\""]}], "3"], "\[InvisibleSpace]", 
        SubscriptBox[
         StyleBox["\"K\"", Italic, StripOnInput -> False], "\"cd\""], 
        "\[ThinSpace]", 
        SuperscriptBox[
         StyleBox["\"h\"", Italic, StripOnInput -> False], "2"], 
        "\[NegativeMediumSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"rad\"", "2"]}], 
      "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom cubed luminous efficacy of monochromatic radiation of frequency 540 THz \
Planck constants squared per radian squared", 
      FractionBox[
       RowBox[{
         SuperscriptBox["\"Cesium133HyperfineSplittingFrequency\"", "3"], " ",
          "\"MonochromaticRadiation540THzLuminousEfficacy\"", " ", 
         SuperscriptBox["\"PlanckConstant\"", "2"]}], 
       SuperscriptBox["\"Radians\"", "2"]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"make-unit-simple\"\>", "\[Rule]", 
    TemplateBox[{"129", 
      RowBox[{"\"cd\"", "\[ThinSpace]", "\"J\""}], "candela joules", 
      RowBox[{"\"Candelas\"", " ", "\"Joules\""}]},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8724406181996393`*^9, 3.8724406364394865`*^9}, 
   3.8724407103545732`*^9, 3.8724422268628283`*^9, 3.8724427057285233`*^9, 
   3.8724428157514124`*^9, 3.8724428491423655`*^9, 3.8724429845820932`*^9, 
   3.872443020541495*^9, 3.872443102139372*^9, {3.872443197256884*^9, 
   3.8724432042043257`*^9}, 3.872443382713868*^9, {3.872443450267686*^9, 
   3.8724434940089684`*^9}},
 CellLabel->"Out[440]=",
 CellID->90860740,ExpressionUUID->"bca80380-9837-4778-a190-291f6997177c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SIBASEUNITS", "=", 
  RowBox[{"AssociationThread", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<time\>\"", ",", "\"\<length\>\"", ",", "\"\<mass\>\"", ",", 
      "\"\<electric-current\>\"", ",", "\"\<thermodynamic-temperature\>\"", 
      ",", "\"\<amount-of-substance\>\"", ",", "\"\<luminous-intensity\>\""}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Quantity", "[", "\"\<Seconds\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Meters\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Kilograms\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Amperes\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Kelvins\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Moles\>\"", "]"}], ",", 
      RowBox[{"Quantity", "[", "\"\<Candelas\>\"", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellID->355855191,ExpressionUUID->"0a6437fe-fdf6-4b5f-804d-8896ddb6b6f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", "\"\<Time\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872443793892417*^9, 3.8724437974757214`*^9}},
 CellLabel->"In[441]:=",
 CellID->285346410,ExpressionUUID->"e204d8bd-9430-47a3-b4ee-459a36b8a212"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TagBox[
    DynamicModuleBox[{Typeset`open = False}, 
     FrameBox[
      PaneSelectorBox[{False->GridBox[{
         {
          PaneBox[GridBox[{
             {
              StyleBox[
               StyleBox[
                AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                 BoxBaselineShift->-0.25,
                 BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                
                FontColor->RGBColor[
                 0.8745098039215686, 0.2784313725490196, 0.03137254901960784]],
               ShowStringCharacters->False,
               FontFamily->"Source Sans Pro Black",
               FontSize->0.6538461538461539 Inherited,
               FontWeight->"Heavy",
               PrivateFontOptions->{"OperatorSubstitution"->False}], 
              StyleBox[
               RowBox[{
                StyleBox["PhysicalQuantityData", "ResourceFunctionLabel"], 
                " "}],
               ShowAutoStyles->False,
               ShowStringCharacters->False,
               FontSize->Rational[12, 13] Inherited,
               FontColor->GrayLevel[0.1]]}
            },
            GridBoxSpacings->{"Columns" -> {{0.25}}}],
           Alignment->Left,
           BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
           BaselinePosition->Baseline,
           FrameMargins->{{3, 0}, {0, 0}}], 
          ItemBox[
           PaneBox[
            TogglerBox[Dynamic[Typeset`open], {True->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeCloser"],
              ImageSizeCache->{11., {2., 9.}}], False->
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "IconizeOpener"],
              ImageSizeCache->{11., {2., 9.}}]},
             Appearance->None,
             BaselinePosition->Baseline,
             ContentPadding->False,
             FrameMargins->0],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{1, 1}, {0, 0}}],
           Frame->{{
              RGBColor[
              0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
               0.5], False}, {False, False}}]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
       GridBox[{
         {GridBox[{
            {
             PaneBox[GridBox[{
                {
                 StyleBox[
                  StyleBox[
                   AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                   
                   FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                  ShowStringCharacters->False,
                  FontFamily->"Source Sans Pro Black",
                  FontSize->0.6538461538461539 Inherited,
                  FontWeight->"Heavy",
                  PrivateFontOptions->{"OperatorSubstitution"->False}], 
                 StyleBox[
                  RowBox[{
                   StyleBox["PhysicalQuantityData", "ResourceFunctionLabel"], 
                   " "}],
                  ShowAutoStyles->False,
                  ShowStringCharacters->False,
                  FontSize->Rational[12, 13] Inherited,
                  FontColor->GrayLevel[0.1]]}
               },
               GridBoxSpacings->{"Columns" -> {{0.25}}}],
              Alignment->Left,
              BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
              BaselinePosition->Baseline,
              FrameMargins->{{3, 0}, {0, 0}}], 
             ItemBox[
              PaneBox[
               TogglerBox[Dynamic[Typeset`open], {True->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeCloser"]], False->
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "FEBitmaps", "IconizeOpener"]]},
                Appearance->None,
                BaselinePosition->Baseline,
                ContentPadding->False,
                FrameMargins->0],
               Alignment->Left,
               BaselinePosition->Baseline,
               FrameMargins->{{1, 1}, {0, 0}}],
              Frame->{{
                 RGBColor[
                 0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                  0.5], False}, {False, False}}]}
           },
           BaselinePosition->{1, 1},
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           
           GridBoxItemSize->{
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
           GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
         {
          StyleBox[
           PaneBox[GridBox[{
              {
               RowBox[{
                TagBox["\<\"Version (latest): \"\>",
                 "IconizedLabel"], " ", 
                TagBox["\<\"1.0.0\"\>",
                 "IconizedItem"]}]},
              {
               TagBox[
                
                TemplateBox[{
                 "\"Documentation \[RightGuillemet]\"", 
                  "https://resources.wolframcloud.com/FunctionRepository/\
resources/687f105c-d3b3-44f2-86d5-a43d58aab913/"},
                 "HyperlinkURL"],
                "IconizedItem"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            Alignment->Left,
            BaselinePosition->Baseline,
            FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
           FontFamily->"Roboto",
           FontSize->11]}
        },
        BaselinePosition->{1, 1},
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
             GrayLevel[0.8]}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
       Typeset`open],
       BaselinePosition->Baseline,
       ImageSize->Automatic],
      Background->RGBColor[
       0.9686274509803922, 0.9764705882352941, 0.984313725490196],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 0}},
      FrameStyle->RGBColor[
       0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
      RoundingRadius->4]],
    {"FunctionResourceBox", 
     RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
     "PhysicalQuantityData"},
    TagBoxNote->"FunctionResourceBox"],
   ResourceFunction["PhysicalQuantityData"],
   Selectable->False], "[", "\<\"Time\"\>", "]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872443797766364*^9},
 CellLabel->"Out[441]=",
 CellID->465255422,ExpressionUUID->"5bb04e0d-4ccf-4892-90d3-df922d77356f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", 
  RowBox[{"\"\<Time\>\"", ",", "\"\<Dimensions\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872443793892417*^9, 3.872443819241783*^9}},
 CellLabel->"In[443]:=",
 CellID->457579202,ExpressionUUID->"2c1d0402-ae97-4f15-9ddd-df24efa49bac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.872443808638419*^9, 3.872443819592807*^9}},
 CellLabel->"Out[443]=",
 CellID->39347210,ExpressionUUID->"7cd2509c-b575-4c55-8977-f3a2beee6286"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "==", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<TimeUnit\>\"", ",", "1"}], "}"}], "}"}]}], "&"}], "]"}], 
  "[", 
  RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872443826486097*^9, 3.872443847680445*^9}},
 CellLabel->"In[444]:=",
 CellID->66415313,ExpressionUUID->"8ecfa191-429e-483f-9f3c-019000354269"],

Cell[BoxData["$Aborted"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872443909553711*^9},
 CellLabel->"Out[444]=",
 CellID->600295528,ExpressionUUID->"a42bdd6a-f29a-41b9-b057-6e786423bae9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PersistResourceFunction", "[", 
   RowBox[{"{", "\"\<MonitorProgress\>\"", "}"}], "]"}], ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872443913017101*^9, 3.8724439224974017`*^9}},
 CellLabel->"In[445]:=",
 CellID->708227665,ExpressionUUID->"6c2a7a73-4200-431a-9838-b8c5c23d95c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MonitorProgress", "[", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", "\"\<Dimensions\>\""}], "]"}], "==", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<TimeUnit\>\"", ",", "1"}], "}"}], "}"}]}], "&"}], "]"}], 
   "[", 
   RowBox[{"PhysicalQuantityData", "[", "]"}], "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724439238651557`*^9, 3.8724439281570015`*^9}, {
  3.872444057488792*^9, 3.8724440850475473`*^9}},
 CellLabel->"In[450]:=",
 CellID->868475530,ExpressionUUID->"b990cc64-4736-4981-b865-3655d0b26674"],

Cell[BoxData["$Aborted"], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.87244414694797*^9, 3.87244418581063*^9},
 CellLabel->"Out[450]=",
 CellID->73114477,ExpressionUUID->"e3f5c634-19a5-42c8-a332-f9f51e0ec0a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"PhysicalQuantityData", "[", "]"}], ",", "100"}], "]"}], ",", 
   "\"\<CanonicalUnit\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724441884834385`*^9, 3.872444203601334*^9}},
 CellLabel->"In[451]:=",
 CellID->2049300,ExpressionUUID->"8049a56a-9f85-4ff3-a90f-4dca28619f91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "6"]}], "meter second to the 6", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "6"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "3"]}], "meter second cubed", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "3"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", "\"s\""}], "meter second", 
     RowBox[{"\"Meters\"", " ", "\"Seconds\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "4"]}], "meter second to the fourth", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "4"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "2"]}], "meter second squared", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "2"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "5"]}], "meter second to the fifth", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "5"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degree", 
     "\"AngularDegrees\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"yr\"", "\[ThinSpace]", "\"W\"", "\[InvisibleSpace]", "\"/(\"", 
       "\[InvisibleSpace]", "\"kg\"", "\[ThinSpace]", 
       SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\")\""}], 
     "year watt per kilogram meter squared", 
     FractionBox[
      RowBox[{"\"Watts\"", " ", "\"Years\""}], 
      RowBox[{"\"Kilograms\"", " ", 
        SuperscriptBox["\"Meters\"", "2"]}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"kg of water\"", "\"/\"", 
       TemplateBox[{
         TemplateBox[{"\"m\"", "3"}, "Superscript", SyntaxForm -> 
          SuperscriptBox], "\" of moist air\""}, "RowDefault"]}], 
     "kilogram of water per cubic meter of moist air", 
     "\"KilogramsOfWaterPerCubicMeterOfMoistAir\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"second\""}], 
     "reciprocal second", 
     FractionBox["1", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"second\""}], 
     "reciprocal second", 
     FractionBox["1", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"second\""}], 
     "reciprocal second", 
     FractionBox["1", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "7"]}], "meter second to the 7", 
     RowBox[{"\"Meters\"", " ", 
       SuperscriptBox["\"Seconds\"", "7"]}]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Gy\"", "gray", "\"Grays\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"Gy\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "gray per second", 
     FractionBox["\"Grays\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"photons\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"s\"", 
       "\[InvisibleSpace]", "\")\""}], "photon per meter squared second", 
     FractionBox["\"Photons\"", 
      RowBox[{
        SuperscriptBox["\"Meters\"", "2"], " ", "\"Seconds\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
       RowBox[{"\"per \"", "\[InvisibleSpace]", "\"kelvin difference\""}]}], 
     "per meter kelvin difference", 
     FractionBox["1", 
      RowBox[{"\"KelvinsDifference\"", " ", "\"Meters\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"s\"", "2"]}], "meter per second squared", 
     FractionBox["\"Meters\"", 
      SuperscriptBox["\"Seconds\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"m\"", 
       "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
     "meter per meter second squared", 
     FractionBox["\"Meters\"", 
      RowBox[{"\"Meters\"", " ", 
        SuperscriptBox["\"Seconds\"", "2"]}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/(\"", 
       "\[InvisibleSpace]", "\"Hz\"", "\[ThinSpace]", 
       SuperscriptBox["\"s\"", "4"], "\[InvisibleSpace]", "\")\""}], 
     "meter squared per hertz second to the fourth", 
     FractionBox[
      SuperscriptBox["\"Meters\"", "2"], 
      RowBox[{"\"Hertz\"", " ", 
        SuperscriptBox["\"Seconds\"", "4"]}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", 
       SuperscriptBox["\"meter\"", "3"]}], "per meter cubed", 
     FractionBox["1", 
      SuperscriptBox["\"Meters\"", "3"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"meter\""}], 
     "reciprocal meter", 
     FractionBox["1", "\"Meters\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"s\"", "\[ThinSpace]", "\"Pa\"", "\[InvisibleSpace]", "\"/\"", 
       "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "3"]}], "second pascal per meter cubed", 
     FractionBox[
      RowBox[{"\"Pascals\"", " ", "\"Seconds\""}], 
      SuperscriptBox["\"Meters\"", "3"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"s\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
       "\[InvisibleSpace]", "\"kg\""}], "second cubed per kilogram", 
     FractionBox[
      SuperscriptBox["\"Seconds\"", "3"], "\"Kilograms\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "2"]}], "joule per meter squared", 
     FractionBox["\"Joules\"", 
      SuperscriptBox["\"Meters\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"s\"", "\[ThinSpace]", "\"J\""}], "second joule", 
     RowBox[{"\"Joules\"", " ", "\"Seconds\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"mol\""}],
      "joule per mole", 
     FractionBox["\"Joules\"", "\"Moles\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"h\"", "\[ThinSpace]", "\"W\""}], "hour watt", 
     RowBox[{"\"Hours\"", " ", "\"Watts\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meter per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"/\"", "\[InvisibleSpace]", "\"Pa\""}], "reciprocal pascal", 
     FractionBox["1", "\"Pascals\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"K\""}], 
     "joule per kelvin difference", 
     FractionBox["\"Joules\"", "\"KelvinsDifference\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"K\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"m\""}], 
     "kelvin difference per meter", 
     FractionBox["\"KelvinsDifference\"", "\"Meters\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"/\"", "\[InvisibleSpace]", "\"Pa\""}], "reciprocal pascal", 
     FractionBox["1", "\"Pascals\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"mol\"", 
       "\[ThinSpace]", "\"K\"", "\[InvisibleSpace]", "\")\""}], 
     "joule per mole kelvin difference", 
     FractionBox["\"Joules\"", 
      RowBox[{"\"KelvinsDifference\"", " ", "\"Moles\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"kg\"", 
       "\[ThinSpace]", "\"K\"", "\[InvisibleSpace]", "\")\""}], 
     "joule per kilogram kelvin difference", 
     FractionBox["\"Joules\"", 
      RowBox[{"\"KelvinsDifference\"", " ", "\"Kilograms\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"yr\"", "year", "\"Years\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "2"]}], "kilogram per meter squared", 
     FractionBox["\"Kilograms\"", 
      SuperscriptBox["\"Meters\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"kg\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"yr\"", 
       "\[InvisibleSpace]", "\")\""}], "kilogram per meter squared year", 
     FractionBox["\"Kilograms\"", 
      RowBox[{
        SuperscriptBox["\"Meters\"", "2"], " ", "\"Years\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"per \"", "\[InvisibleSpace]", "\"hour\""}], "reciprocal hour", 
     FractionBox["1", "\"Hours\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
       SuperscriptBox["\"m\"", "3"], "\[NegativeMediumSpace]", "\"/(\"", 
       "\[InvisibleSpace]", 
       SuperscriptBox["\"m\"", "2"], "\[InvisibleSpace]", "\"min\"", 
       "\[InvisibleSpace]", "\")\""}], "meter cubed per meter squared minute", 
     FractionBox[
      SuperscriptBox["\"Meters\"", "3"], 
      RowBox[{
        SuperscriptBox["\"Meters\"", "2"], " ", "\"Minutes\""}]]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
     "meter per second", 
     FractionBox["\"Meters\"", "\"Seconds\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\[InvisibleSpace]", "\" vol%\""}], "volume percent", 
     "\"VolumePercent\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"eV\"", "electronvolt", "\"Electronvolts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"m\"", "meter", "\"Meters\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"mol\"", "mole", "\"Moles\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "mole per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\[InvisibleSpace]", "\" mol%\""}], "mole percent", 
     "\"MolePercent\""},
    "QuantityPostfix"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"s\"", "\[ThinSpace]", "\"lx\""}], "second lux", 
     RowBox[{"\"Lux\"", " ", "\"Seconds\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"mol\""}], "mole per mole", 
     FractionBox["\"Moles\"", "\"Moles\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"U\"", "unity", "\"Unities\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"A\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"Hz\""}], 
     "ampere per hertz", 
     FractionBox["\"Amperes\"", "\"Hertz\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"eV\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"pF\""}],
      "electronvolt per picofarad", 
     FractionBox["\"Electronvolts\"", "\"Picofarads\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{
      "\"rad\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"m\""}],
      "radian per meter", 
     FractionBox["\"Radians\"", "\"Meters\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"s\"", "\[ThinSpace]", "\"rad\""}], "second radian", 
     RowBox[{"\"Radians\"", " ", "\"Seconds\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.87244420495922*^9},
 CellLabel->"Out[451]=",
 CellID->422377654,ExpressionUUID->"891c3f90-1901-4f8a-9b19-c59bac2555f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"PhysicalQuantityData", "[", "]"}], ",", "100"}], "]"}], ",", 
   "\"\<Dimensions\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724441884834385`*^9, 3.872444236984618*^9}},
 CellLabel->"In[453]:=",
 CellID->250910451,ExpressionUUID->"c4c46a0c-dad8-43f2-8b5a-3ce79a071569"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "4"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "2"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "7"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"PhotonUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureDifferenceUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "2"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", 
      RowBox[{"-", "3"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AmountUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureDifferenceUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureDifferenceUnit\"\>", ",", "1"}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AmountUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureDifferenceUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureDifferenceUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TimeUnit\"\>", ",", 
      RowBox[{"-", "1"}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AmountUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "3"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AngleUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LuminousIntensityUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"MassUnit\"\>", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "6"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"LengthUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.87244423245143*^9},
 CellLabel->"Out[453]=",
 CellID->109535,ExpressionUUID->"d0aa4cab-f4f5-436e-818f-c921b011d54a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityValue", "[", 
  RowBox[{
   RowBox[{"PhysicalQuantityData", "[", "]"}], ",", "\"\<Dimensions\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724441884834385`*^9, 3.872444249626164*^9}},
 CellLabel->"In[454]:=",
 CellID->897142898,ExpressionUUID->"24d8aa0f-e645-4350-a68b-21197d9213b0"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "6"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "3"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "1"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "4"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "2"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", "5"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"\"LengthUnit\"", ",", "1"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"\"AngleUnit\"", ",", "1"}], "}"}], "}"}], ",", 
         TemplateBox[{"3018"}, "OutputSizeLimit`Skeleton"], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"\"AngleUnit\"", ",", "1"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"\"AngleUnit\"", ",", "1"}], "}"}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", "2"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", 
                 RowBox[{"-", "2"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"\"AmountUnit\"", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"LengthUnit\"", ",", 
                 RowBox[{"-", "3"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{"\"TimeUnit\"", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{"{", 
             RowBox[{"\"MassUnit\"", ",", "1"}], "}"}], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 454, "sessionID" -> 19481666911360551965, 
   "byteCount" -> 812744, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444256132301*^9},
 CellLabel->"Out[454]=",
 CellID->37640233,ExpressionUUID->"e2b2cccc-6dca-40a8-8d7d-4167484cc871"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"EntityValue", "[", 
    RowBox[{
     RowBox[{"PhysicalQuantityData", "[", "]"}], ",", "\"\<Dimensions\>\""}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\"\<TimeUnit\>\"", ",", "1"}], "}"}], "}"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724442632153597`*^9, 3.872444274428754*^9}},
 CellLabel->"In[455]:=",
 CellID->892857063,ExpressionUUID->"b90c87c5-421e-477c-91de-bd6a85ed4534"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "66", "}"}], ",", 
   RowBox[{"{", "348", "}"}], ",", 
   RowBox[{"{", "355", "}"}], ",", 
   RowBox[{"{", "384", "}"}], ",", 
   RowBox[{"{", "463", "}"}], ",", 
   RowBox[{"{", "534", "}"}], ",", 
   RowBox[{"{", "583", "}"}], ",", 
   RowBox[{"{", "618", "}"}], ",", 
   RowBox[{"{", "682", "}"}], ",", 
   RowBox[{"{", "908", "}"}], ",", 
   RowBox[{"{", "1087", "}"}], ",", 
   RowBox[{"{", "1159", "}"}], ",", 
   RowBox[{"{", "1402", "}"}], ",", 
   RowBox[{"{", "1404", "}"}], ",", 
   RowBox[{"{", "1420", "}"}], ",", 
   RowBox[{"{", "1452", "}"}], ",", 
   RowBox[{"{", "1618", "}"}], ",", 
   RowBox[{"{", "1815", "}"}], ",", 
   RowBox[{"{", "1825", "}"}], ",", 
   RowBox[{"{", "1911", "}"}], ",", 
   RowBox[{"{", "1917", "}"}], ",", 
   RowBox[{"{", "1970", "}"}], ",", 
   RowBox[{"{", "2049", "}"}], ",", 
   RowBox[{"{", "2063", "}"}], ",", 
   RowBox[{"{", "2088", "}"}], ",", 
   RowBox[{"{", "2298", "}"}], ",", 
   RowBox[{"{", "2314", "}"}], ",", 
   RowBox[{"{", "2355", "}"}], ",", 
   RowBox[{"{", "2357", "}"}], ",", 
   RowBox[{"{", "2474", "}"}], ",", 
   RowBox[{"{", "2508", "}"}], ",", 
   RowBox[{"{", "2510", "}"}], ",", 
   RowBox[{"{", "2722", "}"}], ",", 
   RowBox[{"{", "2752", "}"}], ",", 
   RowBox[{"{", "2755", "}"}], ",", 
   RowBox[{"{", "2756", "}"}], ",", 
   RowBox[{"{", "2773", "}"}], ",", 
   RowBox[{"{", "2853", "}"}], ",", 
   RowBox[{"{", "2866", "}"}], ",", 
   RowBox[{"{", "3016", "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444281253477*^9},
 CellLabel->"Out[455]=",
 CellID->399402186,ExpressionUUID->"6d6d8e59-a3cd-4546-b9df-a4d542e68af0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Extract", "[", 
  RowBox[{
   RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
   RowBox[{"Position", "[", 
    RowBox[{
     RowBox[{"EntityValue", "[", 
      RowBox[{
       RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
       "\"\<Dimensions\>\""}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\"\<TimeUnit\>\"", ",", "1"}], "}"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724442850275993`*^9, 3.8724442920761957`*^9}},
 CellLabel->"In[456]:=",
 CellID->83288195,ExpressionUUID->"962ffe15-9cdf-443f-8125-055f447a68a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"age\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"capacitor insulation resistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"CapacitorInsulationResistance\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CapacitorInsulationResistance\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"carrier lifetime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CarrierLifetime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CarrierLifetime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"characteristic time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicTime\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"condensed matter relaxation time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"CondensedMatterRelaxationTime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterRelaxationTime\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"data transfer time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DataTransferTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DataTransferTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"diffusion permeability\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionPermeability\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionPermeability\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"downtime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Downtime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Downtime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"elapsed real time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElapsedRealTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElapsedRealTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"energy per power\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyPerPower\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyPerPower\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"inertia constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GeneratorInertiaConstant\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeneratorInertiaConstant\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"half\[Hyphen]life\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfLife\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfLife\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kolmogorov time scale\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovTimeScale\""}], 
       "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"KolmogorovTimeScale\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"lag\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Lag\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Lag\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"latency\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Latency\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Latency\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"lifetime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Lifetime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Lifetime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"magnetic time constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MagneticTimeConstant\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MagneticTimeConstant\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"moving time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MovingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MovingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"negative carrier lifetime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"NegativeCarrierLifetime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"NegativeCarrierLifetime\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"orbital period\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalPeriod\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalPeriod\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"oscillation period\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OscillationPeriod\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"OscillationPeriod\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"period\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Period\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Period\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"ping time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poincar\[EAcute] recurrence time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PoincareRecurrenceTime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PoincareRecurrenceTime\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"positive carrier lifetime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PositiveCarrierLifetime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PositiveCarrierLifetime\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relaxation time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RelaxationTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelaxationTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"reverberation time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ReverberationTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ReverberationTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"rotation period\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RotationPeriod\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RotationPeriod\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"round\[Hyphen]trip delay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RoundTripDelay\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoundTripDelay\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"sound period\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundPeriod\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundPeriod\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"specific hydraulic conductivity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"SpecificHydraulicConductivity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpecificHydraulicConductivity\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"specific impulse by weight\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificImpulseByWeight\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpecificImpulseByWeight\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal time constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThermalTimeConstant\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalTimeConstant\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeConstant\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeConstant\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeDifference\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeDifference\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time shift\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeShift\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeShift\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"uptime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"vapor permeability\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeability\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPermeability\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"working time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8724442988917837`*^9},
 CellLabel->"Out[456]=",
 CellID->176154523,ExpressionUUID->"afd745f2-6904-4cd2-8d60-a4fe0444e0e7"]
}, Open  ]],

Cell[BoxData["Quit"], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724443161413307`*^9, 3.872444316788227*^9}},
 CellLabel->"In[457]:=",
 CellID->257200277,ExpressionUUID->"3e8c905e-a63c-4f4d-9dc1-fcda14e6fa88"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Extract", "[", 
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
        "\"\<Dimensions\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<LengthUnit\>\"", ",", "1"}], "}"}], "}"}]}], "]"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872444336500931*^9, 3.872444343139155*^9}},
 CellLabel->"In[3]:=",
 CellID->582190880,ExpressionUUID->"8384fe09-e99e-4ec3-b79b-e01388476415"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.8899954`", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"absolute altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"absolute elongation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular diameter distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameterDistance\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"apoapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApoapsisDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AtomicPhysicsDiffusionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"attenuation length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"authalic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AuthalicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"base radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bend radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bin width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bond length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breadth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breaking length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BreakingLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Burgers vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BurgersVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliper\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinate\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate x\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateX\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateX\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate y\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateY\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateY\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate z\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateZ\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateZ\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicRadius\""}], 
         "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"charge radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumference\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumference\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil effective length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilEffectiveLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving transverse distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ComovingTransverseDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingTransverseDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Compton wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComptonWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"condensed matter physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"covalent radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CovalentRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cutoff wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DeBroglieWavelength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"density altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of field\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of focus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diagonal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiagonalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.3 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.4 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Displacement\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Displacement\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DisplacementVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DisplacementVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Distance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Distance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"dot pitch\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DotPitch\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DotPitch\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"driving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DrivingDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DrivingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Einstein radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electromagnetic radiation wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ElectromagneticRadiationWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectromagneticRadiationWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electron mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Elevation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Elevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation gain\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationGain\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationGain\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation loss\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationLoss\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationLoss\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"energy per force\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyPerForce\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyPerForce\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equatorial radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EquatorialRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquatorialRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equilibrium position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquilibriumPositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquilibriumPositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equivalent air layer thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquivalentAirLayerThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquivalentAirLayerThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Euclidean distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EuclideanDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EuclideanDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fabric length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fiber\[Hyphen]optic span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FiberOpticSpan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FiberOpticSpan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector1\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector1\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"second fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector2\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector2\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"third fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector3\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector3\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"grating period\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GratingPeriod\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"GratingPeriod\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gyroradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Gyroradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Gyroradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half\[Hyphen]value thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfValueThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HalfValueThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Height\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Height\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hill radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HillRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HillRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicDiameter\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HydraulicDiameter\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic head\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicHead\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicHead\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"image distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"indicated altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IndicatedAltitude\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IndicatedAltitude\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinitesimal arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalArcLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalArcLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Inradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Inradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"ionic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IonicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Jeans length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"JeansLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"JeansLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Kolmogorov length scale\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovLengthScale\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"KolmogorovLengthScale\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameter\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeParameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter a\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterA\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterA\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter b\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterB\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterB\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter c\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterC\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterC\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice plane spacing\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticePlaneSpacing\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticePlaneSpacing\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"light wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear eccentricity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LinearEccentricity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearEccentricity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"line length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LineLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LineLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"London penetration depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LondonPenetrationDepth\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LondonPenetrationDepth\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"luminosity distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminosityDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LuminosityDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"maximum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MaximumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MaximumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanFreePath\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanFreePath\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"meridional radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"MeridionalRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeridionalRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"metallic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MetallicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MetallicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"midradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Midradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Midradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"minimum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MinimumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MinimumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Moli\[EGrave]re radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MoliereRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MoliereRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"negative carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NegativeCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NegativeCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear collision length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearCollisionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearCollisionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear interaction length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NuclearInteractionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearInteractionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NuclearRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"object distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"orbital radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticlePositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticlePositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"path length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PathLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PathLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"periapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PeriapsisDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PeriapsisDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Perimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Perimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"phonon mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PhononMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PhononMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pivotal altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PivotalAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PivotalAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"plasma triangularity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTriangularity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTriangularity\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"position\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Position\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Position\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"positive carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PositiveCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositiveCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"precipitation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Precipitation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Precipitation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pressure altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PressureAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PressureAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"proper distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ProperDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ProperDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"quarter wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarterWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarterWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radial distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadialDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadialDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of gyration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfGyration\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadiusOfGyration\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rainfall\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Rainfall\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Rainfall\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rectifying radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RectifyingRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RectifyingRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"group velocity dispersion of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"RefractiveIndexGroupVelocityDispersion\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGroupVelocityDispersion\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scale height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScaleHeight\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScaleHeight\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Schwarzschild radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SchwarzschildRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SchwarzschildRadius\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]major axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMajorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMajorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]minor axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMinorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMinorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]principal axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiPrincipalAxisLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiPrincipalAxisLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound particle displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SoundParticleDisplacement\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SoundParticleDisplacement\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Span\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Span\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"strain sensitivity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StrainSensitivity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"superconductor coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SuperconductingCoherenceLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalCharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalDeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDeBroglieWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"track gauge\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"true altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"typographic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TypographicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"van der Waals radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsRadius\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vehicle distance traveled\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDistanceTraveled\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"viscous characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ViscousCharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume spread rate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeSpreadRate\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volumetric radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave amplitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAmplitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveCoherenceLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wetted perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wingspan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444357222807*^9},
 CellLabel->"Out[3]=",
 CellID->789810440,ExpressionUUID->"22a7674e-cd2a-4d88-8261-3bdcb922d764"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Extract", "[", 
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{
        RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
        "\"\<Dimensions\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"\"\<LengthUnit\>\"", ",", "_"}], "}"}], "}"}]}], "]"}]}], 
   "]"}], "//", "AbsoluteTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872444336500931*^9, 3.872444343139155*^9}, {
  3.8724443759663277`*^9, 3.8724443800995684`*^9}},
 CellLabel->"In[4]:=",
 CellID->722700277,ExpressionUUID->"4529a504-54f5-487b-be7c-81b37a18ef98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.2434789`", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"absolute altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"absolute elongation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"acceptor density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"acoustic attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"AcousticAttenutationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular diameter distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameterDistance\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular reciprocal lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AngularReciprocalLatticeVector\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"anharmonicity constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AnharmonicityConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"apoapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApoapsisDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area moment of inertia x\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaX\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area moment of inertia y\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaY\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area per volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"assignable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AssignableArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AtomicPhysicsDiffusionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"attenuation length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"authalic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AuthalicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"axial area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AxialAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AxialAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"BackwardScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"base radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bend radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bin width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bond length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breadth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breaking length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BreakingLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"broad\[Hyphen]beam attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BroadBeamAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BroadBeamAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Burgers vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BurgersVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliper\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"capacity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Capacity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Capacity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinate\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate x\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateX\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateX\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate y\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateY\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateY\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate z\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateZ\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateZ\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicRadius\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"charge radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"chemistry electron density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ChemistryElectronDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemistryElectronDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circulation area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CirculationArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CirculationArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumference\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumference\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil core factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilCoreFactor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilCoreFactor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil effective area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil effective length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilEffectiveLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"common area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CommonArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CommonArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving transverse distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ComovingTransverseDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingTransverseDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Compton wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComptonWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"condensed matter physics angular wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CondensedMatterPhysicsAngularWavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsAngularWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"condensed matter physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"contact\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"cosmological vacuum energy density length\[Hyphen]based \
proportionality factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\
\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"covalent radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CovalentRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"critical volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cross sectional area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CrossSectionalArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CrossSectionalArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Curvature\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Curvature\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cutoff wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DeBroglieWavelength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"decadic absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DecadicLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DecadicLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"density altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of field\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of focus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diagonal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiagonalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.3 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.4 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"differential radar reflectivity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"DifferentialRadarReflectivity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialRadarReflectivity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"directional attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DirectionalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DirectionalAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"dispersion measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DispersionMeasure\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DispersionMeasure\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Displacement\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Displacement\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DisplacementVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DisplacementVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Distance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Distance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"donor density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DonorDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DonorDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"dot pitch\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DotPitch\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DotPitch\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"driving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DrivingDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DrivingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Einstein radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Einstein tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elastic cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElasticCrossSection\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elastic section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticSectionModulus\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElasticSectionModulus\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume polarizability\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ElectricVolumePolarizability\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectricVolumePolarizability\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electromagnetic radiation wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ElectromagneticRadiationWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectromagneticRadiationWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electronic term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronicTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectronicTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electron mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Elevation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Elevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation gain\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationGain\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationGain\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation loss\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationLoss\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationLoss\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"emission measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EmissionMeasure\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EmissionMeasure\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"energy per force\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyPerForce\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyPerForce\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"engine displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EngineDisplacement\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EngineDisplacement\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equatorial radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EquatorialRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquatorialRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equilibrium position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquilibriumPositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquilibriumPositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equivalent air layer thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquivalentAirLayerThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquivalentAirLayerThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equivalent sound absorption area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquivalentSoundAbsorptionArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquivalentSoundAbsorptionArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Euclidean distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EuclideanDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EuclideanDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fabric area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fabric length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Fermi angular wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiAngularWavenumber\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FermiAngularWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fiber\[Hyphen]optic span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FiberOpticSpan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FiberOpticSpan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume of food or beverage\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FoodVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FoodVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ForwardLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ForwardLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ForwardScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fuel consumption\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelConsumption\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelConsumption\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fuel economy\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelEconomy\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelEconomy\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector1\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector1\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"second fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector2\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector2\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"third fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector3\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector3\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fundamental reciprocal lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector1\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector1\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"second reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector2\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector2\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"third reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector3\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector3\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"geometric surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GeometricSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeometricSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"granular potential\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GranularPotential\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GranularPotential\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"grating period\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GratingPeriod\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"GratingPeriod\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"GrossFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross leasable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossLeasableArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GrossLeasableArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gyroradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Gyroradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Gyroradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half\[Hyphen]value thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfValueThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HalfValueThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Height\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Height\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hill radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HillRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HillRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hole density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HoleDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HoleDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicDiameter\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HydraulicDiameter\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic head\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicHead\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicHead\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic permeability\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicPermeability\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicPermeability\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"image distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"image vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageVergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageVergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"indicated altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IndicatedAltitude\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IndicatedAltitude\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinitesimal arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalArcLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalArcLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinitesimal surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"InfinitesimalSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Inradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Inradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"integrated beam luminosity for particle accelerators\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IntegratedLuminosity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IntegratedLuminosity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"intrinsic carrier density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IntrinsicCarrierDensity\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IntrinsicCarrierDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"ionic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IonicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Jeans length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"JeansLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"JeansLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Kolmogorov length scale\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovLengthScale\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"KolmogorovLengthScale\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lateral surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LateralSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LateralSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameter\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeParameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter a\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterA\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterA\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter b\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterB\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterB\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter c\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterC\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterC\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice plane spacing\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticePlaneSpacing\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticePlaneSpacing\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"leasable floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LeasableFloorArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LeasableFloorArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length per area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length per volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"light wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"light wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavenumber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"LinearAbsorptionCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"LinearAttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear eccentricity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LinearEccentricity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearEccentricity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"line length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LineLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LineLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"London penetration depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LondonPenetrationDepth\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LondonPenetrationDepth\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"luminosity distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminosityDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LuminosityDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"maximum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MaximumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MaximumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanFreePath\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanFreePath\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mechanical area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MechanicalArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MechanicalArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"meridional radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"MeridionalRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeridionalRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"metallic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MetallicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MetallicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"midradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Midradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Midradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"minimum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MinimumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MinimumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"molecular concentration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularConcentration\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularConcentration\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"molecular number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularNumberDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularNumberDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Moli\[EGrave]re radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MoliereRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MoliereRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Napierian absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"NapierianLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NapierianLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"negative carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NegativeCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NegativeCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"net floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NetFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"net leasable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NetLeasableArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetLeasableArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear collision length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearCollisionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearCollisionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear interaction length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NuclearInteractionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearInteractionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear quadrupole moment\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearQuadrupoleMoment\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearQuadrupoleMoment\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NuclearRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NumberDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NumberDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"object distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"object vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectVergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectVergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"optical power\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"OpticalPower\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"OpticalPower\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"orbital radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle concentration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleConcentration\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ParticleConcentration\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleNumberDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ParticleNumberDensity\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticlePositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticlePositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"path length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PathLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PathLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"percent gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PercentGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PercentGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"periapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PeriapsisDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PeriapsisDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Perimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Perimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"phonon mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PhononMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PhononMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"photo absorption\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PhotoAbsorption\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhotoAbsorption\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pivotal altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PivotalAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PivotalAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"planar area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PlanarAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PlanarAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"plasma triangularity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTriangularity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTriangularity\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"plastic section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasticSectionModulus\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasticSectionModulus\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PolarAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"position\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Position\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Position\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"positive carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PositiveCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositiveCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"precipitation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Precipitation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Precipitation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pressure altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PressureAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PressureAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"Schr\[ODoubleDot]dinger quantum\[Hyphen]mechanical probability \
density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ProbabilityDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProbabilityDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"product area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ProductAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProductAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"proper distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ProperDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ProperDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"quadratic spatial gradient of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"QuadraticRefractiveIndexGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticRefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"quarter wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarterWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarterWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radar reflectivity factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadarReflectivityFactor\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadarReflectivityFactor\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radial distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadialDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadialDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of gyration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfGyration\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadiusOfGyration\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rainfall\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Rainfall\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Rainfall\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"real surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RealSurfaceArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RealSurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rectifying radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RectifyingRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RectifyingRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"reduction of area at fracture\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ReductionOfAreaAtFracture\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReductionOfAreaAtFracture\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spatial gradient of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RefractiveIndexGradient\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"group velocity dispersion of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"RefractiveIndexGroupVelocityDispersion\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGroupVelocityDispersion\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Ricci tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RicciTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RicciTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Riemann tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RiemannTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RiemannTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rotational term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RotationalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RotationalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scale height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScaleHeight\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScaleHeight\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringCoefficient\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ScatteringCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering loss\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLoss\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLoss\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Schwarzschild radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SchwarzschildRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SchwarzschildRadius\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SectionModulus\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SectionModulus\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sellmeier coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SellmeierCoefficient\""}], 
         "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SellmeierCoefficient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]major axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMajorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMajorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]minor axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMinorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMinorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]principal axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiPrincipalAxisLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiPrincipalAxisLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound particle displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SoundParticleDisplacement\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SoundParticleDisplacement\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Span\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Span\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectral bandwidth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralBandwidth\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralBandwidth\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"special directional attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"SpectralDirectionalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralDirectionalAttenuationCoefficient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectral hemispherical attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"SpectralHemisphericalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralHemisphericalAttenuationCoefficient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectroscopic term value\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectroscopicTermValue\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicTermValue\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectroscopic wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectroscopicWavenumber\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"strain sensitivity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StrainSensitivity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"struck measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"StruckMeasure\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"StruckMeasure\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"superconductor coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SuperconductingCoherenceLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tare area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TareArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tensile stiffness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStiffness\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TensileStiffness\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalCharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalDeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDeBroglieWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tonnage\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Tonnage\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tonnage\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"torsional constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionalConstant\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"TotalScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total scattering cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"TotalScatteringCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalSurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first Townsend coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TownsendCoefficient\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"track gauge\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"transformer area product\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TransformerAreaProduct\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"transformer core geometry coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"true altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"typographic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TypographicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"van der Waals radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsRadius\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vehicle distance traveled\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDistanceTraveled\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vibrational constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalConstant\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vibrational term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"viscous characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ViscousCharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"VolumeScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume spread rate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeSpreadRate\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volumetric radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volumic total cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"VolumicTotalCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumicTotalCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"warping constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave amplitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAmplitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"WaveAttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveCoherenceLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"1\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"2\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"3\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"4\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wetted perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wing area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wingspan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8724443873575387`*^9},
 CellLabel->"Out[4]=",
 CellID->234217406,ExpressionUUID->"541cf24f-e2fd-4787-837e-01ff38774f09"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{
    RowBox[{"Extract", "[", 
     RowBox[{
      RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"EntityValue", "[", 
         RowBox[{
          RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
          "\"\<Dimensions\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<LengthUnit\>\"", ",", "_"}], "}"}], "}"}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", "\"\<Dimensions\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}]}], "]"}], "//", 
  "AbsoluteTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.87244439776834*^9, 3.8724444282020826`*^9}},
 CellLabel->"In[5]:=",
 CellID->14364688,ExpressionUUID->"c08041ae-3abf-4108-95c0-283ceccffb86"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.8195789`", ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{"\"emission measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EmissionMeasure\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EmissionMeasure\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"contact\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"acceptor density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"chemistry electron density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ChemistryElectronDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ChemistryElectronDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"donor density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DonorDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DonorDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hole density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HoleDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HoleDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"intrinsic carrier density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IntrinsicCarrierDensity\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IntrinsicCarrierDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"molecular concentration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularConcentration\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularConcentration\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"molecular number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularNumberDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularNumberDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NumberDensity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NumberDensity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle concentration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleConcentration\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ParticleConcentration\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle number density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleNumberDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ParticleNumberDensity\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"Schr\[ODoubleDot]dinger quantum\[Hyphen]mechanical probability \
density\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ProbabilityDensity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProbabilityDensity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"cosmological vacuum energy density length\[Hyphen]based \
proportionality factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\
\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"dispersion measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DispersionMeasure\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DispersionMeasure\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Einstein tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fuel economy\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelEconomy\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelEconomy\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"integrated beam luminosity for particle accelerators\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IntegratedLuminosity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IntegratedLuminosity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length per volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"quadratic spatial gradient of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"QuadraticRefractiveIndexGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticRefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Ricci tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RicciTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RicciTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Riemann tensor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RiemannTensor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RiemannTensor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Sellmeier coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SellmeierCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SellmeierCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"4\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"3\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"acoustic attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"AcousticAttenutationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular reciprocal lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AngularReciprocalLatticeVector\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"anharmonicity constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AnharmonicityConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area per volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"backward scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"BackwardScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"broad\[Hyphen]beam attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"BroadBeamAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BroadBeamAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil core factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilCoreFactor\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilCoreFactor\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"condensed matter physics angular wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CondensedMatterPhysicsAngularWavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsAngularWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Curvature\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Curvature\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"decadic absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DecadicLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DecadicLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"differential radar reflectivity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"DifferentialRadarReflectivity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DifferentialRadarReflectivity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"directional attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DirectionalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DirectionalAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electronic term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronicTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectronicTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Fermi angular wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiAngularWavenumber\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FermiAngularWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ForwardLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ForwardLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"forward scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ForwardScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fundamental reciprocal lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector1\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector1\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"second reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector2\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector2\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"third reciprocal fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"FundamentalReciprocalLatticeVector3\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector3\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"image vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageVergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageVergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inverse length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length per area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"light wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavenumber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"LinearAbsorptionCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"LinearAttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Napierian absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"NapierianLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NapierianLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"object vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectVergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectVergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"optical power\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"OpticalPower\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"OpticalPower\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"percent gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PercentGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PercentGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"photo absorption\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PhotoAbsorption\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhotoAbsorption\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spatial gradient of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RefractiveIndexGradient\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rotational term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RotationalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RotationalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringCoefficient\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering loss\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLoss\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLoss\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"special directional attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"SpectralDirectionalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralDirectionalAttenuationCoefficient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectral hemispherical attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"SpectralHemisphericalAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralHemisphericalAttenuationCoefficient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectroscopic term value\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectroscopicTermValue\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicTermValue\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectroscopic wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectroscopicWavenumber\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicWavenumber\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tensile stiffness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStiffness\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TensileStiffness\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total absorption coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total linear attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"TotalScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first Townsend coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TownsendCoefficient\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vergence\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vibrational constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalConstant\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vibrational term\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume scattering coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"VolumeScatteringCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volumic total cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"VolumicTotalCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumicTotalCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave attenuation coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"WaveAttenuationCoefficient\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"2\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wavenumber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{
      "\"1\[Hyphen]dimensional bound state position space wave function\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"absolute altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"absolute elongation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular diameter distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameterDistance\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"angular wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"apoapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApoapsisDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AtomicPhysicsDiffusionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"atomic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"attenuation length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"authalic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AuthalicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"base radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bend radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bin width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"bond length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breadth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"breaking length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BreakingLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Burgers vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"BurgersVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliber\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"caliper\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinate\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate x\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateX\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateX\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate y\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateY\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateY\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Cartesian coordinate z\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateZ\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinateZ\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"characteristic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicRadius\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"charge radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumference\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumference\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circumradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil effective length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilEffectiveLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ComovingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"comoving transverse distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ComovingTransverseDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingTransverseDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Compton wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComptonWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"condensed matter physics diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"covalent radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CovalentRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cutoff wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DeBroglieWavelength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"density altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of field\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"depth of focus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diagonal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiagonalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.3 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (1.4 meters above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Displacement\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Displacement\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"displacement vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DisplacementVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DisplacementVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Distance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Distance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"dot pitch\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DotPitch\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DotPitch\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"driving distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"DrivingDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DrivingDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Einstein radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electromagnetic radiation wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"ElectromagneticRadiationWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectromagneticRadiationWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"electron mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Elevation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Elevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation gain\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationGain\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationGain\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elevation loss\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationLoss\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationLoss\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"energy per force\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyPerForce\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyPerForce\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equatorial radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EquatorialRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquatorialRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equilibrium position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquilibriumPositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquilibriumPositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equivalent air layer thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquivalentAirLayerThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquivalentAirLayerThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Euclidean distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EuclideanDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EuclideanDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fabric length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fiber\[Hyphen]optic span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FiberOpticSpan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FiberOpticSpan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"focal length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"first fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector1\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector1\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"second fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector2\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector2\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"third fundamental lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"FundamentalLatticeVector3\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector3\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"grating period\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GratingPeriod\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"GratingPeriod\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gyroradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Gyroradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Gyroradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half\[Hyphen]value thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfValueThickness\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HalfValueThickness\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"half wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Height\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Height\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Hill radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HillRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HillRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic diameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicDiameter\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HydraulicDiameter\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic head\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicHead\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicHead\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"image distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"indicated altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IndicatedAltitude\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IndicatedAltitude\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinitesimal arc length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalArcLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalArcLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"inradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Inradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Inradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"ionic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"IonicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Jeans length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"JeansLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"JeansLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Kolmogorov length scale\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovLengthScale\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"KolmogorovLengthScale\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameter\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeParameter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter a\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterA\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterA\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter b\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterB\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterB\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice parameter c\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterC\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterC\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice plane spacing\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticePlaneSpacing\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticePlaneSpacing\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lattice vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeVector\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeVector\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"light wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"linear eccentricity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LinearEccentricity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearEccentricity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"line length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LineLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"LineLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"London penetration depth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LondonPenetrationDepth\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LondonPenetrationDepth\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"luminosity distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminosityDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LuminosityDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"maximum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MaximumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MaximumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanFreePath\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanFreePath\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mean radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"meridional radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"MeridionalRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeridionalRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"metallic radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MetallicRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MetallicRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"midradius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Midradius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Midradius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"minimum elevation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MinimumElevation\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MinimumElevation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Moli\[EGrave]re radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MoliereRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MoliereRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"negative carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NegativeCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NegativeCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear collision length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearCollisionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearCollisionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear interaction length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"NuclearInteractionLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearInteractionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NuclearRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"object distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"orbital radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"particle position vector\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticlePositionVector\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticlePositionVector\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"path length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PathLength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PathLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"periapsis distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PeriapsisDistance\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PeriapsisDistance\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Perimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Perimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"phonon mean free path\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PhononMeanFreePath\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PhononMeanFreePath\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pivotal altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PivotalAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PivotalAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"plasma triangularity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTriangularity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTriangularity\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"position\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Position\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Position\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"positive carrier diffusion length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PositiveCarrierDiffusionLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositiveCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"precipitation\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Precipitation\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Precipitation\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"pressure altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PressureAltitude\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PressureAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"proper distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ProperDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ProperDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"quarter wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarterWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarterWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radial distance\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadialDistance\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadialDistance\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of curvature\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfCurvature\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiusOfCurvature\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radius of gyration\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfGyration\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadiusOfGyration\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rainfall\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Rainfall\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Rainfall\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"rectifying radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RectifyingRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RectifyingRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"group velocity dispersion of the refractive index\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"RefractiveIndexGroupVelocityDispersion\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGroupVelocityDispersion\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scale height\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScaleHeight\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScaleHeight\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLength\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"Schwarzschild radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SchwarzschildRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SchwarzschildRadius\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]major axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMajorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMajorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]minor axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMinorAxisLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SemiMinorAxisLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"semi\[Hyphen]principal axis length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiPrincipalAxisLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiPrincipalAxisLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound particle displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SoundParticleDisplacement\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SoundParticleDisplacement\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"sound wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundWavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundWavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"span\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Span\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Span\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"strain sensitivity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StrainSensitivity\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"superconductor coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"SuperconductingCoherenceLength\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalCharacteristicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thermal de Broglie wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ThermalDeBroglieWavelength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDeBroglieWavelength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"thickness\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"track gauge\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"true altitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"typographic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TypographicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"van der Waals radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsRadius\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"vehicle distance traveled\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDistanceTraveled\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"viscous characteristic length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ViscousCharacteristicLength\""}], 
         "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume spread rate\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeSpreadRate\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volumetric radius\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricRadius\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave amplitude\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAmplitude\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wave coherence length\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveCoherenceLength\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wavelength\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wetted perimeter\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"width\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wingspan\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"assignable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"AssignableArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"circulation area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CirculationArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CirculationArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"coil effective area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"common area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CommonArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CommonArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"cross sectional area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CrossSectionalArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CrossSectionalArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elastic cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElasticCrossSection\\\
\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"equivalent sound absorption area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"EquivalentSoundAbsorptionArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquivalentSoundAbsorptionArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fabric area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"fuel consumption\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelConsumption\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelConsumption\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"geometric surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GeometricSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeometricSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"GrossFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"gross leasable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossLeasableArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GrossLeasableArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"hydraulic permeability\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicPermeability\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicPermeability\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"infinitesimal surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"InfinitesimalSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"lateral surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LateralSurfaceArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LateralSurfaceArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"leasable floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"LeasableFloorArea\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LeasableFloorArea\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"mechanical area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"MechanicalArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"MechanicalArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"net floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NetFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"net leasable area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NetLeasableArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetLeasableArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"nuclear quadrupole moment\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearQuadrupoleMoment\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearQuadrupoleMoment\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"real surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RealSurfaceArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"RealSurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"reduction of area at fracture\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ReductionOfAreaAtFracture\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReductionOfAreaAtFracture\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"scattering cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ScatteringCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"spectral bandwidth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralBandwidth\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralBandwidth\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tare area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TareArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total floor area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalFloorArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total scattering cross section\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"TotalScatteringCrossSection\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"total surface area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], "]"}],
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalSurfaceArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume gradient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeGradient\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"wing area\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"capacity\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Capacity\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Capacity\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"critical volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"elastic section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticSectionModulus\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElasticSectionModulus\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume polarizability\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ElectricVolumePolarizability\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectricVolumePolarizability\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"engine displacement\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"EngineDisplacement\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EngineDisplacement\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume of food or beverage\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"FoodVolume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"FoodVolume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"granular potential\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"GranularPotential\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GranularPotential\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"plastic section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasticSectionModulus\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasticSectionModulus\
\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"radar reflectivity factor\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"RadarReflectivityFactor\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadarReflectivityFactor\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"section modulus\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"SectionModulus\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"SectionModulus\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"struck measure\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"StruckMeasure\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"StruckMeasure\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"tonnage\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Tonnage\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tonnage\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"volume\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
       "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area moment of inertia x\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaX\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"area moment of inertia y\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaY\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"axial area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"AxialAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AxialAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"planar area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PlanarAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PlanarAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"polar area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PolarAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"product area moment of inertia\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"ProductAreaMomentOfInertia\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProductAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"transformer area product\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TransformerAreaProduct\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"transformer core geometry coefficient\"", 
       RowBox[{"Entity", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", 
           "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"torsional constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
         "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionalConstant\\\"]\"", "\"physical quantity\""},
      "Entity"], ",", 
     TemplateBox[{"\"warping constant\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], "]"}], 
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\"]\"", 
       "\"physical quantity\""},
      "Entity"]}], "}"}]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444435574041*^9},
 CellLabel->"Out[5]=",
 CellID->148579662,ExpressionUUID->"2defcc8a-7dc3-4314-8c58-c9aa78613f58"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Last", "[", 
     RowBox[{"SortBy", "[", 
      RowBox[{
       RowBox[{"Extract", "[", 
        RowBox[{
         RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"EntityValue", "[", 
            RowBox[{
             RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
             "\"\<Dimensions\>\""}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"\"\<LengthUnit\>\"", ",", "_"}], "}"}], "}"}]}], 
          "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"EntityValue", "[", 
          RowBox[{"#", ",", "\"\<Dimensions\>\""}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}]}], "]"}], "]"}], ",", 
    "\"\<Dimensions\>\""}], "]"}], "//", "AbsoluteTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872444442829442*^9, 3.872444465609524*^9}},
 CellLabel->"In[8]:=",
 CellID->137526651,ExpressionUUID->"35f1f85d-8b8e-4b60-a37a-e94d117cd2a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.0444427`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"LengthUnit\"\>", ",", "6"}], "}"}], "}"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444539773137*^9},
 CellLabel->"Out[8]=",
 CellID->389685707,ExpressionUUID->"505252ea-d33a-4079-918d-8d727d18aaca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"EntityValue", "[", 
       RowBox[{"#", ",", "\"\<Dimensions\>\""}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], "&"}], ",", 
    RowBox[{"Extract", "[", 
     RowBox[{
      RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"EntityValue", "[", 
         RowBox[{
          RowBox[{"PhysicalQuantityData", "[", "]"}], ",", 
          "\"\<Dimensions\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<LengthUnit\>\"", ",", "_"}], "}"}], "}"}]}], "]"}]}], 
     "]"}]}], "]"}], "//", "AbsoluteTiming"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.87244439776834*^9, 3.8724444282020826`*^9}, {
  3.872444500272127*^9, 3.872444512881361*^9}},
 CellLabel->"In[7]:=",
 CellID->387550651,ExpressionUUID->"623ecc15-9263-4edb-bf97-cf5075f7c8b4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.8904299`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"absolute altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"absolute elongation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteElongation\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"acceptor density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"acoustic attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AcousticAttenutationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"angular diameter distance\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AngularDiameterDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"angular reciprocal lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AngularReciprocalLatticeVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"angular wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
          "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavelength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"anharmonicity constant\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AnharmonicityConstant\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnharmonicityConstant\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"apoapsis distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApoapsisDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"arc length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"area gradient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"area moment of inertia x\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaX\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaMomentOfInertiaX\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"area moment of inertia y\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaMomentOfInertiaY\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaMomentOfInertiaY\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"area per volume\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerVolume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"assignable area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AssignableArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"atomic physics diffusion length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AtomicPhysicsDiffusionLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"atomic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationCoefficient\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"attenuation length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"authalic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AuthalicRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"axial area moment of inertia\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AxialAreaMomentOfInertia\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialAreaMomentOfInertia\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"backward absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"backward linear attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"backward scattering coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"BackwardScatteringCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BackwardScatteringCoefficient\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"base radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"bend radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BendRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BendRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"bin width\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BinWidth\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BinWidth\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"bond length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BondLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BondLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"breadth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Breadth\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Breadth\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"breaking length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BreakingLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BreakingLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"broad\[Hyphen]beam attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"BroadBeamAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BroadBeamAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"Burgers vector\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BurgersVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BurgersVector\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"caliber\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliber\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliber\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"caliper\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Caliper\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Caliper\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"capacity\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Capacity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Capacity\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"Cartesian coordinate\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinate\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CartesianCoordinate\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Cartesian coordinate x\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateX\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinateX\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Cartesian coordinate y\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateY\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinateY\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Cartesian coordinate z\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CartesianCoordinateZ\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CartesianCoordinateZ\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"characteristic length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicLength\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"characteristic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicRadius\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"charge radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ChargeRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChargeRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"chemistry electron density\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ChemistryElectronDensity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChemistryElectronDensity\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"circulation area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CirculationArea\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"CirculationArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"circumference\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumference\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumference\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"circumradius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Circumradius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Circumradius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "4"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"coherence length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CoherenceLength\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoherenceLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"coil core factor\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilCoreFactor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CoilCoreFactor\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"coil effective area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveArea\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"coil effective length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CoilEffectiveLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoilEffectiveLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"common area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CommonArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CommonArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"comoving distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ComovingDistance\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"comoving transverse distance\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ComovingTransverseDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComovingTransverseDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Compton wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ComptonWavelength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ComptonWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"condensed matter physics angular wavenumber\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"CondensedMatterPhysicsAngularWavenumber\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsAngularWavenumber\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"condensed matter physics diffusion length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"CondensedMatterPhysicsDiffusionLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CondensedMatterPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"contact\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "4"}]}], ",", 
     RowBox[{
      TemplateBox[{
       "\"cosmological vacuum energy density length\[Hyphen]based \
proportionality factor\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\
\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CosmologicalVacuumEnergyDensityLengthBasedProportionalityFactor\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"covalent radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CovalentRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CovalentRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"critical volume\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalVolume\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalVolume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"cross sectional area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CrossSectionalArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CrossSectionalArea\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"curvature\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Curvature\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Curvature\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"cutoff wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffWavelength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CutoffWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"de Broglie wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DeBroglieWavelength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DeBroglieWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"decadic absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DecadicLinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DecadicLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"density altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DensityAltitude\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"DensityAltitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"depth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Depth\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Depth\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"depth of field\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfField\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfField\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"depth of focus\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DepthOfFocus\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DepthOfFocus\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"diagonal length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DiagonalLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiagonalLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"diameter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Diameter\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Diameter\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"diameter at breast height (1.3 meters above ground)\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DiameterAtBreastHeight13Decimeters\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight13Decimeters\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"diameter at breast height (1.4 meters above ground)\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DiameterAtBreastHeight14Decimeters\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight14Decimeters\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"diameter at breast height (4.5 feet above ground)\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DiameterAtBreastHeight4Point5Feet\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiameterAtBreastHeight4Point5Feet\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"differential radar reflectivity\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DifferentialRadarReflectivity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DifferentialRadarReflectivity\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"diffusion length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusionLength\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusionLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"directional attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"DirectionalAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DirectionalAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"dispersion measure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DispersionMeasure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DispersionMeasure\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"displacement\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Displacement\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Displacement\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"displacement vector\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DisplacementVector\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DisplacementVector\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Distance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Distance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"donor density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DonorDensity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DonorDensity\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"dot pitch\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DotPitch\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"DotPitch\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"driving distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DrivingDistance\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"DrivingDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Einstein radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Einstein tensor\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinTensor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinTensor\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"elastic cross section\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticCrossSection\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElasticCrossSection\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"elastic section modulus\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElasticSectionModulus\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElasticSectionModulus\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"volume polarizability\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ElectricVolumePolarizability\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectricVolumePolarizability\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"electromagnetic radiation wavelength\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ElectromagneticRadiationWavelength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectromagneticRadiationWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"electronic term\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronicTerm\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectronicTerm\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"electron mean free path\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronMeanFreePath\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectronMeanFreePath\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"elevation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Elevation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Elevation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"elevation gain\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationGain\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationGain\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"elevation loss\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ElevationLoss\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElevationLoss\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"emission measure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EmissionMeasure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"EmissionMeasure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "5"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"energy per force\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EnergyPerForce\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EnergyPerForce\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"engine displacement\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EngineDisplacement\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EngineDisplacement\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"equatorial radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EquatorialRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquatorialRadius\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"equilibrium position vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"EquilibriumPositionVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquilibriumPositionVector\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"equivalent air layer thickness\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"EquivalentAirLayerThickness\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquivalentAirLayerThickness\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"equivalent sound absorption area\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"EquivalentSoundAbsorptionArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquivalentSoundAbsorptionArea\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"Euclidean distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EuclideanDistance\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EuclideanDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"fabric area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"fabric length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FabricLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FabricLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Fermi angular wavenumber\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiAngularWavenumber\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FermiAngularWavenumber\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"fiber\[Hyphen]optic span\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FiberOpticSpan\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FiberOpticSpan\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"gross floor area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FloorArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FloorArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"focal distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"focal length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FocalLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FocalLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"volume of food or beverage\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FoodVolume\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FoodVolume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"forward absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ForwardLinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"forward linear attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ForwardLinearAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"forward scattering coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ForwardScatteringCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ForwardScatteringCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"fuel consumption\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelConsumption\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelConsumption\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"fuel economy\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FuelEconomy\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FuelEconomy\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalLatticeVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FundamentalLatticeVector\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"first fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalLatticeVector1\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector1\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"second fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalLatticeVector2\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector2\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"third fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalLatticeVector3\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalLatticeVector3\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"fundamental reciprocal lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalReciprocalLatticeVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"first reciprocal fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalReciprocalLatticeVector1\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector1\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"second reciprocal fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalReciprocalLatticeVector2\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector2\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"third reciprocal fundamental lattice vector\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"FundamentalReciprocalLatticeVector3\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FundamentalReciprocalLatticeVector3\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"geometric surface area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GeometricSurfaceArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"GeometricSurfaceArea\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"granular potential\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GranularPotential\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GranularPotential\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"grating period\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GratingPeriod\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"GratingPeriod\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"gross floor area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossFloorArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"GrossFloorArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"gross leasable area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GrossLeasableArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GrossLeasableArea\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"gyroradius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Gyroradius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Gyroradius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"half\[Hyphen]value thickness\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfValueThickness\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfValueThickness\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"half wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HalfWavelength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HalfWavelength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"height\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Height\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Height\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Hill radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HillRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HillRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"hole density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HoleDensity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HoleDensity\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"hydraulic diameter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicDiameter\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HydraulicDiameter\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"hydraulic head\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicHead\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicHead\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"hydraulic permeability\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicPermeability\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HydraulicPermeability\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"hydraulic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicRadius\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"image distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"image vergence\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ImageVergence\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ImageVergence\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"indicated altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"IndicatedAltitude\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IndicatedAltitude\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"infinitesimal arc length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalArcLength\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalArcLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"infinitesimal surface area\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"InfinitesimalSurfaceArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"InfinitesimalSurfaceArea\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"inradius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Inradius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Inradius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"integrated beam luminosity for particle accelerators\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"IntegratedLuminosity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"IntegratedLuminosity\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"intrinsic carrier density\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"IntrinsicCarrierDensity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"IntrinsicCarrierDensity\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"inverse area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"inverse length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"inverse volume\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"InverseVolume\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"InverseVolume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"ionic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"IonicRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonicRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Jeans length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"JeansLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"JeansLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Kolmogorov length scale\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovLengthScale\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"KolmogorovLengthScale\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lateral surface area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LateralSurfaceArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LateralSurfaceArea\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice parameter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameter\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameter\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice parameter a\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterA\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterA\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice parameter b\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterB\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterB\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice parameter c\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeParameterC\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticeParameterC\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice plane spacing\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticePlaneSpacing\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LatticePlaneSpacing\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"lattice vector\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LatticeVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LatticeVector\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"leasable floor area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LeasableFloorArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LeasableFloorArea\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"length per area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"length per volume\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LengthPerVolume\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"LengthPerVolume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"light wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavelength\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavelength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"light wavenumber\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LightWavenumber\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightWavenumber\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"linear absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"LinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LinearAbsorptionCoefficient\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"linear attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"LinearAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"linear eccentricity\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LinearEccentricity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LinearEccentricity\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"line length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LineLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LineLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"London penetration depth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LondonPenetrationDepth\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LondonPenetrationDepth\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"luminosity distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminosityDistance\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"LuminosityDistance\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"maximum elevation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MaximumElevation\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MaximumElevation\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"mean free path\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanFreePath\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanFreePath\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"mean radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"mechanical area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MechanicalArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MechanicalArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"meridional radius of curvature\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"MeridionalRadiusOfCurvature\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeridionalRadiusOfCurvature\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"metallic radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MetallicRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MetallicRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"midradius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Midradius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Midradius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"minimum elevation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MinimumElevation\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MinimumElevation\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"molecular concentration\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularConcentration\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularConcentration\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"molecular number density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MolecularNumberDensity\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MolecularNumberDensity\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"Moli\[EGrave]re radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MoliereRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MoliereRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Napierian absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"NapierianLinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NapierianLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"negative carrier diffusion length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"NegativeCarrierDiffusionLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NegativeCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"net floor area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NetFloorArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetFloorArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"net leasable area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NetLeasableArea\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetLeasableArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"nuclear collision length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearCollisionLength\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearCollisionLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"nuclear interaction length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"NuclearInteractionLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NuclearInteractionLength\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"nuclear quadrupole moment\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"NuclearQuadrupoleMoment\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NuclearQuadrupoleMoment\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"nuclear radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NuclearRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NuclearRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"number density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NumberDensity\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NumberDensity\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"object distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"object vergence\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ObjectVergence\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ObjectVergence\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"optical power\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"OpticalPower\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"OpticalPower\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"orbital radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"particle concentration\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleConcentration\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticleConcentration\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"particle number density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticleNumberDensity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticleNumberDensity\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"particle position vector\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ParticlePositionVector\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ParticlePositionVector\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"path length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PathLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PathLength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"percent gradient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PercentGradient\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"PercentGradient\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"periapsis distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PeriapsisDistance\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PeriapsisDistance\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"perimeter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Perimeter\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Perimeter\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"phonon mean free path\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PhononMeanFreePath\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhononMeanFreePath\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"photo absorption\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PhotoAbsorption\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhotoAbsorption\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"pivotal altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PivotalAltitude\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"PivotalAltitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"planar area moment of inertia\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"PlanarAreaMomentOfInertia\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PlanarAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"plasma triangularity\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTriangularity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PlasmaTriangularity\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"plastic section modulus\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasticSectionModulus\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PlasticSectionModulus\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"polar area moment of inertia\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"PolarAreaMomentOfInertia\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarAreaMomentOfInertia\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"polar radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"polar radius of curvature\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarRadiusOfCurvature\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PolarRadiusOfCurvature\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"position\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Position\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Position\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"positive carrier diffusion length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"PositiveCarrierDiffusionLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PositiveCarrierDiffusionLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"precipitation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Precipitation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Precipitation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"pressure altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PressureAltitude\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PressureAltitude\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{
       "\"Schr\[ODoubleDot]dinger quantum\[Hyphen]mechanical probability \
density\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ProbabilityDensity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ProbabilityDensity\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "3"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"product area moment of inertia\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ProductAreaMomentOfInertia\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ProductAreaMomentOfInertia\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"proper distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ProperDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ProperDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"quadratic spatial gradient of the refractive index\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"QuadraticRefractiveIndexGradient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuadraticRefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"quarter wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"QuarterWavelength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"QuarterWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"radar reflectivity factor\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"RadarReflectivityFactor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadarReflectivityFactor\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"radial distance\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RadialDistance\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadialDistance\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Radius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Radius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"radius of curvature\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfCurvature\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiusOfCurvature\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"radius of gyration\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiusOfGyration\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiusOfGyration\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"rainfall\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Rainfall\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Rainfall\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"real surface area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RealSurfaceArea\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"RealSurfaceArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"rectifying radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RectifyingRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RectifyingRadius\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"reduction of area at fracture\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ReductionOfAreaAtFracture\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReductionOfAreaAtFracture\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"spatial gradient of the refractive index\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"RefractiveIndexGradient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGradient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"group velocity dispersion of the refractive index\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"RefractiveIndexGroupVelocityDispersion\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RefractiveIndexGroupVelocityDispersion\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"Ricci tensor\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RicciTensor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RicciTensor\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"Riemann tensor\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RiemannTensor\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RiemannTensor\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"rotational term\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RotationalTerm\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RotationalTerm\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"scale height\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScaleHeight\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScaleHeight\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"scattering coefficient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCoefficient\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ScatteringCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"scattering cross section\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringCrossSection\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ScatteringCrossSection\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"scattering length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ScatteringLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"scattering loss\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringLoss\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringLoss\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"Schwarzschild radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SchwarzschildRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SchwarzschildRadius\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"section modulus\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SectionModulus\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"SectionModulus\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"Sellmeier coefficient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SellmeierCoefficient\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SellmeierCoefficient\
\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"semi\[Hyphen]major axis length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMajorAxisLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiMajorAxisLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"semi\[Hyphen]minor axis length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SemiMinorAxisLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiMinorAxisLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"semi\[Hyphen]principal axis length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SemiPrincipalAxisLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SemiPrincipalAxisLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"sound particle displacement\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SoundParticleDisplacement\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SoundParticleDisplacement\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"sound wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundWavelength\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundWavelength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"span\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Span\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Span\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"spectral bandwidth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralBandwidth\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralBandwidth\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"special directional attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SpectralDirectionalAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralDirectionalAttenuationCoefficient\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"spectral hemispherical attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SpectralHemisphericalAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectralHemisphericalAttenuationCoefficient\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"spectroscopic term value\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectroscopicTermValue\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicTermValue\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"spectroscopic wavenumber\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SpectroscopicWavenumber\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SpectroscopicWavenumber\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"strain sensitivity\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"StrainSensitivity\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StrainSensitivity\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"struck measure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"StruckMeasure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"StruckMeasure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"superconductor coherence length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"SuperconductingCoherenceLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductingCoherenceLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"surface area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"tare area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TareArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TareArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"tensile stiffness\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TensileStiffness\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TensileStiffness\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"thermal characteristic length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ThermalCharacteristicLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ThermalCharacteristicLength\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"thermal de Broglie wavelength\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ThermalDeBroglieWavelength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalDeBroglieWavelength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"thickness\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Thickness\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Thickness\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"tonnage\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Tonnage\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tonnage\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"torsional constant\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionalConstant\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "6"}], ",", 
     RowBox[{
      TemplateBox[{"\"total floor area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalFloorArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"total absorption coefficient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{
           "\"PhysicalQuantity\"", ",", 
            "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"total linear attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"total scattering coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"TotalScatteringCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"total scattering cross section\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"TotalScatteringCrossSection\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalScatteringCrossSection\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"total surface area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalSurfaceArea\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"total term\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"first Townsend coefficient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"track gauge\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"transformer area product\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TransformerAreaProduct\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "4"}], ",", 
     RowBox[{
      TemplateBox[{"\"transformer core geometry coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "5"}], ",", 
     RowBox[{
      TemplateBox[{"\"true altitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"typographic length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TypographicLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"van der Waals radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsRadius\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"vehicle distance traveled\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"VehicleDistanceTraveled\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"vergence\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"vibrational constant\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VibrationalConstant\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"vibrational term\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"viscous characteristic length\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"ViscousCharacteristicLength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousCharacteristicLength\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"volume\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "3"}], ",", 
     RowBox[{
      TemplateBox[{"\"volume cross section\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeCrossSection\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"volume gradient\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeGradient\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"volume scattering coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"VolumeScatteringCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeScatteringCoefficient\\\
\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"volume spread rate\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"volumetric radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"volumic total cross section\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"VolumicTotalCrossSection\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\"]\
\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"warping constant\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "6"}], ",", 
     RowBox[{
      TemplateBox[{"\"wave amplitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAmplitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"wave attenuation coefficient\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"WaveAttenuationCoefficient\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAttenuationCoefficient\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"wave coherence length\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{
       "\"1\[Hyphen]dimensional bound state position space wave function\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}], ",", 
     RowBox[{
      TemplateBox[{
       "\"2\[Hyphen]dimensional bound state position space wave function\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{
       "\"3\[Hyphen]dimensional bound state position space wave function\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", 
       FractionBox["3", "2"]}]}], ",", 
     RowBox[{
      TemplateBox[{
       "\"4\[Hyphen]dimensional bound state position space wave function\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "2"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"wavelength\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"wavenumber\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"wave vector\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{
      TemplateBox[{"\"wetted perimeter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"width\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}], ",", 
     RowBox[{
      TemplateBox[{"\"wing area\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "2"}], ",", 
     RowBox[{
      TemplateBox[{"\"wingspan\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.872444435574041*^9, 3.8724445226906147`*^9},
 CellLabel->"Out[7]=",
 CellID->59441074,ExpressionUUID->"a6bf51df-f5b0-42a1-9d89-ab11b80ba6f3"]
}, Closed]],

Cell[BoxData[""], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8724445531074934`*^9, 3.8724445556478896`*^9}},
 CellID->419750821,ExpressionUUID->"98f8e41b-c293-4a44-845a-c14649a3911b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityPrefetch", "[", "\"\<PhysicalQuantity\>\"", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.872444004300104*^9, 3.8724440100872416`*^9}},
 CellLabel->"In[447]:=",
 CellID->742323921,ExpressionUUID->"a0421d55-b3d7-4356-8c08-1a9ff5d18a07"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Success",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["54630", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[Checkmark]\"", 
              Directive[
               RGBColor[
               0.3607843137254902, 0.596078431372549, 0.3803921568627451], 
               25], StripOnInput -> False], ContentPadding -> False, 
             FrameStyle -> None, FrameMargins -> {{0, 0}, {0, 0}}, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch successful.\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Values\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["54630", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Type\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"PhysicalQuantity\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["\"Prefetch\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Success[
  "Prefetch", <|
   "MessageTemplate" -> "Prefetch successful.", "Values" -> 54630, "Type" -> 
    "PhysicalQuantity"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.87244401260896*^9},
 CellLabel->"Out[447]=",
 CellID->113681562,ExpressionUUID->"9397b6f7-bc6f-4fb9-abda-543d9189b9ca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 TaggingRules->{},
 CellID->964056545,ExpressionUUID->"b2011c99-6f75-492d-86f4-41abd4f9992f"],

Cell[BoxData[
 TagBox[
  InterpretationBox[Cell[
   "\t", "ExampleDelimiter",ExpressionUUID->
    "96859e79-6573-4425-9c26-6cf61fe81071"],
   $Line = 0; Null],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "ExampleDelimiter",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->717218889,ExpressionUUID->"0319fa4f-1671-4f03-a01c-a977bc94a02a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"5395b148-96ef-43c6-8b68-26c9ac51e192"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this paclet.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b2164d42-2b7d-419d-b836-9bfdb841fff1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 CellID->57534933,ExpressionUUID->"32dbf354-630f-4f88-ba20-3d6a484dd9d3"],

Cell["Peter Cullen Burbery", "Text",
 TaggingRules->{},
 CellID->213761186,ExpressionUUID->"354c5395-046a-45cf-a903-7d6057e96572"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "If this paclet has a corresponding source control repository (e.g. \
GitHub), you can provide the URL here.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "98e9d1fb-8cc5-4b4c-82e1-d530abfd5834"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->221376991,ExpressionUUID->"f9275d2f-3dd7-4519-a37f-35743d63d741"],

Cell["https://github.com/PeterCullenBurbery/dimensional-analysis", "Text",
 TaggingRules->{},
 CellID->308831883,ExpressionUUID->"a6ce21da-2358-4638-9496-60ca70da3157"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "License",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LicensingInformation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Choose a license to specify the terms and conditions regarding how \
your paclet can be used, modified, and distributed. If submitting to the \
Wolfram Resource System, this also includes the terms outlined by the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"publisher agreement\"", "Text", ShowStringCharacters -> 
                False], BaseStyle -> "Hyperlink", ButtonData -> {
                 URL[
                 "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], None}, ButtonNote -> 
               "https://resources.wolframcloud.com/publisher/publisher-\
agreement"], 
              MouseAppearanceTag["LinkHand"]]]], ".\n\nSee the ", 
           Cell[
            BoxData[
             TagBox[
              ButtonBox[
               StyleBox[
               "\"style guidelines\"", "Text", ShowStringCharacters -> False],
                BaseStyle -> "Hyperlink", ButtonFunction :> 
               Symbol["DefinitionNotebookClient`ViewStyleGuidelines"][
                "Tag" -> "ChoosingALicense"], Evaluator -> Automatic, Method -> 
               "Queued"], 
              MouseAppearanceTag["LinkHand"]]]], 
           " for additional information about choosing licenses."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLicensingInformation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "12db84a2-23a5-4550-b169-f17eda84ffa7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LicensingInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"License", "LicensingInformation", "TemplateCellGroup"},
 CellID->279656547,ExpressionUUID->"f8a4cc12-b45b-4d00-8502-4caa1fc9a80d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "MIT"}], "\" \"", 
            TemplateBox[{"\"MIT License\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
MIT"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Apache-2.0"}], "\" \"", 
            TemplateBox[{"\"Apache License 2.0\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
Apache-2.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "CC0-1.0"}], "\" \"", 
            
            TemplateBox[{
             "\"Creative Commons Zero v1.0 Universal\"", "\"\[ThinSpace]\"", 
              
              TemplateBox[{
               "\"\[RightGuillemet]\"", 
                "https://resources.wolframcloud.com/PacletRepository/licenses/\
CC0-1.0"}, "HyperlinkURL"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "None"}], "\" \"", 
            
            TemplateBox[{
             "\"None\"", 
              "\"A license is not required for personal deployments\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            RadioButtonBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "RadioButtonValue"}]], {
             "Other"}], "\" \"", 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}, ""], (
              CurrentValue[
                 EvaluationCell[], {TaggingRules, "RadioButtonValue"}] = 
               "Other"; CurrentValue[
                 EvaluationCell[], {TaggingRules, "SpecifiedLicenseID"}] = 
               Replace[#, "" -> Null]; Null)& ], String, FieldHint -> 
             "Other License Name or ID", FieldHintStyle -> {FontSize -> 12}, 
             ContinuousAction -> True]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJylVE1PGzEQBfLBV4QAtVKPq6jXJLTqqSfCBkokCihOe+jN7M4SC6+99djA9tRrf1Nv/\
Sn9JR3vJpvQElUtl5V3bL958+Z5+lsd1mA2l8CaF85mznbYejiB6AbiZAXrZwIp0hhaSDFplP/\
JGtZHTkKyirWRvktqZZhtvx+\
OgzMRgUJgtZ9fv9HBzdM8AyOFumFrP76zw4m1Gb7t9QygdiYC7N5pmRieRlK7uBvptHfJIwl2BJlGY\
bXJe7KExB7hsxp9lhHY72c8msCMQ/\
C6e7CEx7sn8SjTdDz81ny9jNXL0AC34haCUKepVhh8AqOD21fdg+\
CDorhBLpfwHDyJZxgedCgLNbRcLDDcGPG7I30PSLHtMaSZ5BYo4I8UrJvtc62gzd60+\
8EUMBAYKG0DA5+dMBAHiTYBsUWtuAxiyKTOU1AW2+z5pQFr87HW0opshs/\
qHrNi0cCtoSLHnQiQMUXXB7niqYhIuVbojCGoj1w6IB/uHN/SilTUKgQpZyyxNebX10Jdezxk+\
yyDSCQC4qkDhgO24os9cSrydwl5n5qQaafi4/uMREUfXcMaA2/r/0u7O+\
Kx0EfOWq2Km6xxYSdgnor7SDleJeq05JFvYp1JbcPVmaCM3uu5k3L6bTJrCGu2i5uFzqdCWfai4Fe9\
k3OeQkC9LPDLwzvzw344+\
GSLT58k1bQlvkDYqmK7IcWEctphv5Ab62NTqdFhG5dGk11szp6VmYndUJGJ0kIJGjwXWXFt9nTm2Y5\
jYfkVrRonXCLMaxoAef+xnQdS/k7/UWnJdZVRSdcl8k/\
RB5BwJ8uGlnpXe3tDOmt8IZXtFi1Ytc0PWi1dqtCvd4bKgiFL2kIMttlXOXNXCH4gT7P9QXGPUfmR/\
SvDB1PzHwi2RtOxM6apxJrlpOmwevHbWrA9/gKDZjDH", "RadioButtonValue" -> "MIT", 
   "SpecifiedLicenseID" -> Null},
 CellTags->{"LicensingInformation-RadioButtons", "RadioButtonsCell"},
 CellID->42282576,ExpressionUUID->"3ac4f9b9-7810-4042-b95a-48baca287350"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the paclet in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6684dd23-71c9-4492-84ab-c4215e0dfcb8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->913860664,ExpressionUUID->"c26a11a5-6c92-482b-be00-6981f5a70bf1"],

Cell["keyword 1", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"9860536d-567b-4559-a962-568d5c750184"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your paclet. These choices \
determine which pages your paclet will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0978b03e-a183-4b32-a67b-c7c72166d7ea"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->651640710,ExpressionUUID->"f89f5c02-d562-4933-85aa-471736c6c64f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Scientific and Medical Data & Computation", {
             False, "Scientific and Medical Data & Computation"}], "\" \"", 
            "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9tKxDAQRXG1FfEb8iT40I8o3RUWlF12/\
IHZ9FTDpknITB7696YsiD7NYQ7n1jcdbUgXD7o/\
FE1FO3oYvmEvGKcbuXt3ovRK1iGom5w1HEbzgdFZ9mbLyubFDHGuOlYXQzXbK2aRti8a5/\
qzHTXHHBOyLvQ4sOIrZgepMYe0SmS6vcas91Q8pNmNTvlc0eaNveCXaLfw+MusXaMvc/gf+\
LwPipwyrqWo7cNC5Syo455OkFiyxeeS6uYj22r5A8bRWuY="},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->705988508,ExpressionUUID->"f8939816-a6ea-4059-95b2-8d33df244a86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this paclet.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "af690c48-1069-434e-b592-cc84deef2bcb"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->280622473,ExpressionUUID->"a7377386-8187-44dd-a300-80354c224411"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"cdbb5b84-63a4-4d6b-9dd0-bae9246a8b60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
paclet and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "70e966e0-cc57-41f6-995a-a8d61c5e5061"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->687116677,ExpressionUUID->"345376dc-aa13-432f-9ce6-81302ea7b668"],

Cell["Source, reference or citation", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->702019342,ExpressionUUID->"fd22fc9a-a947-43d4-9d6f-f2d3049d3a14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the paclet.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ccce50dd-50bc-4bb6-915f-6e033e7a8e1f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->179193585,ExpressionUUID->"e21ec65c-bccc-42c0-a7d3-49c7861a3d46"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"6732b243-1405-4f9f-8cff-6e94865d9d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your paclet to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d290444f-c4d1-4b3e-a35e-bf95aaa1d5f7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->31633819,ExpressionUUID->"df1e7a1a-acee-41a5-846c-2a2b17ff6cff"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ae5b6480-ec08-4a45-a2de-56b2bcf74128"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"d6acd1bf-d727-4193-9cf3-af043912a4ac"],

Cell["13.1+", "Text",
 TaggingRules->{},
 CellID->26714281,ExpressionUUID->"9fb2a303-be16-4955-a158-fe394fe53f18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your paclet is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "91956114-7c69-4891-920e-18683f9bb162"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->54346056,ExpressionUUID->"a0ca10a0-6189-4f91-baeb-bfc06d6e7ec7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN2KwkAMhWFbtcLiE/\
gKfQjpKggrFbOL3k7b1B12OjNMMui8vVFo8S7JOfnysylKmAEngzCvI/vIJSyqP2z/\
seszyr81MSzO2nbuRjA/qLaGC+S/Vt+lcc840GjrPyg/\
RQFN9jGYlEz6R8hUfMFGZHEMzmPgBOvKDV6xbrTRnGopSmKvkEiGypK1Z+3si/0+\
nYptp1k1Es12yhBOwvILDb4rz0udiYOlKithtbeMwQexPMGw3NgEsSGUj3yekFwMLf4kL486qlZID5\
UKaxo="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->29737525,ExpressionUUID->"d374911a-5073-44a6-95f5-2cbf4c775c2c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your paclet is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f76ad36c-a1d6-4b41-ba0d-fd0c16ab2a1c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->701114648,ExpressionUUID->"d8fe558b-c2ae-4ff7-ba12-5d2dfdf7448c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdkdtqwzAMhmFrc4BtD7H7PESWZpAxaKgGu3YclZg6trHlQt5+ztY46a70S7/\
5dHCZFbAHmiRCcvRkPBWQVgPyC/bn1O0+hSNIAZ0TWsHzN3b1lUnPaE6zN0Z8+\
NAdJMCtMARJeFC2DeTguwtahTJIPmDvJfahU0M4uoV7fnC7UzBW/iKiE7l/Mdbv+\
IuM7r8x79OVfZv1FjfsZeCNjO66c1QFZK3VBi1N8Frp0YQ+\
nZCCprVrra7CajWimg98NHPNzdDtIVxW94JYF9T+nUmH0cgPKHHrzL+kpR+\
Vqx4LeGkUoTU2PPndOC/VFM7iMDR7OqHT3nL8mkxYumU8kH4AghGtUQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->276898361,ExpressionUUID->"d6e02cd7-8f79-4ccf-8c43-fc446905b113"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your paclet is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5a7c7b1e-2c97-44d3-9476-844605f0bc6f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->677592290,ExpressionUUID->"020bddbe-0c20-4bbf-9c0a-daae83088e84"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->154203166,ExpressionUUID->"d1ddf179-ab65-49c4-9612-bbfac27a4947"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your paclet."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c0592610-21c7-4981-854f-ccfa15fc3601"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->666988317,ExpressionUUID->"618cdea5-6479-4b62-8ead-3bc844e4134d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->235488443,ExpressionUUID->"24ff691b-0d08-4a95-9b7c-ca0c43913f5e"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Disclosures",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Disclosures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Contributors to the Wolfram Language Paclet Repository can include \
a list of disclosures with their paclet. These disclosures tell users how to \
expect the paclet to interact with their environment.\n\nDisclosures should \
be selected if your paclet interacts with the environment in ways that are \
not otherwise obvious to the end user. For example, if your paclet needs to \
write information to local files somewhere to store persistent settings, you \
should choose the \"Local files\" disclosure so that users are not surprised \
to find files that they didn't expect.\n\nFor cases where the interaction is \
inherently part of the paclet behavior (and clearly documented as such), the \
disclosure is unnecessary. For example, an exporter function that's clearly \
meant to write files in a place specified by the user would not be necessary \
to disclose.\n\nFor each disclosure item, additional details can be added by \
starting a new cell under the cell containing the checkbox. Use this space to \
clarify how your paclet interacts with the environment for the corresponding \
item. For example:\n\n", 
           Cell[
            BoxData[
             FrameBox[
              StyleBox[
              "\"MyPublisherID/MyPaclet utilizes the local file system to \
cache data by writing files in the directory \
$UserBaseDirectory/ApplicationData/MyPublisherID/MyPaclet/Cache\"", "Text", 
               "DisclosureDetails", StripOnInput -> False, LineIndent -> 0], 
              Background -> GrayLevel[0.9], FrameStyle -> GrayLevel[0.8], 
              ImageSize -> {Full, Automatic}, StripOnInput -> False]]]}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoDisclosures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c9e478c8-a288-43e1-8400-b6c7c0876e33"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Disclosures"},
 DefaultNewCellStyle->{"Text", "DisclosureDetails"},
 CellTags->{"Disclosures", "TemplateCellGroup"},
 CellID->376414000,ExpressionUUID->"9fe1bbed-13bf-4559-a245-19c3535161c3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalFiles"}], "\" \"", 
            TemplateBox[{"\"Local files\"", 
              TemplateBox[{"DisclosuresLocalFiles", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following during loading or normal usage:\n\[FilledSmallSquare] Creates, \
deletes or modifies local files\n\[FilledSmallSquare] Imports data from local \
files\nFile operations related to normal paclet installation and loading are \
excepted.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresLocalFiles"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhpC0SRO1F+DAyUIcCQ/\
ApWq2LURq1SrOC7jr2cSq17PyT9vtlYfgZXgEeAnEEfEMjJ3sJq2KxF48nj9/M/\
PNHvXHvMd9rYHvXARfBT/\
mu9kS8muQxTPXPVOONL2ph9IVz1f3ouO6s6CB7i9meBuvUc2HZ5gLzQqlIfr2Z+\
J2gnckd9xwDmWlhQdSFN21/6tj5XKNLlhwKfQ0RfZcNwOtKcMueR8LL4od1z+1okzRnZWZf+\
lkS0QHzC+VY1h5hYapgtUYLKtErsEzqSzkXtdMIjgmTM2wIH9gBWqNt8osmAw2HhqFjCdaZtCWVEZw\
YgEf935+/cYyCwTdvWcSKCtlIq8SpSoUyXpTdHKelhVa75gk4KywWD7wiCUSWLAi4nXMQuyKZB6bd9\
fQlXFeaJ3cCLlsEQoLDO5yqCjsAx+do4WpKXAOd+1g3N5E5NcLi8FIauPgkxX1GdyAtkX6/\
hy2nqPU13NhF/Rg9nKTIekTMR5m+\
PE9fr83GfZn8RlCNiN8wWW91jKYltRCru6hoQil2uHUDJDrPL8O3eAoeCypzvwfxQyOY9fFFYnduQ3\
QGvqRB3OxaInJ33EaNzWsyfM0wZr4YYxfl94iXJ/ZJJu08kF2QE+MPqOWGRKPiQO0G/\
snN0KHNKBEyDeZVvk1USuSg4akCIAtk52/nRqtDDS4LiowYCfBezTNZvC9DcQx71/ayBJf8+\
FWEbSbF4norlmi/yqGJmGWYBUxZktsy+\
s9Uq6aeyLVqum9U6EdPDWOR5Z2Hvz1NubtsnYz1KE0bmvqY74/\
NR5sZSlratbgyNQ8XDmgP89oBo4WOod5XdEv6jItx1/s7691"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalFiles"},
 CellID->332891966,ExpressionUUID->"0014a9dd-4c8a-4b03-aa4f-93559819c0a6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WolframAccount"}], "\" \"", 
            TemplateBox[{"\"Wolfram account\"", 
              TemplateBox[{"DisclosuresWolframAccount", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Requires, uses, or records any \
information related to user\[CloseCurlyQuote]s Wolfram ID\n\
\[FilledSmallSquare] Interacts with the user\[CloseCurlyQuote]s Cloud account \
or Wolfram account\n\[FilledSmallSquare] Creates, deletes or modifies the \
user\[CloseCurlyQuote]s cloud objects\n\[FilledSmallSquare] Creates or \
executes cloud deployed scheduled tasks\n\[FilledSmallSquare] Uses cloud \
credits, service credits or Wolfram credits\n\[FilledSmallSquare] Makes \
WolframAlpha calls", "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWolframAccount"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVM1uEzEQhjZpkzZKL1zoyeLEgbwAlyrZtBCpVas4iLPrnU1MnPXisZsuJ94CceJFeA\
R4iYoj4hkYO9ltGlGJPSTj8cw3f9+43+rxJnelBr536V3hXY/\
vJzOQc0izJ9g4V0ia5sjBArOnq3O2g42x10Dn3bFZhmNQ86P3RmdWLJiQ0vjc0X1rLJYDcwtIRocTW\
BRaOCBF1lj7PB8qlNqgt4Br9/\
7au4mNBLQmlH3yGAonsj1snZFFRNhZXfNvu8nMGATmZgqZKZwyOVMZK423rBBSg2OpsiCdLllqAJnI\
S2YysgeWGa3NUuXT1wd3X76zMXz0ZIqvmMfwaywjR2PTlZPKM2MXIkawEEpJmTPB1t59/\
oqsqn80jGij3IEV0iFbKjeL8WrTRBufVo0KcbZ6FwESCxSD8kiBqqDMyW5hUpUpkh/\
AyQhnrj9QmbjpG1zgFqQP8soqhUKbklJHOYOU5khFCJyv3N5hbSctpMpRdApyoyRUis1s16roeiHmU\
Pegr4uZYFJojbxzYSyMqHcTuK3JgwcDIedTS8WmNOL2GyvKc7gBbbP4/\
TmpLTtx5hfCTlWOybN7hKiP5H2I8PNH+\
H7fI3THIQyNeSxS5TFp1jft0UJMgatPUNGYoPY4JQ7pGufXCbb73pkwePlIMe1hmJC4JrExsR7qi1b\
g6ERM6+XhLznNiBhU4Ty+ABXGYcBYl19nuf5PBsmglo+SIwrTeWt0mhjaNeIM7XD39EZoH1kbF+\
Y40UrOifqBTBY2Wc1fjHKtcqhyuywgBzvwzpm82l7efZhmj7eurCnAupIfbhRD78hlXEaslv2/\
CqKJ5DOwinZrQ6xLbG4pV00+JRLG5jfPhEb411i2buq58OPNnLdL20+\
M9oscNxjQ49242IUl5Ni0dj8vub9GIIfOGJAeHgmTsqAn9Sq+P38Bxkb37g=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WolframAccount"},
 CellID->649621283,ExpressionUUID->"5cb9a386-62eb-4293-84f5-6c225ab79798"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "ExternalServices"}], "\" \"", 
            TemplateBox[{"\"External services\"", 
              TemplateBox[{"DisclosuresExternalServices", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Makes requests to external services \
(http, ftp, ssh, etc)\n\[FilledSmallSquare] Creates or uses service \
connection\n\[FilledSmallSquare] Send emails", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresExternalServices"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVN1u0zAUZqPp2q3ahsQVcGFxBWh9AW6mNuug0qpNcV/\
AS04aq44dfOxt4UV4F8QjwEsgLhHPwEnaZKX8CF8k9vn5zt9nj3pDHnBXKuDdS+\
8K74Z8L8wgXkKSPsDOhUSSBFMHOaY7q3O6i53IK6Dzw8jcVsdKzB9N7hxYLRRDsDcyhsqjF4nbsbmj\
/S4ezCEvlHBAgrSz9np6JjFWBr0FbAB44x9gJwSlCGePfM6EE2kXe+dW5DXG7krNP+\
6EmTEIzGUSmSmcNJrJlJXGW1aIWIFjibQQO1WyxAAyoUtmUrIHlhqlzK3Ui9f7Xz98YjOxJL2Fdx7Q\
IXOGwXZZ7EXmXHHC0uqDmJ0wcPHL2ju0QPVRDpZ5pP/ahcVGawpPedVmHHTCIBdSIR/\
MjIWpTs2cAjW9xf2xiJcLa7xOqPr+GyvKC7gBZdN6/ThtLQd1O2bCLqTG8PE9Qi2vZ/srwpfP1fp+\
j3AYVWGoA5FIpMcwaDX9aS4WwOV7aKZMUF0eCwXJGufbKfZH3plcOBn/pZj+\
GdAIxDVtO3ProVX0qvHNxaLlFn/FV21qcP7FjgbloEJZN6DNc/0Px+G43R+\
FRxRo8NaoJDRERXBAJD+c3AjlRRW1ZtOTUMl4SbywLKcsmKQ0bF7r+\
fOpVlJDk91lARrs2DtndENufryd6JD3rqwpwLqSH2wURFftsuYqNrfhv0qiqegMrHSQbGzbIoMt4ar\
Rk0SuBhCcC4Xwp9FsadrZ8GebOf9e3F5olM81bvBgyA+nmuwKS9h14/ojXXJ/\
jUDPySACpJsZw7ws6N25qi/oTyONokw="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-ExternalServices"},
 CellID->910581017,ExpressionUUID->"4c72180f-8019-48ad-a9b5-55244dc46b36"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemConfiguration"}], "\" \"", 
            TemplateBox[{"\"WL system configuration\"", 
              TemplateBox[{"DisclosuresWLSystemConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Creates persistent local scheduled tasks\
\n\[FilledSmallSquare] Modifies WL system or environment settings\n\
\[FilledSmallSquare] Modifies ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "$Path", "SymbolsRefLink", ShowStringCharacters -> True, 
                    FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/$Path", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], ", ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "Directory", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/Directory", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    ", or similar\n\[FilledSmallSquare] Installs additional \
paclets or dependencies\n\[FilledSmallSquare] Creates or imports non-public ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ResourceObject", "SymbolsRefLink", ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                    Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ResourceObject", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    " content\n\[FilledSmallSquare] Makes FrontEnd \
modifications\n\[FilledSmallSquare] Internal handlers"}], "MoreInfoText"], 
                   Background -> GrayLevel[0.95], FrameMargins -> 20, 
                   FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJztVr1uG0cQjmRSIiWCCgwZ+ak2QRCkMOEuhYsQ4km0CVAQwRUiBCmc5d0cueHe7mFnT/\
L5MdLkAQKkSZEXSJU6eYC0Qbr8PENml+TpJNhIChUuzIb7M/ftzPfNzs5Rq8eb3JUK+\
M5Z4fLC9fhutIB4CUn6FjbGEmmlOXKQYbq1mqfb2JgWCmh+b2qu/\
NQv83cuxgxLJFMWG53KeWGFkzTawtZUXA3Mc0Ay3j+\
HLFfCAS2kjfW37FhirAwWFvBizANKdAOkiY0IlCKwXfrwWDiR7mBraEUWgLar7dY5PHdhf3cN/\
uNWtDAGgbmFRGZyj8dkykpTWJaLWIFjibQQO1WyxAAyoUtmUrIHlhqlzJXU88d7v3/\
7E4sskOvIcrBI2KAdUyYWimG8gIRYSZgTuMRgfGoSmUqyvmbGWAb6UlqjM/\
8tgnOEfcvcM3072HvYCjqtgt05F/MVf+\
1B4ZzRq0llwpsfTYRb8C4vs5lROIV0LPVyIx0e8oW54s7S2dFCWBE7igcb57aAymZvaLQbikyqkh9w\
4ioGxoVGNrGmMmoPBEI41Tt7XGqyj8nZzvBkYuUlcfXVKKWtTlRYSxF/LlQBvH1qCoSzS7BV9jRu+\
Nf2Z0dGGesDnz4ZhLF98ekPn118+WfffiK+//vZF7/17bsf8+Z33/\
zc3yTnLZy9FTueQf72SurHFtJHgZ3Kqkup5qWciCTxajSHQqEP6H7w8yjPgTjSMRDrvOUPeCp0cmdk\
8u2HdyF5+zjksLHlG9lrsh/WZK8Yem2kf/\
bQlwSUtCtsqAIjjU4oRUWIPPKliorLKgT0pgnkoBPQMRWKGxWJ9mSWG0tm2uheXsyUjO8ir7pTwOD1\
2exrYu9NctWS671act2k6bXJsL5/jb0DqzdGLClXhvT+\
uBOdsCw8OXF4YnGdfnSAz7kFeaHoLN45NRZGOjX+Ya2xIOLl3JqCfN3C9hMryjFcgrJp+\
P3Tryw74ZE+FXYuNUaHNa/9+kbnGsKvv/jfX9cI3ak/hhiYikQWGDWvNR1lYg5cvoCN6AS1w+\
lBhmSN80cf20eFMxkFGb8imPYxkIpiRsObzLb83SFhquaHP+IkLrG1wfnPxmUDte+h1ixUzq7/\
o0E0qMYH0YFP7qdGJZGhVgkcUCvWPbmkNA+QHoi/H9H1XlJ7YklEC0ySLzYL+/\
zDkVZSw8bFM6oYYFdZu2m++\
IOXetvjLcoZam5cyfdroVFXeBb6Jty0bP8rLtJHL8BKB0ltWEXavLW4ovyEyl6QYn1TXiLSrZ1KJf5\
B3edXRLhL977INNbSose7Ie9zSwcECttHuuTFjPqzHu9sbvZ5mVOfPAlX/l9i1gMk"},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemConfiguration"},
 CellID->409570067,ExpressionUUID->"8a7566bb-bae2-4892-a166-ae5a1cc32891"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "WLSystemSymbols"}], "\" \"", 
            TemplateBox[{"\"WL built-in symbols\"", 
              TemplateBox[{"DisclosuresWLSystemSymbols", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly modifies \
definitions of built-in symbols such as those in System` or other internal \
contexts.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
                   20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, 
                   ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresWLSystemSymbols"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVMFy0zAQpSVuEpJJDnAqFw03DuEXOonTlsykk46VmV5R7HWiiSx5tFJb8wV8HPwFR4\
ZvYO3EbkiBwRevdrVPu/ueNO6MeMBdoYCfLbzLvRvxdriBeAtJ+\
gJbc4nkCWYOMkxPduv0FFuRV0Drl5F5KJelm7++\
m7OVl8qNpGZYZCujypxOJB4m5hGQNvaWkOVKOCBH2trnnU8lxsqgt4B3c14gHcb36QG2QlCKYNqUMh\
VOpGfYubIiqyBOd2H+\
5STcGIPA3EYiM7mTRjOZssJ4y3IRK3AskRZipwqWmUSmEpAlkEoty72Ukz6rnaGPN0wggZbQFNjV9o\
kZy4zbgCWfA6uFYrEh69HhB96/MRZmOjVLWtejwlcTEW/X1nidUC/dayuKOdyDsmn1/\
bxodvar5m6EXUuN4ZsnhMpfUfU7wrev5ffjCWEQlcdIvY5EIj2GQRPpzjKxBi4/\
Q00aQZ3xWChI9jjfL7A79s5kwsn4L810p0ADFSsyW0vroQl0SjKWYt1Ihb/\
nNHMacI3zD6prkF4Jsu+/KXP/DyfhpLGH4ZDO6X80KgkNyQockGQHl/\
dCeVEeWknjPFQy3rKUOMuoCKKMzKyK83czraSGurhFDhrsxDtndC1UPjyqc8Q7t9bkYF3Bewft0L1Z\
VLrDWtj/1RFxoklJ0kFyYDY9BkfO3ZgvE7kbf3AlFMKfiDmKNMzwt4c1P+\
utHRrlM40HIhjxwayUeW4Juhpbd6wL7lcI9DT0I0C6ZDEsi5zekNvqrv0CBTKNJA=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-WLSystemSymbols"},
 CellID->199311409,ExpressionUUID->"a2ce76e2-98e8-4924-b9c6-46e5071abea5"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "PacletDependencies"}], "\" \"", 
            TemplateBox[{"\"Paclet dependencies\"", 
              TemplateBox[{"DisclosuresPacletDependencies", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Choose this option if your paclet directly installs or \
updates any additional paclets. Paclets that are included with the Wolfram \
system do not require a disclosure.", "MoreInfoText"], Background -> 
                   GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
                   GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresPacletDependencies"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNVMFu00AQpSVpExK1EnBCAq04k/5C1TgtRGqVKhuJ89Q7TlZd75qd3bbmf/gb+\
AuOiG9g7MRuKAXhi2dnPG/\
mzbz1SW8kuzKUBuXeLIYihpHcT1aYXqPKnlDnXBN7utOAOWU763O2S515NMjnp3N3Wx0rt3xxCanBI\
BQWaBXaVGOV05vD7djdsb1LgwXmhYGA7Mg6m7zXE02pcRQ90hpiso3QpU6CxjDSPmdNIEC2R70zD3m\
NsrsOyy87yco5QhFWmoQrgnZW6EyULnpRbDrTHtNgSqEtBTCGv/\
MiFoobIgG2FKCUrhLBbFLoSKxbIsaFIMAjJ6cmKlTiVocVu1F8dCbjfgSVxIMSygnrgvD4KXJBAVy3\
IXgkhxfO49RmboF37Sjp2RjS66V30Som2n/voTzHGzQ+q5+fx+2Xw5r5Bfglk0he3iPU/nqVvyN8+\
1o9P+4RDuZVGW2Xc1A6UtJtI/1pDkuU+jM2S2WoPZmCQbXB+X5M/\
ZMYXA5Bp38h058gTwyu2OwsfMQ20Ks2tYBlKyX5TvJCeOANzr+l0OAMKpzNCNpON+9knIxb+\
zA55FLDD86oxLHyMCCr+uD0BkyEqm4tnVeJ0em1yFgMuasXzGZex+\
XbqTXaYtPfjLtBP44hONtoWT7/s9WR7F16V6APpRxskeLbNaulSY38/\
4sUb8au0OuAastsaXYfONfDPmUt10vonoEhfGw9DyLtfuSb7Z4fo7efOBNzS1tqGMmDqQ3oC8/\
o9fD6J7aU8YqQ/yHDORJfxRQXZcE/mzXmL0JanD8="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-PacletDependencies"},
 CellID->510337824,ExpressionUUID->"8e2bdc81-a67b-41be-b92d-390e96c54dff"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "OSConfiguration"}], "\" \"", 
            TemplateBox[{"\"OS configuration\"", 
              TemplateBox[{"DisclosuresOSConfiguration", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Modifies OS settings\n\
\[FilledSmallSquare] Makes any use of ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "SystemCredential", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/SystemCredential", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]]}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresOSConfiguration"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVb1uE0EQJmAndmI5EUqBkuZEgaCw6CgosOJLDJYSOfJYIEQBm7s5e+\
W93dPuXpLjMWh4ACQaXoGKGh6AFtHx8wzM3vkOx/yIgmu8uzP77Tff/Hiv0YE62EwgrA5Tm6S2A2v+\
FIMZhtElUzvkhk7qA4uxiVaKfXTZ1EapQNpfGakzt3XHsDUEL1Ay4pNUM8tptWIaI3bWU+\
doyGtjjHEimEU6iGrzSzv73ARCmVSjGYJ/4Xrd1HwUgmDW6Mo+syxaNY2+\
ZnEOcbkyN8Z4bnN7ycX6U6UMenbKjacSB+\
fxyMtUqr2EBQKtF3KNgRWZFyo0HpOZpyLyRy9SQqgzLid31z+\
9fOsdqZBHnFwoPIPWksEUBjabX0zpJbrsBFomfMU0cnkLwqtjNimib/\
ZSa5UsNpULbEFmSGtfY4jSciagDVl8ooQZYXTI5awU32zDVJ2B1UTHnzLNAovamNpYp1j5rPeVtH0W\
c5HBJlDsAXrApPGOtaqcmj1mMCfgeO9nkvwD4t3qHxxrfkr5ejaIyNTyU62J1EMmUoTmkaKoh6eoK8\
1rF/g13du+Eko7DUb3e/laP7/z5t6jJ1+6+iZ7/e3p449dfe0G1F+\
9eNcty2sJZ70QyokJu0Xq7mqMbi8LVV1oUxFZOjtmYehyVe8zYVxsV3PKe0mCJJcMkHIBDffWAybD/\
6YrtI6UxoGMlCvKhTBYMJtoldJTK6Z5X7PsEE9R6Cj/vncrz1Ze4EdMT7g0/vbCo+\
68TNQCwof37vv6E6E9cs9QACMW8tT49Z9JGcRsgsCfY5k1glqFgAkM5zifu6a5l1oVUw8GfwimuY+\
UBnZCy4vCNFz5k67VrIBbQE1G3Vfi/KXdS5ANBzKPv6I5//V7fq9ab/\
qbri4fKBH6ikYLWqSZ1T44pQrNIR0Q7PiCBzPqau3FRMLjxELHuR2uD6TgEktywwQl6qLgymEFm0s8\
O9CgNCeobQYbC+HQ4Bzmg8aUw+2fIqKcyClqbjFcWFYx1pcOC5kPQl7IPy/\
u3yRmyVJlBnYXOf8S2xq1aRpLs1AEHWgPqKN0ogk6l625JzNIT2gadqA1QpN3wDhL6E/kOO/\
QH2w4QcQ="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-OSConfiguration"},
 CellID->60815301,ExpressionUUID->"27f5a42f-927e-4087-b201-0ddd60d4c988"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "LocalSystemInteractions"}], "\" \"", 
            TemplateBox[{"\"Local system interactions\"", 
              TemplateBox[{"DisclosuresLocalSystemInteractions", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                    
                    TextData[{
                    "Choose this option if your paclet directly does any of \
the following:\n\[FilledSmallSquare] Executes Shell or RUN commands\n\
\[FilledSmallSquare] Uses external evaluators via ", 
                    Cell[
                    BoxData[
                    StyleBox[
                    TagBox[
                    ButtonBox[
                    StyleBox[
                    "ExternalEvaluate", "SymbolsRefLink", 
                    ShowStringCharacters -> True, FontFamily -> 
                    "Source Sans Pro"], BaseStyle -> Dynamic[
                    FEPrivate`If[
                    CurrentValue["MouseOver"], {
                    "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                    "Link"}]], ButtonData -> "paclet:ref/ExternalEvaluate", 
                    ContentPadding -> False], 
                    MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> 
                    True, FontFamily -> "Source Sans Pro"]]], 
                    "\n\[FilledSmallSquare] Interacts with external libraries\
\n\[FilledSmallSquare] Reads or writes to streams or sockets\n\
\[FilledSmallSquare] Launches parallel kernels, subkernels or GPUs"}], 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {
                  "SectionMoreInfoDisclosuresLocalSystemInteractions"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJytVT1vK0UUfXmxEzuxHISexFczekiIggi9huIVWPHGzrPkEGvHASEKmOzetUeenVnNnb\
Wzr6SkpOEHINHwF6io4QfQIjo+fgN3du2NYxFEgRvPx50z55575u5Z65Q3uSsU8IOr3GW5O+\
WHwRyiBcTJI2yMJdJKc+QgxWSvmiePsRHmCmi+H5qVn/pl/\
sbYREIxLJCimdQOrIicNNqfbIVi1Te3gBR+\
PIU0U8IBLSSN9emn5xIjZTC3gCUQL3FG2zBNbASgFMEd0tFz4URygK2hFWkJ9bjebk3h1pX7+2v4r/\
aCuTEIzM0lMpN5QCYTVpjcskxEChyLpYXIqYLFBpAJXTCTUDywxChlVlLPnh/9+s0PbHALUe4ohM/\
pOmYsC68/YpFJU6FjLEOukbaJA1hNksBSqFw4Y5EtpWBeyN089rFVlqHK42AqZpU47X7unNHVpA7hr\
wzW2IMKGniXF+mNURhCMpZ6sSkSPuFzs+\
LOEvtgLryUYBEbU5tDHXM0NNoNRSpVwU84KRIB40Ijm1hTB7X7AqEk4HmfF5riI+\
LdGQ4mVi6JwxejhLY6QW4taPcxEQPevjQ5wtUSbO2Txj1+bX93YJSxXoPwol+O7csPvv/wk89+\
79l3xXd/fv7pLz37+ju8+e3XP/\
Y2NtzBOaqE8mLyt6qCPreQvL8rVH2gG9DFxHMi4pjEweZQKPS5vVpSPssyILl0BFQL3vJ3vaDy/m+\
68i/3SqdsDI5sJd38zjNK3lhhJVR+\
CkHE6J22stI7zxmGzoJIy0U09F5dFTkWuY7mFJIRKaVAsQUBgsL3GOY367E/dDG5Rt65NBZGOjH+\
wWxpKaLFzJqc8t3D9oUVxRiWoGxS/v7q1ZGd8vFdCjuTGoMnW5n79Y1bthB+/sn//rhD6Ib+\
GlIxFLHMMWjeOWOUihlw+RI21iGoA06tAeI1zm89bJ/\
lzqTCyeiBZNrnQF4QNzS8X52Wf4NU3Lqx8Wccyk6zwfkPLWkDduzB1jrUdNf/QT/o1+OT4MQ/\
khdGxYGhNghkyUfYXduTMD0QfzNQMlpQ47EsJTLUTWmYlvv86UgrqWFD8ioDDbZy/6ax8tce4HvKW+\
S9DKwr+PFWetT1r7Iqo8b9Lv+vmVGN9By8JeOtYZ1rc2exkn0Qy6oc6xf3D4Xa2akrxd/\
e5vxgjofUQ/JU45Y5Tnm3jMksXVHK2D7TBc9vEOgD1wkBy+c5LTL6Ek7K9vE3t9qPXg=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-LocalSystemInteractions"},
 CellID->42755836,ExpressionUUID->"42dea12c-7f6f-45f1-a336-f745d1f62522"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Other"}], "\" \"", 
            TemplateBox[{"\"Other\"", 
              TemplateBox[{"DisclosuresOther", 
                Cell[
                 BoxData[
                  FrameBox[
                   Cell[
                   "Add additional text as needed in a new cell below to \
document any additional disclosures that are not listed above.", 
                    "MoreInfoText"], Background -> GrayLevel[0.95], 
                   FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
                   RoundingRadius -> 5, ImageSize -> {
                    Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> 
                 True, CellTags -> {"SectionMoreInfoDisclosuresOther"}, 
                 CellMargins -> {{66, 66}, {15, 15}}], 
                HoldComplete[
                 EvaluationCell[]], "Click for more information"}, 
               "InlineMoreInfoOpenerButtonTemplate"]}, "RowDefault"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {5, Inherited}},
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyNU91u0zAUhtGsLa06kLjiBov78gpTm25QaVOnui9wGp+0Vh078k+\
77BnhLbhEPAMnaZKWARK+8fH5+c7f50lvzCPuC4X8chF8HvyYd+MtJjsU6QvXuZOONNHcY+\
bSl8d3euE6y6CQ3q+W5lA+\
SzWPFn6LlrS9JRym5hEdmQYrzHIFHkmRdmrPNzPpEmVcsOiOQZHrxKgUBXfJcQYe0kvXu7WQVYEXRz\
N3EyEYCCG9NBoU8/joGTimEQUKJjUDkg8sIWe2RmUOzBsmTBIy1OSpi/NocaqC+\
S2Q3SLTxjNFRRIcrM0eP/HhvbE416lZUbamefd6CsluY03Qgqruf7ZQ3OEelU2r8/\
O69RxWbdyD3Ujt4ncnhEpfDf93hG9fy/PjhDBalmmk3ixByODiqLX05xlskMsnbNZAUJc8AYWixvl+\
7fqT4E0GXib/aKY/Q4Ue1iR2VjZga+iVY1/Bpl0+/\
8AxKefX4PyxyiZ0UIbWXbfF1Xc8jaetfBVfEfrwi1EiNkQW9EjUG93sQQUoU1Wrfx8rmexYaizLKDX\
tmsSssvOPc62kxqakRY4a7TR4b3RDv5qdY957sCZH6ws+OCudWL/ISyzXkPS/+\
qD5a0KVxJYzse0seqY8jvSGCFiNOroF5fBvS3hmabfA357XXHfUjY0KmXZnax7z0Vx7tLklwGpE/\
YkueFg7pO88XKIzwSa4KnL69w+QUN5fC7dukw=="},
 CellTags->{
  "CheckboxCell", "Disclosures", "Disclosures-Checkboxes", 
   "Disclosures-Other"},
 CellID->245855622,ExpressionUUID->"9bb9473c-e196-4130-a1bb-20f9ed5948fb"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the paclet documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d426f0ab-ef8a-4b8c-8e20-93e3a59a4c80"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->951557313,ExpressionUUID->"8f0935a4-cb1c-4c0e-9951-b457617bdb7d"]
}, Open  ]]
},
WindowSize->{574.8, Automatic},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         OverlayBox[{
           StyleBox[
            TagBox[
             DynamicModuleBox[{Typeset`var$$ = False}, 
              InterpretationBox[
               StyleBox[
                PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8778145630973141`17.34116202645831*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8778145630973141`17.34116202645831*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                 Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                 Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                 DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                 Baseline], Deployed -> False, StripOnInput -> False], 
               OpenerView[{
                 Style[
                  Dynamic[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8778145630973141`17.34116202645831*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   SingleEvaluation -> True, Evaluator -> "System"], 
                  FontSlant -> Italic, FontColor -> GrayLevel[0.5], FontSize -> 
                  0.9 Inherited], ""}, False]], DynamicModuleValues -> 
              Automatic], Setting[#, {0}]& ], ShowContents -> False, 
            StripOnInput -> False], 
           StyleBox[
            DynamicBox[
             ToBoxes[
              DateString[
               TimeZoneConvert[
                DateObject[
                3.8778145630973141`17.34116202645831*^9, TimeZone -> 0]], {
               "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short",
                 ":", "Minute", " ", "AMPMLowerCase"}], StandardForm], 
             SingleEvaluation -> True, Evaluator -> "System"], FontSlant -> 
            Italic, FontColor -> GrayLevel[0.5], FontSize -> 0.9 Inherited, 
            StripOnInput -> False]}, Alignment -> {Right, Baseline}], 
         "\"   \"", 
         ItemBox[
          StyleBox[
          "\"Notebook converted to template version 2022.09.16\"", 
           LineBreakWithin -> Automatic, LineIndent -> 0, StripOnInput -> 
           False], ItemSize -> Fit, StripOnInput -> False], "\"\"", 
         TagBox[
          ButtonBox[
           TagBox[
            PaneSelectorBox[{False -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[64, 85], 0.7529411764705882]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], True -> GraphicsBox[{
                 GrayLevel[
                  NCache[
                   Rational[128, 255], 0.5019607843137255]], 
                 
                 PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]}, 
             Dynamic[
              CurrentValue["MouseOver"]], ImageSize -> Automatic, 
             FrameMargins -> 0], 
            MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
           With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
              EvaluationNotebook[]}, 
             CurrentValue[
              DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
               DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                  DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                   DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "23b1ced7-e8fb-4232-a99d-dd9cb7e86dab"]]]]]], Appearance -> 
           None, BoxID -> "23b1ced7-e8fb-4232-a99d-dd9cb7e86dab", Evaluator -> 
           Automatic, Method -> "Preemptive"], 
          MouseAppearanceTag["LinkHand"]]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "CreationTimestamp" -> 3.8724377801369914`17.34055943768022*^9, 
  "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "ResourceCreateNotebook" -> True, "ResourceType" -> "Paclet", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "PacletResource", "SourceID" -> 
    "92ce7a395baccd06b35bc67811577346991d7e35"}, 
  "SubmissionReviewData" -> {"Review" -> False}, "ToolsOpen" -> False, 
  "UpdatedTimestamp" -> 3.8778145370991818`17.341162023546655*^9, 
  "TemplateVersion" -> "2022.09.16", "StatusMessage" -> "", "AutoUpdate" -> 
  True, "TryRealOnly" -> False},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 10, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.33333, 0.33333, 0.33333], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontSize -> 14, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert comment\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8817953515714839566; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8817953515714839566]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.33333, 0.33333, 0.33333], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83333, 0.83333, 0.83333], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKtsSV+1ZfuH66ccf336FICAbKAIUB8oC
1QBVYjUEaD7EhAXNe96/+oI19IDiQFmIOXD3IBsC8QVQDcGIgJgDVI9mCDDE
IL7A5QY090D8BQlnuCHAkAcKAn1N0AQIAKoEqgfqQjYEGINAQWDoEWkIUCVQ
PVAXUC8kNQIZwJQAFATGApGGAFUC1QN1QQwBAsoNoYpL/lMvTKgSO1RJJ1RJ
sdTKO1TJxdQqT+CAwpKNDEAwIv4TV9oDAHfUai0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlAJchNy8+3Lv6/OKOvT2Z6yAIyAaKAMWJMeTN67cb
Zx9riFyGCwFlgWrwGHL32pNJhZuAKptjVswo3764bd/ayUchCMgGigDFgbJA
NUCVWA0Bmg8xoTdr3dpJRzfPOomJgOJAWYg5cPcgGwLxBVANVu3ICGIOUD2a
IcAQg/gClxvQ3APxFySc4YYAQx4oCPQ1QRMgCKgSqB6oC9kQYAwCBYGhR6Qh
QJUg9R17gXohqRHIAKYEoCAwFog0BKgSqB6oC2IIEFBuCFVcQsUwoUrsUCWd
UCXFUivvUCUXU6s8gQMKSzYyADHFODGlPQBkA8lD
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlM0KgkAUhaU2Ldu17iWibcsgEIweQMmkjYEm0dv4Qr5LIKgIUV/dGiTM
JpwDyvXOmeO5d36m3sHZDSzLike8HPe0iCL3vB7zsQnjfRD622V49AM/mntD
kpPX84hvv6DDAZd++CaS53lZlnVdX98gJkNeU6Sqqg7bjHaL8CN+SqYoijRN
kyRZvUFMhjyjcJqWPkREIcsy27ZnbSDPqOi0ikgVcFqnNyE6qi4lgj2p4puH
Dz9SlxSlROg8AVX/VBDAhM+spggrSED3NEVgwmcWc2U3qpayCpoiMFV7rSf6
ixhxYrAnRlbHyD4xsmNNnR1Tp9jIfdK01PNm+xcdthV0bvs7VDZhuw==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0025], {
                   FaceForm[{
                    RGBColor[0.96078, 0.50588, 0.19608], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}}}, {{{205., 22.66}, {205., 212.11}, {246.02, 235.8}, {
                    369.07, 306.84}, {369.07, 117.39}, {205., 22.66}}, {{
                    30.929, 306.84}, {153.98, 235.8}, {195., 212.11}, {195., 
                    22.66}, {30.929, 117.39}, {30.929, 306.84}}, {{200., 
                    410.23}, {364.07, 315.5}, {241.02, 244.46}, {200., 
                    220.77}, {158.98, 244.46}, {35.929, 315.5}, {200., 
                    410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                    "]}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 
                    86.587}, {43., 123.95}, {43., 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.31373, 0.4549, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                    86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                   FaceForm[{
                    RGBColor[0.78039, 0.86275, 0.94902], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 
                    170.27}, {48.174, 207.64}, {112.89, 245.}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 
                    237.93}, {130.03, 275.32}, {130.03, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.46275, 0.36078, 0.61176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                    237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                   FaceForm[{
                    RGBColor[0.88627, 0.80392, 0.95294], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                    321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 
                    87.791}, {217.61, 124.91}, {217.61, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.43137, 0.60392, 0.3451], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                    87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                   FaceForm[{
                    RGBColor[0.8549, 0.9451, 0.8], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                    170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    356.47, 215.77}, {296.28, 250.59}, {356.47, 285.27}, {
                    356.47, 215.77}}}]}, {
                   FaceForm[{
                    RGBColor[0.66275, 0.80392, 0.56863], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    217.61, 114.06}, {277.79, 79.24}, {217.61, 44.566}, {
                    217.61, 114.06}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    122.17, 78.363}, {182.42, 113.07}, {182.36, 43.614}, {
                    122.17, 78.363}}}]}, {
                   FaceForm[{
                    RGBColor[0.55294, 0.67451, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    103.52, 249.47}, {43.272, 214.76}, {43.335, 284.22}, {
                    103.52, 249.47}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    120.87, 350.62}, {120.8, 281.08}, {60.68, 315.87}, {
                    120.87, 350.62}}}]}, {
                   FaceForm[{
                    RGBColor[0.6902, 0.58824, 0.81176], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    278.37, 281.22}, {278.44, 350.75}, {338.56, 315.96}, {
                    278.37, 281.22}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 35}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    TagBox[
                    GridBox[{{"\"DEFINITION NOTEBOOK\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]UNDER DEVELOPMENT\[VeryThinSpace]\
\[VeryThinSpace])\"", FontSize -> 10, FontColor -> GrayLevel[0.5], 
                    FontTracking -> "Plain", FontSlant -> "Plain", 
                    FontVariations -> {"CapsType" -> "Normal"}, 
                    PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    FontFamily -> "Source Sans Pro", FontTracking -> 
                    "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.33333, 0.33333, 0.33333]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.33333, 0.33333, 0.33333], StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Open Sample\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], 
                 "\"View a completed sample definition notebook\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"View a completed sample definition notebook\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Basic\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3934291920460873112; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Basic"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Basic"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3934291920460873112]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Advanced\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7566953809767785517; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                    DefinitionNotebookClient`$ClickedAction = "Advanced"; 
                    PacletResource`DefinitionNotebook`ViewSamplePaclet[
                    "Advanced"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7566953809767785517]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[1., 1., 1.]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your paclet submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your paclet submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Language Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Language Paclet \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[1., 1., 1.], 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[1., 1., 1.], 2 -> 
              RGBColor[0.33333, 0.33333, 0.33333]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[1., 1., 1.]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0025], {
                FaceForm[{
                  RGBColor[0.96078, 0.50588, 0.19608], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.66}, {205., 212.11}, {246.02, 235.8}, {369.07, 306.84}, {
                  369.07, 117.39}, {205., 22.66}}, {{30.929, 306.84}, {153.98,
                   235.8}, {195., 212.11}, {195., 22.66}, {30.929, 117.39}, {
                  30.929, 306.84}}, {{200., 410.23}, {364.07, 315.5}, {241.02,
                   244.46}, {200., 220.77}, {158.98, 244.46}, {35.929, 
                  315.5}, {200., 410.23}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQ3fo6cIdcZ7nDwyqRde5/ix0YQCAgE8J3rXJIAwG5
TIc3QGWtwVUOs2YCwcMMOB+sfkMGXP3z3ys/Xso1h5uXL9R84NRDU4friwts
ud4XQ+TfmjgU2nJdX3wFwQebswONvyAGzgcpL9CNgZu3BGjc9cPRcPuqgdY9
7IqGu+dzX3CJSrgyxJ4TGQ6m7y1c3YuUHEDKqp5kOMi8fmQmxaAEUc+QCeeD
/SWN4Pcf+qoRY54J1w8LH5j5sPCD2R8E1P56YTncfWD5jeVw98P4MP+h8IH+
h/Fh4QMzDxZ+6PEFAOibv7E=
                  "]}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{43., 198.67}, {107.71, 161.31}, {107.71, 86.587}, {
                 43., 123.95}, {43., 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.31373, 0.4549, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{182.78, 198.67}, {182.78, 123.95}, {118.06, 
                 86.587}, {118.06, 161.31}, {182.78, 198.67}}}]}, {
                FaceForm[{
                  RGBColor[0.78039, 0.86275, 0.94902], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{112.89, 245.}, {177.6, 207.64}, {112.89, 170.27}, {
                 48.174, 207.64}, {112.89, 245.}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{130.03, 350.12}, {194.8, 312.72}, {194.8, 237.93}, {
                 130.03, 275.32}, {130.03, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.46275, 0.36078, 0.61176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{269.93, 350.12}, {269.93, 275.32}, {205.16, 
                 237.93}, {205.16, 312.72}, {269.93, 350.12}}}]}, {
                FaceForm[{
                  RGBColor[0.88627, 0.80392, 0.95294], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{199.98, 396.48}, {264.75, 359.09}, {199.98, 
                 321.69}, {135.21, 359.09}, {199.98, 396.48}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{217.61, 199.14}, {281.9, 162.02}, {281.9, 87.791}, {
                 217.61, 124.91}, {217.61, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.43137, 0.60392, 0.3451], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{356.47, 199.14}, {356.47, 124.91}, {292.18, 
                 87.791}, {292.18, 162.02}, {356.47, 199.14}}}]}, {
                FaceForm[{
                  RGBColor[0.8549, 0.9451, 0.8], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{287.04, 245.16}, {351.33, 208.04}, {287.04, 
                 170.93}, {222.75, 208.04}, {287.04, 245.16}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{356.47,
                  215.77}, {296.28, 250.59}, {356.47, 285.27}, {356.47, 
                 215.77}}}]}, {
                FaceForm[{
                  RGBColor[0.66275, 0.80392, 0.56863], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{217.61,
                  114.06}, {277.79, 79.24}, {217.61, 44.566}, {217.61, 
                 114.06}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{122.17,
                  78.363}, {182.42, 113.07}, {182.36, 43.614}, {122.17, 
                 78.363}}}]}, {
                FaceForm[{
                  RGBColor[0.55294, 0.67451, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{103.52,
                  249.47}, {43.272, 214.76}, {43.335, 284.22}, {103.52, 
                 249.47}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{120.87,
                  350.62}, {120.8, 281.08}, {60.68, 315.87}, {120.87, 
                 350.62}}}]}, {
                FaceForm[{
                  RGBColor[0.6902, 0.58824, 0.81176], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{278.37,
                  281.22}, {278.44, 350.75}, {338.56, 315.96}, {278.37, 
                 281.22}}}]}}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 35}}], 
             "Wolfram Paclet Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.80294, 0.80294, 0.80294]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAIJQygMsQf39/d3d3BwcHSxgAsoEiQHFiDAkJCXF2djbD
DYCyQDV4DAFaZG1tjccECACqQXYSsiFA84kxAW4O3D3IhuD3BVZ/oRkCdB5J
JkAAxFNwQ4AhT4YhQF3IhgBjkAxDgLqAeiGpEcgApgQyDAHqghgCyhoUG0IV
l1AxTKgSO1RJJ1RJsdTKO1TJxdQqT5CdREnJRgYgphgnprQHAMBNTEU=
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlM1Kw0AURoPduHTnui+hDgOSksW0GwMxWWSZYFqKkEJaiO4EX0J8AF9T
T7gahmjs0MxlWqbffHN67/zNy12yPguCYH/OV1K0i6Ypnu8v+JHV++2mrh5W
9aHaVM1NOUO8/P50/c9j4eIhsmkxBonj2BgThqH6Cfoo6C6QNE2jKLoaD0bx
/APhj7TWONW1zs3j9u71KXuXRh8FnVE8dko2BL4QlrdJm7295B+/Gzqjwunz
sSFSBZ4/p9tNOPgHENKTKsZyGOQjdUlRPYSVR6TqowRpOPEzy4awg4isniME
J35mMVdOIx1OAiK74AjB2ZWvlEC6qzEZ4iUTj2viZXe8nBMvJ9bX3fFyi329
J3ZKU162E8LlGXd57b8AKuPmMg==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0lazDZ1G/KHAZDURr8AxuAANp6DmCJT2lPqZ
0Y0xChvZl2ges29fZmZnd7w6zDc9z/OOA/7my/NU6+VlMeRDRcf9NgrWs+gU
bAM9WfUJjp6/B7+1wUYDVDf8MonjOE3ToiiuL8CJELcx8X0/z/OGtFlF02Ci
ta6qikhd11mWJUmyewFOhDiraFB+NcFfHMqyDMPwa/nEWRUfk8+7iVSBprWT
4oP+w4SOSRW/cvjIR+qSPhsTOg+h6lYHAUr07Ho34QQhdM/SBCV6dsFlGiFM
AoRTsDRBiZ5dYvK4Gp1NnGTisCdOTsfJnCgXE6sc3R3l4habfDq+JwYdX7Y/
0JC2gc1rfweIxIKt
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.33333, 0.33333, 0.33333], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.33333, 0.33333, 0.33333], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 6.2940000000000005`}, {6.24061, 
             6.2940000000000005`}, {6.429096, 6.284750000000001}, {
             6.614185999999998, 6.34661}, {6.759240000000001, 
             6.467319999999999}, {6.890777, 6.587419999999998}, {6.962032, 
             6.759840000000002}, {6.953660000000001, 6.937759999999999}, {
             6.96995, 7.11698}, {6.9035910000000005`, 7.293840000000001}, {
             6.77343, 7.41811}, {6.613585999999999, 7.530479999999999}, {
             6.419682000000001, 7.58385}, {6.224849999999999, 7.56911}, {
             5.49393, 7.56911}}, {{5.49393, 5.8706}, {5.49393, 4.4308}, {6.31,
              4.4308}, {6.509734, 4.41999}, {6.705573, 4.48902}, {
             6.854379999999999, 4.62269}, {6.9925049999999995`, 
             4.761840000000003}, {7.065081999999999, 4.953080000000002}, {
             7.05406, 5.14884}, {7.08081, 5.3499}, {7.011307, 
             5.551820000000001}, {6.866472, 5.693819999999999}, {6.721637, 
             5.83582}, {6.518383999999999, 5.90132}, {6.317889999999999, 
             5.8706}}, {{9.131169999999997, 8.}, {10.356000000000002`, 
             4.736610000000001}, {11.5814, 8.}, {12.221939999999998`, 8.}, {
             12.221939999999998`, 4.}, {11.727999999999998`, 4.}, {
             11.727999999999998`, 5.557409999999999}, {11.774239999999999`, 
             7.238630000000002}, {10.544139999999999`, 4.}, {10.16581, 4.}, {
             8.937809999999999, 7.231200000000001}, {8.986680000000002, 
             5.557409999999999}, {8.986680000000002, 4.}, {8.492740000000001, 
             4.}, {8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYt1Nc98vTzNyYAADHYfN1Z82BKwWhfPvbm2p
ubBZBM633HKibN99YYfGqc7dOcu1HTq+3L7euFnYQXFDUcZEXW2HzTyFa7pv
czikSj6KEN/O4/C99MEcwaUcDhXcKhp1PdwO6VefZ2l/43C4og1SweWgeVrg
+K4dnA79Tz7JX8rndHhzwFLZq5rLwXNug9qhNg6HOO8T7LazuaH2czhccLnx
4cspHjg/Y+LbGvupBnB+7vPfKz9eQvD5QB5kN3To/pv6/Ukip4MxCAgbOsx+
Jrv8hQe3w4/gx0tnPzFyuO/fOz3vkpaDKhvQZ6+NHF6qGXKskdF2eFglss79
oZGDS3fO89+Z2g6aMf2Hvp4wclhSYMt1fbG2QyGI2mDkAHKG6T1tB5D27h5E
eKKHLwDeAYl+
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4uKMiW9r9hs6aMb0H/qaoenQLnbz3HdjA4fl
lcc1rS4JOJROlmAJ0zNwSK6/aVsZIQCRFzZwYAADAQeX7pznv1/qw/mTTtd7
7P8rCOcfcVqbeW8jgs+9dVnl8UxBhyD1BZ0bFAUcZpXPWaRsKeigsvNP+5do
AQctK6AJHIIOX70i2yymCTj4JQlEWH4RcLjHxNkl/1jA4W/7l9vXGQUdgLLX
juoKOsjUJBqFGog7XF9cYMs1XdPh6+3rjcVu4hB3XtZ0sEh3yczfIA61X8th
4/4382x0JOD83ul5Qs0NhnD+r7qsPSWTEXyh5gOnFi41dDhZtm++1HtNB5B3
V240dAjaIdf6+qKmw+mFrts+7zV0uP0TqHGLpkOnY8LTC4cMIeHWp+mAHr4A
Ca2MUA==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQreD4MfnMXWkHLatJp+tPyDsY7Fbn5/4qi8Hvkk9+
F3VIxMHjYZXIOnY5hyX39/HNKRZ2mP1MdvmLDlmHDczPezR0hRw03/LuM5gp
4yC+/SLDPSdBh9p125LqZ0o75IaBWAIOGx++nLrJR8ohEqyA32F7Uv1N258S
DgxgIODQwuu/fspScYc9JZMlWK7xO6R9f5K4MEzMQSdV8lFEuIDDk+Z5Z1f5
izow+gJV6gs6aEtMvcKZIeJgbxq3y5NHyOHMu5OHnd4KO/hdnBjzz1kYaq6I
w10VtsapzSIOhjO1JKaKiMH5bqqlTLM4xByeXlC6/XOfsENUivV9f18xh9ML
Xbd9/ivkIKEWzLr4kphDua6i/JccIYc5RxQ2FGWIO+ybL6V/94kg1B0SDpZb
TpTtmy8I909km8W1o2sFHWRePzKTOiDpIJx4+LL2UkGHFce8zTsbpRzC+HQ3
zX0v6FB8XeiTI7+0A8camaiUaiGHdTfiy/znSTuAnNErLuxwZRYogKUd5tvo
AJnCDrD42rqs8rjmLhEHAIs2smM=
             "], CompressedData["
1:eJxdlHs01nccx81KWi3PzXPxXPyu1Amtm7Sy3l225VARpSKkqJzUqq2WiSLa
Gq3mJEORRiG7IOQRoiakVWs6OKZ1Gc1qrKto7ft7fs/xx77n/M5zvr/f8/1c
3u/X50uHblkaZmlhYeFHHuHX+oxu1Tojj7lxdxrSZimRbTepk0vkcXmUe8ay
LiWaT7xf9tidh8uh7BeTw1XIvEj9sK2HQ81uvdv6iypY7T0y/8tNHB6Uf/9m
t5caE9VHbo7uYVEzLnNqTqkalunW2uNBLD4oe/zq5gs1DKd6Frp0MbjtLATU
mOMyKL28ozorXYNvjKmHbF7SuPKosX6esx3Wxra576qgMfv80lT6oB00d1ao
yg/TMKV11OL3MSn5cWQfnOZlm9SkxY4lBmVEMo1OjlQWr0MVCRdVRuMdo6PN
mOl66Bvvz/n2NY2s2U430/P0KNsXfa1kJYOh/P4bixgDPFcmurVeYtBUP69o
Y5ABkd2D+f1TWJye3jJrsY8BCzZu6UvIZ9HgOeOLuSEG2Cf0+lQYOIQ/v7fm
hNKAVFJW92cc6p+OD/wqTo+0zbL42iYOuug1U5b16fCMvK57yon62utwNzfj
ItXHITOHPTf0oVY8P8gP79mOgZiIIR5uL+rWFVA67KzOIg7xYj9PdWLdOTxG
D2SvLynQY7LJUB4ThDQbDGi5QtZYHgVxPh7HLOzRdvW5791cTowXYg/NiOXj
nKdwGNGdNP5hiz1UC72H1CUsblcTAy2p4f4tTIuCn1DwHgbnkq36lNYUXAvf
8w+4TqNO5eA78qQ9Nn0ales0n0ZUw4R3v2424Jequwp9I4WXMRFVH8sNYtw4
SvS/XyfWu4/CzNZLkdNqtdg8bU85yPeTpP39pXYgpn+y1UiZedIg+SgRlKJh
kn2kRqyvmIbQRrFeDUKDj8dqBo+i50wPilJhqrDkLIjbf+gdVehTkgbTWPxN
8Cp6oEQsKStFzUHAoitGCXKq0iOJw8/hv3ZH9NpiaYUhofc6h+W7vysLjbU1
c8yhLZiQ1qrA4lDJiplPOMhyz19QOSgwcb+SSMyhobIi2eojOVatm9W1pIXD
YDMBuk4GU7p9HJzCCMn+MrF/jkNaZ8r+hHYp6hJP+TcVs/AP+LHmr+NS/BQp
CMLChGWRFNsOHLz3Tw0D7duCglLRRzC4zhBQ/pSisv3Aq7BbNLZvOPwwOlYm
chxDI36SV95bVnL0bj9rO+hJY17I/WtMhxwFBJ9Qbxpn83Y1TKhUIOK3rQcO
LqCG996C4POp4f+3n3kZGBlGYYZdbQD1hhzxBKs9eRRGCQPoJQOhOqvwIYVA
am7/2iQpBHtuLKLFup5LRJ6raNGnYxJ4uLymX7ky+PxJx629UyUI8iSTYWSw
OvLSv8WDNsP9i/xJIFxTxmcsgkdd1fi024C4NdaykBP58pWIfIAXeWSl5ny8
eK5VKuo/wgHpO8mEDcjMcR1wlFwTrhMV4txaOiCx0e/C6XsKs648TOkybPH/
+/I/ZYc7ZA==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{8.27593, 5.600999999999999}, {8.27593, 
             4.0764499999999995`}, {7.7903, 4.0764499999999995`}, {7.7903, 
             7.970409999999999}, {9.149, 7.970409999999999}, {
             9.495699000000002, 7.990780000000001}, {9.836413, 7.8734}, {
             10.097, 7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 9.345419999999999}, {13.743519999999998`, 
             9.70987}, {13.016919999999999`, 10.654219999999999`}, {
             13.952580000000003`, 10.306610000000001`}}, {{11.37113, 
             7.1364199999999975`}, {10.71228, 6.004419999999998}, {10.71228, 
             7.177}, {11.39769, 8.1788}}, {{9.82133, 12.979130000000001`}, {
             8.690819999999999, 13.38113}, {8.03666, 14.26438}, {
             9.224139999999998, 13.742750000000001`}}, {{11.738219999999997`, 
             13.74254}, {12.92535, 14.26367}, {12.27094, 
             13.381170000000001`}, {11.140869999999998`, 12.97931}}, {{
             13.176730000000001`, 12.69978}, {12.60295, 11.88607}, {12.63669, 
             13.113}, {13.30869, 14.019279999999998`}}, {{10.48084, 
             7.6483799999999995`}, {9.600349999999999, 8.933119999999999}, {
             10.48084, 10.12788}, {11.36133, 8.933119999999999}}, {{8.82607, 
             11.30619}, {8.782, 12.866109999999999`}, {10.24941, 
             12.343890000000002`}, {10.24941, 10.82582}}, {{10.71228, 
             12.343890000000002`}, {12.17853, 12.866109999999999`}, {12.13679,
              11.30619}, {10.71228, 10.82582}}, {{7.78548, 12.70037}, {
             7.653829999999999, 14.01924}, {8.325000000000001, 13.113}, {
             8.35872, 11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {
             14., 14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdlHlUFWUYxvGqIJBwl7lzl1nuxTI1jmhFQAT4IAUEqCcDssRSkDCCEDFB
ELcEzRYkCNc4uRCulLJISqyCIhVbbIqmCCaLQQgoINY3d5A/mnPmzPnOzLzf
+7zP8/usAiOWBkuMjIx8yS08G/175l0M0cA/PisvcIEK1kN7b6SYqLGTbvn9
YYoKfOY9T5siGum9mRXe9mp4FsVzDplKuNxrOT3CarDkx9TgXXcoVLTm7thU
o0FIw1+h1hsoRDXJ+12rtVgofBhLIR/b2y43Mzgckt0V9SkFz9uxVJYJByvd
QJj/GAWLuee+653FY5+P8kuvLiWO5Ng/Km3n0evwhse6YRpma2aExVzQIcb8
udmbfdRYAsWqMoUePvafu67M0KA7Klc5aq6HsZxaUHFIi+TNo45rLfTQtC1T
nU9mcHGWpXnuXR1OVTf490Sw2H8xbY9lrA6rV7S6T3bgELSlxXmjWgdm+q25
e25xqAi33Xp+K4+5hgZ5vHQ3a2Z7GYd/gn5d4X2FR+qQ8Qf7nuEQWrA+RT1F
B/e8B2N/OLAYrfq7skyiw4lji0mHDM6MBISXP2En1mZNR9c6m3Fo3hblnmrH
osGUCMtnIbt8If8rYw6SA9OYdJ7F+95XTJwPctgQSToKZ7CeyKuy4THTeNu3
bl9oEXi40bY3hp/QXzvj+vDmUB6ZGy/PcaxTo7GcCIjmYa8tXq6fpEYcleVx
25GHoayfCh015IdCDttJG0MVNEgKZll6c+I8Ymi4sd1tdgdYPHEbud+9lcZb
Hx+IPtTGwK/k+LHFZB3Rl1Dp68qg5vXmvoGrNOYEJJUOHtci7rN5Pj94qTB4
vYko1GJVWb11sEaN4e+J8dkalA3ODkiSaMb306B+UaB02bAGS/P5hG7Z0/cM
AvSuZNRqXDpr88nRSSwSK31Ljq9W407GwUv6PhZC7IJuqGAYfxqHb6q2kGiq
YOf0y9I0Kx4Fgr1DtNhHIvHPb/4LJ96mIcTO4zaP0sTMd66eU4KnQxc9sNCh
a4qtzO4xBbczH92MNNOh5NVnveLcKJEDhQ6PSlefXEkpRH27eYSZEkUPZMgj
qc/ez6GnmPzwmkyss4nF2aKedKcwKe7YCQYwuHaaBGGqFMJYtcUaCJgMqaRw
WlybHFCoxo70305WK6WQFEyVU0Uq0WdvqZjzehqCuwU5UqTuTHiv/rFS5E0q
Q4YQKzclBn++tnssY3z/Amp8XnIxfy4UFq4kjjMKdHra/Gs1poBA2ZQBBYwM
F4Vy/U/r1tRSou7J9MSadEcioESRxaGXj5DvDXWW0/A1GKFAQ0zn8y9OU0Ea
a3fKZa8cQhw7alSwFQCWyPHhrqAVrRVqkY982YR+wzzKZRO8vim0lScDgd2y
M5rBzcjdX7f3yyDQF2/DIqm9X1cXIcfD9lWHG3NYcf9bctACcJMJT30DXu8m
KsQ8E46Esq2vUKgzuikxJbwJx0dsByXyUMKiSioAp0Rlx4Jjf7qwE7odDEYz
GCTVHNJo3J9eOH9/qHacIxX+f17+BzFaMpA=
             "], {{9.8738, 4.7586}, {10.959, 7.9704}, {11.507, 7.9704}, {
             10.098, 4.0765}, {9.6543, 4.0765}, {8.2481, 7.9704}, {8.7935, 
             7.9704}}, CompressedData["
1:eJxlU2dMFGEQPZUIMQb3jvPuvMYhSraiFAvB8myAjaJiUAEF0RAiajCIIhCI
QUDsioVqMELU06C5H1gCBiT2jlEBo4glF1GwYDsJfnsL5w8n2ezOfjvzZt57
6xG/YdGawTKZLJBc4l0KbxQfI7FMgcOzCte9vyxAeS64Pf2QHNF7G3roaAHW
EO8+j14KW61ePi6dPPjm4neGagqM+EEij6phQWNTZ1IQj81tHCbeDQx9KKdw
+vOjhfHhHJ68T+K+qym4mPXLEy6zaEw4vWqJor+eZqGNaNFlxFGYTeBtpxg4
d6tCwv9QOKhxWuoqMCiJrDhz9qgcw56e2Dj1Fo2VzG3qeroCd++Q2EVjblm2
V8MONwgXyrqqg2h0TZ4TnHJRCfXzez8We9IojyUFziosmFQwY9VYGq5144+x
UWpH7psmeLhbNBj3YszQnJE0cooIEdVa7P+YMX1CLI3jBTXt1iI9RonjfKER
5xs5nmWM0NkLGBSnlVZ6bnXHvOGDubylLLJD6jMNGhOqSq6Zanw5ibfhJviI
BLzhUO9a6lepNOFl2O4j6w/wSIhpCxpS6460ugrtOIMg6fHcCPfcDxG15QLM
ha2Jsi4DCDrZUADc4hofn9FjQD/ZhhynpjAdNiWSift4R87lqQgDPPK/tT7N
8dMjnMApGgnenZj5N5wNEr/JPFY8vtKhLDNI86t42OXwNUKkr+MkB8/WX1lJ
GUaExlNRAf4cHo4WXxhhubG5rqKYdZxfmksaOLPQk+rI7v7+ZxmsGfU6Sv1D
j6PrFduvzmOQtPDrnsUWHe6L7XUMVpyv7yyfosW33uYtVi8G/pWWST8bNI7c
7r9MdT8/DCbEikgqLKo1EoYYWJb1XGzZqURNCiHgCoPe76mvSiPcpPm0LOw2
DlNI+l1gsU00+CU5mkykIoJDi/l3dHKTXMKr4mC7/elmY4Nc+h9sHJo5ssEz
OVLFhUJ5rM1fHdM2VOHQL1B88FZIfn/A40jfviwb8afdH4ME5OcuJwz/y9vT
yQBxKrx9QIicxv2XBxD7/hqhceg7kP8F0n559w==
             "]}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 8.80715}, {15.26808, 9.20715}, {
             14.75798, 8.51929}, {13.889980000000001`, 8.210630000000002}}, {{
             15.50572, 9.055660000000001}, {15.40481, 8.047169999999998}, {
             14.95886, 7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 
             8.2}, {14.66778, 7.05536}, {13.62143, 6.702780000000002}, {
             13.62143, 7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 
             8.93313}, {13.48093, 8.144059999999998}, {12.86377, 
             8.933209999999999}}, {{12.60539, 8.80729}, {13.07211, 8.2105}, {
             12.20383, 8.51926}, {11.69399, 9.207640000000001}}, {{13.34039, 
             7.816750000000001}, {13.34039, 6.702810000000001}, {
             12.293999999999999`, 7.055390000000001}, {12.262530000000002`, 
             8.2}}, {{11.97714, 8.353090000000002}, {12.00295, 
             7.415180000000001}, {11.55736, 8.047659999999999}, {
             11.456740000000002`, 9.055730000000002}}, {{10.16199, 
             7.578840000000001}, {11.359990000000002`, 7.839730000000001}, {
             11.93624, 7.021730000000002}, {10.97586, 6.66539}}, {{
             11.016440000000001`, 6.38067}, {11.74664, 6.651610000000002}, {
             11.18759, 5.92502}, {10.357750000000001`, 5.64171}}, {{
             10.419440000000002`, 5.365740000000002}, {11.27625, 5.65826}, {
             12.181249999999999`, 5.391480000000001}, {11.41413, 5.14879}}, {{
             11.429440000000001`, 3.6768399999999986`}, {11.551440000000001`, 
             4.897399999999999}, {12.526169999999999`, 5.205770000000001}, {
             12.55101, 4.16919}}, {{12.60754, 5.558840000000002}, {
             11.509590000000001`, 5.88251}, {12.20647, 6.788230000000002}, {
             13.253540000000001`, 6.435409999999999}}, {{13.34042, 
             3.2504900000000028`}, {12.833490000000001`, 4.117919999999998}, {
             12.814119999999999`, 4.925980000000001}, {13.34042, 4.15807}}, {{
             13.48096, 4.450240000000001}, {12.83467, 5.3932400000000005`}, {
             13.48096, 6.270240000000001}, {14.127249999999998`, 
             5.3932400000000005`}}, {{14.127959999999998`, 
             4.117769999999998}, {13.62153, 3.250720000000001}, {13.62153, 
             4.15807}, {14.147639999999999`, 4.925700000000001}}, {{
             13.708409999999999`, 6.435409999999999}, {14.755480000000002`, 
             6.788230000000002}, {15.45236, 5.88251}, {14.35436, 
             5.558840000000002}}, {{14.41041, 4.168940000000001}, {14.43565, 
             5.205680000000003}, {15.41, 4.897}, {15.531869999999998`, 
             3.6763200000000005`}}, {{15.547509999999999`, 
             5.1483599999999985`}, {14.780389999999999`, 5.391360000000001}, {
             15.68567, 5.65821}, {16.542669999999998`, 5.365090000000002}}, {{
             16.60379, 5.641249999999999}, {15.774359999999998`, 
             5.924939999999999}, {15.21554, 6.651240000000001}, {
             15.945540000000001`, 6.380030000000001}}, {{15.98616, 6.66484}, {
             15.025730000000001`, 7.021660000000001}, {15.602219999999999`, 
             7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJx1eXk4Ve33vimhZMyQ6czHcHDOTprtJSpNaBJ56xUpSUVJkwypjBUVigxp
ogFNUtFLSpNCJZpRhkqlMoXyW48+XNevc33PP6772GfvZ+9nrXtYm+m+bp6n
lISERJOkhAT5u1IhpbpmFwUs5ZxPmi0a8NTEU7s+ggK5wCAt5iRNeD2UcTky
mgLZdtMN12I04cGP2i9n91DQHGP4WfGNJlx9e9SwYh8FpRz2ymXmWhDk//H+
yjjE/5Xn+4ZowdLLVF3ifgp+j5gaalWpBbHpXaLGVAp8ject86nTgtBYgZtU
DgV2j26mBnRpwdgbHWX7iyhQ3T9kdq2GNqgtK3liUkVBoGB7844J2iDR/xkN
jr7nM2QP/N94cd4zTfk1o8Rw2aVfJuR8qjPaqKjbowavl3Rwx1rzD6NAf43u
eQ1cT01muJf/UB0wTXpkL5tGgQzP99NafR34vNz3YAHez6S3DnsSzXTA72z0
S69YCmoRrn2sA/+czSy2iKEg40PLcl9/XZhcOC+BuZsC755FTknqejC1prVt
Jj4ff+vtD46Y6UG1U4v5dTy/z9wVYbPn6UHq5ZdmFnh9mQvV1+kgPQjKznMP
LqbgpvGbu5Mu6EHDP1Fn7jdSUPY+ec1agb4YnmIiXL7xJQUTAiI/npM0EMMH
3uAdn6WgaMSR0RkWBnDXYPikzgR8HvNZkUunGcAShvU3j50U7AysuOiy0ADk
cPsPbKBAitz/UgNY1KQVW7iCAvUsYZ7ycgOI+PldqsWVgvqce6PaJRggsBut
MceBgo0PcUH2DIgJTvOrAwpsz61645fEAK0L16o2zKQgXv6/p+VnGFBg2/6s
yAnvv1wg71jCAGrczKUpHrje/Q+C7d4ywCd2xrRH6ynwW/+fzVwJJsQc2TX5
Mz5vTuUDw4RZ4ph7J+Vx8VZcb0dllkmOOJ7ClBpxFK8/kmzUJSZcyJB9IrSg
IKKO7T4T8dOCd+p6TApO7GE/q7/IhOmNcbSWMgWWe52jHc4zoTj6xg4LaQqc
71O3zmfj8Tz7L5taRbDjnKpgRCcTNEo1dui+EkGAj0z9xsksaFfe84VRKoJR
Tt+mNYaywOvixw2XH4rgevKpCe8TWKCvE7p5SbUINHfoHhReZMGVYQ83jqoT
wUhynqcscN30Y0F4iwgCC3veFXazoHJR7AqBFAVjI63dGhzZYvjLp6Lx7HoR
BGWljR2ZJY752uOHbbsgAtumMQGRSWz4iGV68IgI9mI734hlg83cdIf3kSL4
nnKo3T2CDUlT8MAtImigj7+9EcQGNVtkhDUiaCuRq6sMYMNP21TOkvkiUCuM
cb96mQ3G66aPMx0nAm0ZpxGm39nQsjb1Y6yOCDbD84MmAg7opC41esAQgbdJ
R+JrGw4ssqnXn8UXQXjby+pQDw6sak6rdTcVwYzfbrVXwznAos7W77EQQVRD
gpPNBQ6URo2aXQIieC9oWRWuxBXDI7p6hVO0RFBF9sVZHG+9qapk+EkIpkyD
Nh9L7p/6eyaEbkF52HU2F9SUDJPX3xbC68fedq/UuIBdSa3PE4I92zT+ijQX
Kr5Pyp94RghtSIOvOzjgkHPQMyJaCBcvzd9w1YgLpKyTvYXw9ezrgKMuXLiy
cazDRjshrHzxOz5+NxfKk6MWaM0SAu7Ci7o0LqjcPLaHbS8EnW5+vnMxF6Zv
Up4431EIM70eXFVv4oJN+YqqpnlCKDp3fctpNR7kSjfFGC4UwrE7X9d0bxDH
Lt0VQ9q5QuCRfT4tjnmkH7rNwYzcfwAP2iInzbj2zBy2SmKDuPIgxTEixCbf
HNQUVHzlpvIgu33qFNdUc7jnUvNkhDkPrG36ZDSjzYG5tNq8Ro8HPf6TVqRP
MQeLr+OmTp/Cg6rNH3iiLjM4GqSZt8IDj+/Y2nnnjBlk9UgctwzlwQUPtnIO
4n/x54rJPFj69ffmnNNm4Er4uZAHqduUEnVPmYFjr9aG6noevPGL2vs+wwwW
PnUbtVuJDxEeS15NO2AGcUpbLc+sFcflL9ZoJpmYwd1d0kyXWHHs2dsTM6zJ
FHKjxlL7ZvNheO4++yX3TCHx9q3Gd8Z8KDWbWzgm1xQYKde+u4zgw7b5cQoe
yabg6Fwv6fmDB4+0577QiTGFuPw7j8Pf8MD/7kNfaStT2L1Xb0H9dx7kIA2s
/CIAe9np985I82FT1+oL01IEQOjyvTIfUsyiIx8mCuByyb8HxuD13qfvPJy3
TwDxVqgIs/iwSqhYMn2nABrsP7j9WofrJTcYIIDKz9w9lUl8KJZZ+/rhfAH8
R/i7TRynGvkv9Wgy+Z/uGYrhElTZ1RdMYBERvBw+fNpcBp5HTKCKFGYEHx73
lFanRppA+9ijypIr+bD1RV3Ova0mkH+65TrLjg8LvTvAxNcE+qze3QwV8uH+
yDcNLH0TSO99PdHbgg+yqup0aZkx2Ju6fopGfPAK+4hGoDHcrivLacTjo7vs
y7b6GUOQsPXVNjxfT7bc7yvuxjAjI3GuAK+n+6jXe4Sj8eB6DqXm3pKeYAwN
3w0er8P13lC7uHT4EOPB+/kbG8bZmh87ZPRHb/F5/I13KmLHbjSCbeS+8HmG
eJ6YYeRlBPsmnghrx+fdvP3d6vJ/jIBtGBRzFfdDhNtxa4ERfJ4edTcX98uJ
8JWDEaDqS6xT4YMzWfBvQ6DO/8y3lOEDsTNXsg3BYk3f/ZlYL3vK2MFCN0OI
JfWJ9fLbpvvzJ0dDiCB8h/8/v4sxlDvJEOKWjVy3HOsNVxE8gm0IUy6EyL/C
6x01bZr3zxBDWEx0AOv1nbPmlcoiPkg+mHlgXqw4zjO8aM1z4cOk3jEux9aK
Y2x+OnwGHySKdScHYT+p5iNBTcV9aH4aX479ZnFgXd5Vaz64Hm6d9auAB33l
y24UAB8u5Z7S+53Eg/r3QeEZiP0CPx/mYj/v3hdhFNfGg6I+pwse2O/DrhUe
FyHPoHl8MQ75YN1y/Z9hy3gQUHtE5QTyhUvmmIcT7XlA6LzejAcj9e410BY8
2LXpasRXWx4UZNntOj+SB5wv59uOIh/F+DT1ZH3jwnPFlxqeyFcSNNZdOhcq
h6AhPS2O5wquXBo1hQv2l87Eft8gjgXxWJDTuLA6adORDORT9tTlzrdncSGM
6Dfy7R2V1d+MHLlQL4sGGPkYWS94jhP3T/0hXz8ifOLKhV0oCxrI5yZqqKya
XOi3Mcj36T7YEVUc+LxLKi8M9aCAfnPGKYEDBZ+nbEhBvfBzvDn7ZTAHfGxu
jwtGPakNNnl+fhkHXpNCR72RsltT/96KAye0o09eRD0i8qOhwYGZlx3ueKBe
LalbYlZ/nQ0hhKCdxTF2addbbzbs1c6MCVYSx28Cjl61D2PDqS13jCagnpKv
0+LY4Lk/7mIu6u3GBWOsn6awoQjLYx3q8aHMN6NqTiNuCle5iXq969+PTXNQ
5+OTJlcooJ7bZD+9yAhkQ23Xi9GzUO+P3V1skzWVDV78sGPv8biT2YEJTSps
mFk9+8Zz9Autt85q2vxkAbF1N9FPeAQ/n7ylhgVXJ66+sgT9xsnOPTmT0Qf1
Xdj2PRf9iCCtYYtvOAvy/G4tDkS/QmID05AFraPNdOWyxPEz5tgSxWYmZKlV
2NY4iuPiet/GRWos+EL6Gf1Uf70asyDc8cQKJfRbLu1XX0Shb/NpUa1yxXWU
rrEIueLIAoHJnJnWiSw4TYzrvyxAVjhot4MFFk8K7T+OZsH9o1PzfuDvuDmP
RIxhLAiNt4n2QT9YoHU/MqCBOegXOaTeHjABU8icmegnbdbu1mnNYsKby8Rx
MwFdiqHCTiZ0o2xMRj+aijbMcBETRtKlry4jXoF01dzBAP8Qt736OeL4cPeW
+XH3GRDvulgxcpY4JjbziSwT/BY+3zQV/fScklYVEZcJZ3UXL5+IfvseMXpW
zEE/rvQFKx6vv3XjXsnn6NflM75Ix3oz/7cfDGhI07411J4JUt+uBRWj309z
PnW/04IJ/XFCkgETyhI13QyYQC2evlAN88Kshs9yp4YwITa5TjYQ8wR1765L
zTsGpBOew7zBaPNx2n6DAV4CDF6YR3r0oqS272eARrPalv2YV8xfc2RDxzBg
r4OkMFVSHDdu8d30TJ8BLCIMmIf+xv0xcBXmEOJPMU/16/deBiyOxhNg3pLR
NPEWnmNA7Q80uHP14PAqFA58fjJosz6b6kGd/iyDa7UMiHg1fGytmh5sCzOf
ffIFA477TlaoLtGFVWjbFlUhJnW8QRfQnbaqVDL+9AFTFx6WkQ8Dznqu3h5X
oQOG3zkfku4x/vjXYB3wxHg54Q4DctE+XsV8Gfv9gHdaNgOsbq4qjsb8qX8t
/YYnrpfQRBDmU+sriRbTVjPgCAm4mF+j/H7z1KcwQFhkNWEj5luP/oBvAIsD
FUK++fzf2NGyQeHrfm0xPHC+Q8RgYv4euJ6q8/hLdzGf+7vM9rHC9TyzsbgW
hvmdyK0zrjezdNbYSMz31auOn/heyoC1ij7xbpj/D2RqBiY9YMDdI2iETLXA
QjGqUfIpA+SkywvDozVhHBko4POd8s2jbMknDSA0UoXPx/KM1SLXSg0Ysvvs
2vazDJiUvDDtzDmNwf3LnPB+RX6oxuD+Nhe/drk+R2Nw/9+QOcaTkWJ4oH4C
AjB5/lYXw5EBI+cFYf19fG3wdeED9cH6TDqMn6vqQOLvMaxfEo9TT6uDWvK+
1TZY3/33f1QdpD3nZ7fqMyEB6aApWR2OQdrdA9gfMlZ0jPJvNYiv8p9cOQf7
X0o+ysBDDRIspn3KxP7i7G/2VH+gCqHlSuyd2H9BSJPOmaow8XQS4yP25+M5
7srOW1ThP2/Pm+bYvwu2TLy5yloVqlW/W5djf7/Pnz/BuU8FhpF+xfoN6Zng
+8hLHNcgLTcif9w6b7b22FFlMTzAP6lIw5sSlKEovqVGDvkp/0XUL89EZdi+
jFooPM2EkB3RI8ccUob4Ec/6xpcxYXEo84xrijKklwRukWxkwij5NeMTM5Sh
xeLxvC3IjzennFv1RkUZLEJZGiILFuRGHujRU1D6s/9uLBC+e7vyny5FmO/P
SexD/s0skz28/LgiNPc3Fv5/NPkoQl6/j2bBOPbMbWE5w2E14W3k90yk41/q
wyEE5VUF+T9XI03KrUBBDE+X3jyMg/oRG887ke4qL4afkTkQ6s/m1Ieny+Pl
wRFpxhp1wavfH8nD0+0S85JRvypKyA3Jw3Yyr0F9K3reWNomowC/5tHrjFXZ
EHFvQXEmRwG+669MykV9HDd9/U8lI3l4iHZXGfXTa8/WiGlj5WD2L3RAqJu5
40E43WEofE6dJHiK+ltLjGSr7KA+C4fKNTb7yf7ZJ9TvzWSwUTcEHPU1vOeg
vnsRXbAcAgkk16D+d5GAXSwthuU+9ek2on+QIPWYKiWGTZ0weKH/qOk3ktJw
dq5SZTP6E1/uREspP+n/+TvOn/XlSsOdbVX3d6K/0SK8900aiJ39Ec8B5x97
cStlYBeZK6E/8nqZUSbrIg0pZN6F/smt5ImJ52EpADsNYSj6q6J1aDAbJEGl
dx13Ivqv/rFQiCRILMIEif6subV6+Z5uiUH/1lWlyzjkITHo74QhV2CHex89
4P9iN/rpKLr1iuEB/+iLsVXubLcYHvCfkNXxYfPsXnrAn1acpHviWL/o3YQg
0b+GpAzfu7/6Fx3QcHGSEvpbt35C/03XJaIAo//NLbYYbqDSR/NXFGrdz0Lf
Ot5w2cnPv2h7bOPx6J9zTXb0nXvfSw/4a9+qJm+Tjh56wH/ndvre8+P30HNt
dy8sQH9ei12WqNlND/h3YQUflaSLHvD3rUofruSEddKG5Hv0/wxLg+rdUW1i
eCA/SBRtllXc/kMMzyaDJcwfjCWjf65IbqcH8knrLlLQHfRHGQsVS8wvufdG
tSvv6aQtiXDONQTAeJe/vIuu17Zoc8D8wyB+fthPOpvkY8xH6aSQvLrojYS/
MT+l26oWxtR30hMnautyMV+5mVoNKdrcSasP6bZNxfyVXpGwwSi7g0ZVa7iI
+ay1cE5wx7F2ur9fMb/FkvwW3EbPOsP024f5TmhbxFxg9INuNdP8loL5DzZf
QsfSKob///wojgfyZy3GvdCd3+n1aHsUMJ+6EX4r/EGTsVsF5tfWbcm/W+60
0W/dpyqexHwrJDx9o53evPWEwAbzrzK267dtHTSRuVmPjIGB9uj8Px303cfh
ZpkGJqDcT5gd9B0yp8B8XfvtUOj9zR10uW1Naxvm71iSowvaaXR5/13BfF5E
8kRpG229Dh0w5veB9fS+K/T2xHw/sN4fGFv+Hcz/rWK4ewYGi/kCKOLAHFNX
cSzgYaEECEAo+BZyAZ9nBiGgnQKIZT+rnx/SRt+9fNT9yD4BVNwgA4h2OoR3
c/epRAGk9w+sOmjX1owcRgo5/mpvuH8n7YLlJfFFACFEX9900ph+yy5NNgXf
BJnMLM8umr1ymcPEGMTEVyn8pC9+jaoNTjYFNzKg8cB66p1jaJtrCsrm3QqP
YzrpoEUyfa73TCG2f77ZQffPYZtMgUF4AevVekf9nUMmZiCBZ1+N9fw39kGb
bXvADBj66HiwH/7Gjtp9Vu8yzKC1U1tzxM5OWpm9c7rOKTMQ5jvPDcN+658L
nEY8Zlv6SK1umjPsUNG5M2bg2z9o7KEH5l+xxHdjP4/40TCkphPPJ0kcXC+N
v44aO8UcoFPfbPyXXzS3/7rmUEFeTKj20SQ2mKUitkPnHPGbVrohPGycj5j4
rZpf9ArR+Z/5zxDv9V3cinx0aK1qWFE3ni+OP6Ma+eoBySVcIRRZjj3JRz77
G2PVTOYvFIJbOBpa5MO/cQ+LTCCE4OtElK2PliBzBkch1C59rHUO+XZlvmSa
gb0QnH8KysN6JP7ML2YJwW5GSghvhyQYSZSO9rITQk39fImYJknoIfXpLYQK
uvh2VJLUHz8ZjceT20E98GHetZY/IwSJpYT5ZUBF2+nbtDwhdB1/ceod6kl/
m9zG9ZzPkH2CehNHcuQzITCI3qAeYUqWNf4khHySu1Gv3pF60RJB7vI70xio
Z3/jBe9OJN8CEfjOdnCuRz38Gw/Mn5XLKt91op5afUbhMRUBY1VWgR7q7cD8
Op3IwXpZmHZYkbrHEEEmyZuo16Td9+qIwNnuJ3bWUNiL6ZYzTgTC8rDrFy3l
YEnG1tVu80VQc+HyDTtDeUCVKYM1IohYWBC3Bf3CqOiTFw9swfXEPJtbhX7i
cOj9rs5I0aDfKPp2eWXCERHkN0oU6xbKQy/JSxfwfJ/QsKJfCbSdHcmpF0Fz
veWoIldx/G+uTp6pFAVdHjmbgtEP/Y1F5ActIpA4UOqlN3I4xCjrr9GtE0Es
llsG+q3+uUg13o9HpX8ApQheJD48xONlry97maEIBayutzNL8fn0v3hSBDIt
pV+JYDPxYXJKcOVDedDxVhEsyEZmRj84mgimNAWZRA/QL04j83BlatBP5rsH
P5/MpODImrWzHdBvDry/cZdUy9+IfnTg/Y7y6actoehXB97/rCUG5qg4ntr6
X3xLLAXGrBLjN+iH/8YJZGC5noL1ZrcXeqKf/hS9M++IBwX1X86+DkC/nd39
z5rbThQETtAf7Yh+PIrkBby++5fFU6zQr/e/nwIKWtq/7Ou8rwo7ZG7vEzlQ
4NiJBOCuBhwyZ3SlIPugZ4THLzXwH3p+9K4VFHCCha2vMC8ctwe1ZRsouDU5
wcof80RXxCHVGTspSCC5HvNG6IZpBzsSKGgl7xswj5BxEXm/ByQ/YV7pCfIu
8H+J56/5N8Dhtzgm8kbeH1roLN8fh3nob2zZH+wpsKpiji3BPLVIXiN8dA4F
pI2KMG+RFJ2ShuebXrdVPVsDhjfYXleIw/0bQghaA/5+v/z/ADhf7kk=
             "], {{13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.53726]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          FaceForm[
           GrayLevel[0.89804]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.53726]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.824, 11.118}, {17.823, 
            11.28}, {17.692, 11.412}, {17.529, 11.412}, {12.235, 11.412}, {
            12.073, 11.412}, {11.941, 11.28}, {11.941, 11.118}, {11.941, 
            2.8823}, {11.942, 2.8372}, {11.953, 2.7929}, {11.974, 2.7531}, {
            12.045, 3.002}, {12.271, 3.1746}, {12.529, 3.1765}, {17.824, 
            3.1765}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 9.647049999999998}, {16.647060000000003`, 
             9.647049999999998}, {16.647060000000003`, 10.23529}, {13.11765, 
             10.23529}}, {{13.11765, 8.47058}, {16.647060000000003`, 
             8.47058}, {16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9451, 0.76471, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {12.638179999999998`, 11.}, {
             11.68506, 12.668}, {10.791059999999998`, 11.72708}, {10.62513, 
             11.553912}, {10.36001, 11.522025000000001`}, {10.15775, 
             11.65091}, {9.221229999999998, 12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29412, 0.83922, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.7098, 0.80392, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{9.617389999999999, 11.266640000000002`}, {
             9.355364000000002, 11.506809}, {9.073421, 11.7243}, {8.7746, 
             11.91677}, {8.7746, 11.91677}, {8.66219, 12.48534}, {
             8.587309999999999, 12.73394}, {9.09304, 13.23107}, {9.16793, 
             13.30761}, {9.65491, 13.785590000000001`}, {9.687847, 
             12.945878}, {9.675329, 12.104999}, {9.61741, 
             11.266640000000002`}}, {{8.50275, 9.731640000000002}, {
             9.072936000000002, 9.76756}, {9.631433, 9.558930000000002}, {
             10.038419999999999`, 9.15798}, {9.701419999999999, 9.06244}, {
             9.66393, 9.043289999999999}, {9.32679, 8.947599999999998}, {
             9.042788, 9.148219999999998}, {8.700315999999999, 9.24909}, {
             8.352910000000001, 9.23443}, {8.391562, 9.40336}, {8.441624, 
             9.56948}, {8.50275, 9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.86667, 0.066667, 0.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.33725, 0.83529, 0.98823]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["
1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["FileManagerTopSpacer"], CellMargins -> 0, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    CellOpen -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Paclet", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]], 
   Cell[
    StyleData["DisclosureDetails"], CellMargins -> {{94, Inherited}, {10, 0}},
     FontSize -> 12, FontColor -> GrayLevel[0.5]], 
   Cell[
    StyleData[
    "PacletDirectoryChooser", StyleDefinitions -> StyleData["Output"]], 
    Deletable -> False, CellMargins -> {{50, 40}, {Inherited, Inherited}}], 
   Cell[
    StyleData["PacletDirectoryChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        PaneSelectorBox[{"Notebook" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
             DefaultBaseStyle -> "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"], "Custom" -> TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                    StyleBox[
                    "\"Paclet Directory\"", "Text", FontWeight -> "SemiBold", 
                    StripOnInput -> False], "\"\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"]}, {
                    StyleBox[
                    InterpretationBox[
                    StyleBox[
                    RowBox[{
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Notebook"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Same as Notebook\"", "RadioButtonBarLabel", 
                    StripOnInput -> False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}], "  ", 
                    GridBox[{{
                    RadioButtonBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[RSNB`cell, {
                    TaggingRules, "PacletDirectory"}] = RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {"Custom"}, DefaultBaseStyle -> 
                    "RadioButtonBar", Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]], 
                    StyleBox[
                    "\"Other\"", "RadioButtonBarLabel", StripOnInput -> 
                    False]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnAlignments -> Left, ColumnSpacings -> 0.3, 
                    BaselinePosition -> {1, 2}]}], "Deploy"], 
                    RadioButtonBar[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}], 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, {RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]], RSNB`oldDir = 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = #; 
                    Switch[#, "Notebook", 
                    If[
                    DirectoryQ[RSNB`nbDir], 
                    If[
                    And[RSNB`nbDir =!= RSNB`oldDir, 
                    MemberQ[$Packages, "PacletResource`DefinitionNotebook`"]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}]; Null], "Custom", 
                    If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`nbDir]]]], 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = 
                    RSNB`nbDir, If[
                    StringQ[RSNB`nbDir], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]; 
                    NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]]],
                     CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]]& ], {
                    "Notebook" -> "Same as Notebook", "Custom" -> "Other"}, 
                    Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]]]], 
                    "Text", FontSize -> 13, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                   ItemBox[
                    TemplateBox[{
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{16.273, 20.84}, {16.273, 
                    13.062}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionOpenAllGroups"]; 
                    SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Expand folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    GraphicsBox[{
                    Thickness[0.02439], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.02439]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{12.383, 36.391}, {35.711, 36.391}, {35.711, 
                    13.063}, {12.383, 13.063}, {12.383, 36.391}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}]}, {
                    EdgeForm[
                    JoinForm[{"Miter", 10.}]], 
                    EdgeForm[
                    Thickness[0.085346]], 
                    EdgeForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]], 
                    FaceForm[
                    RGBColor[0.98039, 0.98039, 0.98039, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{4.609, 28.617}, {27.937, 28.617}, {27.937, 
                    5.289}, {4.609, 5.289}, {4.609, 28.617}}}, 
                    CurveClosed -> {1}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{12.383, 16.953}, {20.16, 
                    16.953}}}, CurveClosed -> {0}]}, {
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.085346], 
                    RGBColor[0.65098, 0.65098, 0.65098, 1.]}, StripOnInput -> 
                    False]}, {
                    ImageSize -> 14, PlotRange -> {{0., 41.}, {0., 41.}}, 
                    AspectRatio -> Automatic}], 
                    ButtonFunction :> (SelectionMove[
                    First[
                    Cells[
                    EvaluationNotebook[], CellStyle -> "FileManagerTopSpacer",
                     CellTags -> "FileManager-PacletFiles"], $Failed], All, 
                    CellGroup, AutoScroll -> False]; FrontEndTokenExecute[
                    EvaluationNotebook[], "SelectionCloseAllGroups"]; 
                    FrontEndTokenExecute[
                    EvaluationNotebook[], "OpenCloseGroup"]; SelectionMove[
                    EvaluationCell[], Before, Cell]; Null), Appearance -> 
                    None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Preemptive", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Collapse folders\""}, "PrettyTooltipTemplate"], 
                    TemplateBox[{
                    FrameBox[
                    ButtonBox[
                    DynamicModuleBox[{RSNB`r$$ = 0}, 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}]}, ImageSize -> 
                    14, ImagePadding -> 1, PlotRange -> 1.3], True -> 
                    OverlayBox[{
                    AnimatorBox[
                    Dynamic[
                    BoxForm`RemapVariable[RSNB`r$$, {0, (-2) Pi}], 
                    BoxForm`RemapValue[#, RSNB`r$$, {0, (-2) Pi}]& ], {0, 1}, 
                    AppearanceElements -> {}, DefaultDuration -> 1, ImageSize -> 
                    0.1], 
                    GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[0.1], 
                    CapForm["Round"], 
                    GeometricTransformationBox[
                    GeometricTransformationBox[
                    GeometricTransformationBox[{
                    CircleBox[{0, 0}, 1, 
                    NCache[{(2 Pi)/3, (7 Pi)/3}, {2.0944, 7.3304}]], 
                    LineBox[
                    
                    NCache[{{-1.125, Sqrt[3]/2}, {(-1)/2, Sqrt[3]/2}, {(-1)/2,
                     0.24103}}, {{-1.125, 0.86603}, {-0.5, 0.86603}, {-0.5, 
                    0.24103}}]]}, {{{1, 0}, {0, 1}}, {0, 0}}], {{{
                    Cos[
                    Dynamic[RSNB`r$$]], -Sin[
                    Dynamic[RSNB`r$$]]}, {
                    Sin[
                    Dynamic[RSNB`r$$]], 
                    Cos[
                    Dynamic[RSNB`r$$]]}}, {0, 0}}], {{{1, 0}, {0, 1}}, {0, 
                    0}}]}, ImageSize -> 14, ImagePadding -> 1, PlotRange -> 
                    1.3]}]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]], 
                    ContentPadding -> False], Initialization :> (CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}] = False), 
                    DynamicModuleValues :> {}], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    If[
                    And[CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectoryType"}] === 
                    "Notebook", 
                    Not[
                    DirectoryQ[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[
                    EvaluationCell[], 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{"\"The current notebook is not saved.\""}, 
                    "PacletDirectoryChooserErrorTemplate"]], 
                    "AttachedMessage"], "Inline", 
                    RemovalConditions -> {"EvaluatorQuit"}], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Appearance -> None, Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    FrameMargins -> 2, Method -> "Queued", 
                    ImageSize -> {Automatic, 20}, Evaluator -> Automatic], 
                    Background -> Dynamic[
                    If[
                    CurrentValue["MouseOver"], 
                    If[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}], 
                    GrayLevel[0.98], 
                    GrayLevel[0.92]], 
                    GrayLevel[0.98]]], FrameMargins -> 0, FrameStyle -> 
                    GrayLevel[0, 0], StripOnInput -> False], 
                    "\"Refresh files\""}, "PrettyTooltipTemplate"]}, 
                    "RowDefault"], ItemSize -> Fit, StripOnInput -> False]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Left, Right}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"]}, {
               TagBox[
                GridBox[{{
                   InputFieldBox[
                    Dynamic[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "PacletDirectory"}]], 
                    String, FieldHint -> "Choose paclet directory", 
                    BaseStyle -> {
                    FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
                    ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
                    FrameMargins -> {{3, 3}, {1, 1}}], 
                   ButtonBox[
                    StyleBox[
                    "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, 
                    StripOnInput -> False], ButtonFunction :> 
                    With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                    EvaluationCell[]}, 
                    WithCleanup[NotebookDelete[
                    Cells[RSNB`cell, AttachedCell -> True]]; 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    True, 
                    Replace[
                    SystemDialogInput["Directory", 
                    Replace[
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Replace[
                    Quiet[
                    NotebookDirectory[RSNB`nbo]], Except[
                    PatternTest[
                    Blank[], DirectoryQ]] :> Directory[]]]], Pattern[RSNB`s, 
                    Blank[String]] :> With[{RSNB`nbDir = Quiet[
                    NotebookDirectory[RSNB`nbo]]}, 
                    If[RSNB`nbDir === RSNB`s, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = Inherited; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Notebook"; Null, 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectory"}] = RSNB`s; 
                    CurrentValue[
                    RSNB`cell, {TaggingRules, "PacletDirectoryType"}] = 
                    "Custom"; Null]; If[
                    Quiet[
                    PacletObjectQ[
                    PacletObject[
                    File[RSNB`s]]]], 
                    
                    With[{RSNB`nb$ = EvaluationNotebook[], 
                    RSNB`$cp$ = $ContextPath}, 
                    Quiet[
                    
                    Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                    Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    341138948110023950; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    
                    PacletResource`DefinitionNotebook`\
RefreshNotebookPacletFiles[RSNB`nbo, RSNB`cell]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    341138948110023950]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                    Null]]], NotebookDelete[
                    Cells[RSNB`nbo, CellTags -> "FileManager-PacletFiles"]]; 
                    AttachCell[RSNB`cell, 
                    Cell[
                    BoxData[
                    
                    TemplateBox[{
                    "\"The specified directory is not a valid paclet \
directory.\""}, "PacletDirectoryChooserErrorTemplate"]], "AttachedMessage"], 
                    "Inline", RemovalConditions -> {"EvaluatorQuit"}]]]], 
                    CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                    False]], Method -> "Queued", ImageSize -> {Automatic, 24},
                     Enabled -> Dynamic[
                    Not[
                    CurrentValue[
                    EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
                    Appearance -> Automatic, Evaluator -> Automatic]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {"Text"}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "Column", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"]}, 
         Dynamic[
          CurrentValue[
           EvaluationCell[], {TaggingRules, "PacletDirectoryType"}]], 
         ImageSize -> Automatic], Background -> GrayLevel[0.98], FrameMargins -> 
        10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryChooserErrorTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            GraphicsBox[{
              Thickness[0.028571], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 
                  1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQfbJs33yp88YO51advxqWI+LApN0udvOdsYOre9FP
/pciDhGWW06U/TN26EiOvePWLArnb35VvFXUWgzOtzeN2+WZowTnX614qWZ4
QgluXmvNhc2RosoOMPsOnlroui1Y2SGMT3fT3PXGDn8kiq8LTVJ24Lq+uMC2
y9ihx+sVi8lGZYenF5Ru/4xD8EHW8Djpw/lvAnfItb7Wg/NDHi+dfWSBHty8
fKHmA6cS9eD2/Vn58ZKvkh7cPQG90/OEmPXg7oXxYf6B8WH+hfFh4QEzDxZe
MPtg4QlzD9if74Xh7pU6EK3guFEY7h8YH+ZfGB8WHjA+LLxg5qHHHwAbtMYJ

                  "], CompressedData["
1:eJxTTMoPSmViYGCQBWIQfdzbvNPxgLEDSxif7qa7Gg6WW06U7btv7HC14qWa
IYemw78rQMZHY4cIkISdpoPIOveHVV+MHRhAoEHToXSyBEuYn4nDwVMLXbdN
NoXznRKeXlDabQox19bE4V2NvWncLVMH5ds/67JkTKDmmsLNz5j4tsZe1Mxh
2+e/VypOGjs0TnXuzlE3c9g3X0r/7hIEv/kAyCI9OB9kHV8ugg+2T1YPbt4u
Tx4m7eO6cPt+BD9eOrtFF+4e8Zvnvgcn6zpot4vdPLcdwa8FSu/qNHU4ewYI
ePTg/oXxYeEBCg4RPT14eBXacl1fXKAHD09jENis57Bs9hGFDZs0HAJ6p+cJ
MetD5OdqOIDDPwHBjwM52NsYzp81EwgqEXyQ9uYFxnDz0OMPAAfUunk=
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAmIQbcixRibqiJFD41Tn7pzl9g58upvmvlc3drA3jdvl
mWPv0Hzg1ELXMmOHaUDp59L2Dkza7WI31xlDxLfZOQT0Ts8TCnZ0MAo10Fop
zOsQlWJ937/X0eFMvcf+2rlsDue/Bz9e2u3okLoqISRIncFhnfvDKhE/R4c/
Kz9e8k36bJ8vBDTJ0NHh5OQl2Wr3X9k7JTy9oMTt6PDE85Lp5PyH9uogB95y
cHilKHXX8c0Vex6QA1Y6OOgfsLMqfbrb3i9JIMKyxMGBAQqArl9+zBrB318r
a5HuwgLnV0asMD27mwHOjxTffpHh3i97mHmb9PIWM+75Yg+zz/Dyt/VrTN7a
w9wzU8jzi1HXY3uYe4Gh8nvlxxv2MP8YXD0TxeWxfT/Mv9M49185P3vXflh4
/LrA+lW3+Jo9LLzA+hbpwcPzV13WnhJhfXh4P146+4jCBn14fIDD09oAHl/F
GRPf1sw3cDj8VSOm/5G9w5vAHXKt3IZQ/0HDoQHBFwFFwBcEHxR9zQlGcP3o
6QEAaQXeGQ==
                  "]}]}, {
                FaceForm[
                 RGBColor[0.85098, 0., 0.10588, 1.]]}, StripOnInput -> 
               False]}, {
             ImageSize -> 12, BaselinePosition -> Scaled[0.05], ImageSize -> 
              16}], #}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], FontColor -> 
        RGBColor[0.86667, 0.06667, 0.], FontSize -> 13, FontFamily -> 
        "Source Sans Pro", StripOnInput -> False]& )}], 
   Cell[
    StyleData["PacletDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (OverlayBox[{
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"], 
         GraphicsBox[{
           Thickness[0.041667], {
            FaceForm[{
              RGBColor[0.961, 0.961, 0.961], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.545, 22.597}, {
             7.5464, 20.5}, {2.5454, 18.402}, {2.5454, 12.598}, {2.5454, 
             12.597}, {2.5454, 6.7952}, {7.5454, 4.6962}, {7.546, 4.6972}, {
             12.545, 2.5992}, {17.545, 4.6972}, {17.545, 4.6962}, {22.545, 
             6.7952}, {22.545, 12.597}, {22.545, 12.598}, {22.545, 
             18.402}}}]}, {
            FaceForm[{
              RGBColor[0.898, 0.898, 0.898], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 14.057}, {
             16.875, 14.057}, {16.875, 8.3359}, {17., 8.1169}, {21.952, 
             6.0399}, {22.049, 6.2709}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.057}, {6.875, 
             14.057}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 6.0399}, {7., 
             8.1169}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.874, 6.2383}, {6.9515, 4.1733}, {7.0475, 
             3.9423}, {12., 6.0193}, {16.952, 3.9423}, {17.048, 4.1733}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{17.125, 14.139}, {17.125, 19.86}, {16.875,
              19.86}, {16.875, 14.139}, {17., 13.92}, {21.952, 11.843}, {
             22.049, 12.074}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}}, {{{7.125, 14.139}, {7.125, 19.86}, {6.875, 
             19.86}, {6.875, 14.139}, {1.952, 12.074}, {2.048, 11.843}, {7., 
             13.92}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.875, 21.363}, {11.875, 18.356}, {12., 18.303}, {
             12.125, 18.356}, {12.125, 21.363}, {12., 21.415}}}]}, {
            FaceForm[{
              RGBColor[0.749, 0.749, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{8.292, 
              19.859}, {12., 21.415}, {15.707, 19.859}, {12., 18.303}}, {{
              17.5, 19.527}, {17.5, 20.192}, {12., 22.5}, {6.5, 20.192}, {6.5,
               19.528}, {12., 17.219}, {12., 17.219}, {15.7, 18.772}, {17.5, 
              19.527}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 5.4026}, {12.5,
              5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 9.5283}, {21.5, 
              11.207}}, {{21.5, 12.711}, {21.5, 12.291}, {17., 10.403}, {16.5,
               10.613}, {16.5, 10.194}, {15.707, 9.8613}, {16.5, 9.5283}, {
              16.5, 4.8083}, {16.5, 4.8093}, {16.5, 4.3903}, {15.707, 
              4.0573}, {17., 3.5143}, {22.5, 5.8223}, {22.5, 12.291}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
              0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 11.207}, {6.5, 
              9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {7.5, 9.5286}, {8.292, 
              9.8616}, {7.5, 10.194}, {7.5, 10.614}, {7., 10.404}, {2.5, 
              12.291}, {2.5, 12.711}, {1.5, 12.292}, {1.5, 5.8226}, {7., 
              3.5146}, {8.293, 4.0576}, {7.5, 4.3906}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{3.2925, 17.762}, {7.0005, 19.318}, {10.708, 
              17.762}, {7.0005, 16.206}}, {{6.5005, 10.612}, {2.5005, 
              12.291}, {2.5005, 17.01}, {6.5005, 15.332}}, {{7.5005, 
              10.193}, {7.5005, 10.612}, {7.5005, 15.332}, {12., 17.22}, {
              12.5, 17.01}, {12.5, 18.095}, {7.0005, 20.403}, {1.5005, 
              18.095}, {1.5005, 11.626}, {7.0005, 9.3182}, {8.2935, 
              9.8612}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {17.5, 15.332}, {
              21.5, 17.01}}, {{13.293, 17.762}, {17., 19.318}, {20.708, 
              17.762}, {17., 16.207}}, {{17., 20.403}, {11.5, 18.095}, {11.5, 
              17.01}, {12., 17.22}, {16.5, 15.332}, {16.5, 10.612}, {16.5, 
              10.194}, {15.706, 9.861}, {17., 9.318}, {22.5, 11.626}, {22.5, 
              18.095}}}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
              1, 0}}}, {{{16.5, 4.3906}, {12.5, 2.7116}, {12.5, 7.4316}, {
              16.5, 9.1096}}, {{11.5, 2.7116}, {7.4995, 4.3906}, {7.4995, 
              9.1096}, {11.5, 7.4316}}, {{16.5, 10.614}, {16.5, 10.195}, {12.,
               8.3056}, {8.2915, 9.8616}, {7.4995, 10.194}, {7.4995, 
              10.615}, {6.4995, 10.195}, {6.4995, 3.7256}, {12., 1.4176}, {
              17.5, 3.7256}, {17.5, 10.195}}}]}, {
            FaceForm[{
              RGBColor[0.965, 0.765, 0.749], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}}, {{{12., 17.662}, {16.945, 15.586}, {16.945, 9.9376}, {
             12., 7.8636}, {7.055, 9.9376}, {7.055, 15.586}}}]}, {
            FaceForm[{
              RGBColor[0.91, 0.655, 0.635], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 17.763}, {
             11.875, 17.763}, {11.875, 12.041}, {6.952, 9.9757}, {7.048, 
             9.7447}, {12., 11.823}, {16.952, 9.7447}, {17.048, 9.9757}, {
             12.125, 12.041}}}]}, {
            FaceForm[{
              RGBColor[0.867, 0.067, 0.], 
              Opacity[1.]}], 
            
            FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
               1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5, 
              8.5146}, {12.5, 13.234}, {16.5, 14.912}, {16.5, 10.193}}, {{7.5,
               14.912}, {11.5, 13.234}, {11.5, 8.5146}, {7.5, 10.193}}, {{
              15.708, 15.664}, {12., 14.109}, {8.292, 15.664}, {12., 
              17.221}}, {{12., 18.305}, {6.5, 15.996}, {6.5, 9.5286}, {12., 
              7.2206}, {17.5, 9.5286}, {17.5, 15.996}}}]}}, {
          ImageSize -> 12, AspectRatio -> Automatic, ImageSize -> {24., 24.}, 
           PlotRange -> {{0., 24.}, {0., 24.}}}]}, 
        Alignment -> {Right, Bottom}]& )}], 
   Cell[
    StyleData[
    "MainGuideChooser", StyleDefinitions -> 
     StyleData["PacletDirectoryChooser"]], CellGroupingRules -> 
    "NormalGrouping"], 
   Cell[
    StyleData["MainGuideChooserTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        TagBox[
         GridBox[{{
            PaneSelectorBox[{True -> RowBox[{
                 TemplateBox[{}, "PacletDirectoryIconTemplate"], 
                 StyleBox["/", FontColor -> GrayLevel[0.5]]}], False -> 
              RowBox[{
                 TemplateBox[{}, "FileManagerNBIconTemplate"], 
                 StyleBox["/", ShowContents -> False]}]}, 
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "Relative"}]]], 
            InputFieldBox[
             Dynamic[
              CurrentValue[
               EvaluationCell[], {TaggingRules, "MainGuidePageString"}]], 
             String, FieldHint -> "Choose a guide page", 
             BaseStyle -> {FontSize -> 12, FontColor -> GrayLevel[0.25]}, 
             ImageSize -> {Full, 24}, BaselinePosition -> Baseline, 
             FrameMargins -> {{3, 3}, {1, 1}}], 
            ButtonBox[
             StyleBox[
             "\"Browse\[Ellipsis]\"", "Text", FontSize -> 12, StripOnInput -> 
              False], ButtonFunction :> 
             With[{RSNB`nbo = EvaluationNotebook[], RSNB`cell = 
                EvaluationCell[]}, 
               WithCleanup[NotebookDelete[
                  Cells[RSNB`cell, AttachedCell -> True]]; 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = True, 
                
                Module[{RSNB`initial$, RSNB`res$}, 
                 RSNB`initial$ = SelectFirst[{
                    FileNameJoin[{
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], "Documentation", $Language, 
                    "Guides"}], 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Quiet[
                    NotebookDirectory[RSNB`nbo]]}, DirectoryQ, 
                    Directory[]]; 
                 RSNB`res$ = SystemDialogInput["FileOpen", RSNB`initial$]; If[
                   And[
                    StringQ[
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]], 
                    StringQ[RSNB`res$], 
                    StringStartsQ[RSNB`res$, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]]]], RSNB`res$ = StringReplace[
                    StringDelete[RSNB`res$, 
                    StringExpression[StartOfString, 
                    With[{RSNB`cell$ = First[
                    Cells[
                    RSNB`nbo, CellStyle -> "PacletDirectoryChooser", CellTags -> 
                    "PacletManifestPanel"], $Failed]}, 
                    Replace[{
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectoryType"}], 
                    CurrentValue[
                    RSNB`cell$, {TaggingRules, "PacletDirectory"}]}, {{
                    "Notebook", 
                    Blank[]} :> Quiet[
                    NotebookDirectory[RSNB`nbo]], {"Custom", 
                    Pattern[RSNB`dir, 
                    Blank[]]} :> RSNB`dir}]], 
                    Alternatives[$PathnameSeparator, ""]]], "\\" -> "/"]; 
                   CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = True,
                    CurrentValue[RSNB`cell, {TaggingRules, "Relative"}] = 
                   False]; If[
                   StringQ[RSNB`res$], 
                   CurrentValue[
                    RSNB`cell, {TaggingRules, "MainGuidePageString"}] = 
                   RSNB`res$]], 
                CurrentValue[RSNB`cell, {TaggingRules, "Refreshing"}] = 
                False]], Method -> "Queued", ImageSize -> {Automatic, 24}, 
             Enabled -> Dynamic[
               Not[
                CurrentValue[
                 EvaluationCell[], {TaggingRules, "Refreshing"}]]], 
             Appearance -> Automatic, Evaluator -> Automatic]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
          False, GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "ColumnsIndexed" -> {2 -> 0.2}, "Rows" -> {{Automatic}}}, 
          BaseStyle -> {"Text"}], "Grid"], Background -> GrayLevel[0.98], 
        FrameMargins -> 10, FrameStyle -> GrayLevel[0.8], ImageSize -> {
          Scaled[1], Automatic}, StripOnInput -> False]& )}], 
   Cell[
    StyleData["AttachedMessage"], Deletable -> True, 
    CellMargins -> {{60, 40}, {15, 5}}]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Microsoft Windows (64-bit) (November 10, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"29fd1373-19ae-4acd-8424-ca6f9a3694eb"
]

